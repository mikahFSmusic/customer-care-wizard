{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/CustomerInfo.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { MDBCol, MDBFormInline, MDBIcon } from \"mdbreact\";\nimport Fuse from \"fuse.js\";\nimport { CustomerCard } from \"./CustomerComponents/CustomerCard\"; // API Call to Kustomer for list of all customers\n\nconst kustomerAPIKey = process.env.REACT_APP_KUSTOMER_API_KEY;\nconst xhr = new XMLHttpRequest();\nxhr.responseType = \"json\";\nlet headers = new Headers({\n  'authorization': `Bearer ${kustomerAPIKey}`,\n  'content-type': 'application/json'\n});\nlet initObject = {\n  method: 'GET',\n  headers: headers\n};\nconst baseURL = \"https://api.kustomerapp.com\";\nconst proxyURL = \"https://cors-anywhere.herokuapp.com/\";\nconst currentPage = 1;\nconst pageSize = 1000;\n\nconst fetchCustomers = async page => {\n  try {\n    const response = await fetch(`${proxyURL}${baseURL}/v1/customers?page=${page}&pageSize=${pageSize}`, initObject);\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nlet allCustomers = undefined; // const getCustomers = async (page: number) => {\n//   let proxyUrl: string = \"https://cors-anywhere.herokuapp.com/\";\n//   let requestAddition: string = \"/v1/customers?page=1&pageSize=1000\"\n//   let requestUrl: string = \"https://api.kustomerapp.com\";\n//   try {\n//     xhr.open(\"GET\", proxyUrl + requestUrl + requestAddition, true);\n//     xhr.setRequestHeader(\"authorization\", `Bearer ${kustomerAPIKey}`);\n//     xhr.setRequestHeader(\"content-type\", \"application/json\");\n//     xhr.onreadystatechange = () => {\n//       if (xhr.readyState === XMLHttpRequest.DONE) {\n//         let status = xhr.status;\n//         if (status === 0 || (status >= 200 && status < 400)) {\n//           let response = xhr.response;\n//           let resJSON = JSON.parse(JSON.stringify(response));\n//           allCustomers = resJSON.data;\n//           nextUrl = resJSON.links.next\n//           numPages = resJSON.meta.totalPages\n//           return resJSON.data\n//         }\n//       }\n//     };\n//     xhr.send();\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n// Fuse fuzzy search\n\nconst searchCustomers = (customers, pattern) => {\n  const options = {\n    keys: [\"attributes.displayName\", \"attributes.name\"]\n  };\n  const fuse = new Fuse(customers, options);\n  return fuse.search(pattern);\n}; // COMPONENT\n\n\nexport const CustomerInfo = () => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [validCustomers, setValidCustomers] = useState();\n  const [loading, setLoading] = useState(true);\n  const [customers, setCustomers] = useState([]);\n  const [numPages, setNumPages] = useState(1);\n  useEffect(() => {\n    let currentPage = numPages;\n    setLoading(true);\n    fetchCustomers(numPages).then(data => {\n      setNumPages(data.meta.totalPages);\n      console.log(numPages);\n    });\n\n    while (currentPage <= numPages) {\n      fetchCustomers(currentPage).then(data => {\n        setCustomers(data.data);\n      });\n      currentPage++;\n    }\n\n    setLoading(false);\n  }, []);\n\n  const handleSearchChange = async event => {\n    event.preventDefault();\n    const el = event.target;\n    const value = el.value;\n    setSearchValue(value);\n\n    if (allCustomers !== undefined) {\n      console.log(\"customer data loaded\");\n      setValidCustomers(searchCustomers(allCustomers, value));\n    } else {\n      console.log(\"loading customer data\");\n    }\n  }; // Styles\n\n\n  const customerInfoStyle = {\n    borderRight: \"2px solid gray\",\n    margin: \"10px\",\n    height: \"95%\",\n    borderRadius: \"10px\",\n    padding: \"10px\"\n  };\n  const resultsStyles = {\n    height: \"90vh\",\n    overflow: \"scroll\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: customerInfoStyle,\n    className: \"z-depth-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Customer Info\"), /*#__PURE__*/React.createElement(MDBFormInline, {\n    className: \"md-form\",\n    style: {\n      display: \"flex\",\n      alignContent: \"center\"\n    },\n    onSubmit: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    icon: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: searchValue,\n    className: \"form-control form-control-lg ml-3 w-75\",\n    type: \"text\",\n    placeholder: \"Search\",\n    \"aria-label\": \"Search\",\n    onChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: resultsStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, allCustomers ? validCustomers === null || validCustomers === void 0 ? void 0 : validCustomers.map(customer => /*#__PURE__*/React.createElement(CustomerCard, {\n    key: customer.item.id,\n    customerData: customer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  })) : \"Loading customer information! Try searching again in a couple of seconds\")));\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/CustomerInfo.tsx"],"names":["React","useEffect","useState","MDBCol","MDBFormInline","MDBIcon","Fuse","CustomerCard","kustomerAPIKey","process","env","REACT_APP_KUSTOMER_API_KEY","xhr","XMLHttpRequest","responseType","headers","Headers","initObject","method","baseURL","proxyURL","currentPage","pageSize","fetchCustomers","page","response","fetch","data","json","console","log","error","allCustomers","undefined","searchCustomers","customers","pattern","options","keys","fuse","search","CustomerInfo","searchValue","setSearchValue","validCustomers","setValidCustomers","loading","setLoading","setCustomers","numPages","setNumPages","then","meta","totalPages","handleSearchChange","event","preventDefault","el","target","value","customerInfoStyle","borderRight","margin","height","borderRadius","padding","resultsStyles","overflow","display","alignContent","map","customer","item","id"],"mappings":";AAAA,OAAOA,KAAP,IAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,OAAhC,QAA+C,UAA/C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,YAAT,QAA6B,mCAA7B,C,CAEA;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,0BAAnC;AACA,MAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,GAAG,CAACE,YAAJ,GAAmB,MAAnB;AAEA,IAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,mBAAkB,UAASR,cAAe,EADlB;AAExB,kBAAgB;AAFQ,CAAZ,CAAd;AAKA,IAAIS,UAAU,GAAG;AACfC,EAAAA,MAAM,EAAE,KADO;AACAH,EAAAA,OAAO,EAAEA;AADT,CAAjB;AAIA,MAAMI,OAAe,GAAG,6BAAxB;AACA,MAAMC,QAAgB,GAAG,sCAAzB;AACA,MAAMC,WAAmB,GAAG,CAA5B;AACA,MAAMC,QAAgB,GAAE,IAAxB;;AAEA,MAAMC,cAAc,GAAG,MAAOC,IAAP,IAAwB;AAC7C,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEN,QAAS,GAAED,OAAQ,sBAAqBK,IAAK,aAAYF,QAAS,EAD3C,EAE1BL,UAF0B,CAA5B;AAIA,UAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACD,GARD,CAQE,OAAOI,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,CAZD;;AAeA,IAAIC,YAAiB,GAAGC,SAAxB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,eAAe,GAAG,CAACC,SAAD,EAAiBC,OAAjB,KAAqC;AAC3D,QAAMC,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE,CAAC,wBAAD,EAA2B,iBAA3B;AADQ,GAAhB;AAGA,QAAMC,IAAI,GAAG,IAAIjC,IAAJ,CAAS6B,SAAT,EAAoBE,OAApB,CAAb;AACA,SAAOE,IAAI,CAACC,MAAL,CAAYJ,OAAZ,CAAP;AACD,CAND,C,CAQA;;;AACA,OAAO,MAAMK,YAAY,GAAG,MAAM;AAChC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAS,EAAT,CAA9C;AACA,QAAM,CAAC0C,cAAD,EAAiBC,iBAAjB,IAAsC3C,QAAQ,EAApD;AACA,QAAM,CAAC4C,OAAD,EAAUC,UAAV,IAAwB7C,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACiC,SAAD,EAAYa,YAAZ,IAA4B9C,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC+C,QAAD,EAAWC,WAAX,IAA0BhD,QAAQ,CAAC,CAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,WAAW,GAAG4B,QAAlB;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAxB,IAAAA,cAAc,CAAC0B,QAAD,CAAd,CAAyBE,IAAzB,CAA8BxB,IAAI,IAAI;AACpCuB,MAAAA,WAAW,CAACvB,IAAI,CAACyB,IAAL,CAAUC,UAAX,CAAX;AACAxB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ;AACD,KAHD;;AAIA,WAAO5B,WAAW,IAAI4B,QAAtB,EAAgC;AAC9B1B,MAAAA,cAAc,CAACF,WAAD,CAAd,CAA4B8B,IAA5B,CAAiCxB,IAAI,IAAI;AACvCqB,QAAAA,YAAY,CAACrB,IAAI,CAACA,IAAN,CAAZ;AACD,OAFD;AAGAN,MAAAA,WAAW;AACZ;;AACD0B,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMO,kBAAkB,GAAG,MAAOC,KAAP,IAAgD;AACzEA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,EAAE,GAAGF,KAAK,CAACG,MAAjB;AACA,UAAMC,KAAK,GAAGF,EAAE,CAACE,KAAjB;AACAhB,IAAAA,cAAc,CAACgB,KAAD,CAAd;;AACA,QAAI3B,YAAY,KAAKC,SAArB,EAAgC;AAC9BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAe,MAAAA,iBAAiB,CAACX,eAAe,CAACF,YAAD,EAAe2B,KAAf,CAAhB,CAAjB;AACD,KAHD,MAGO;AACL9B,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AACF,GAXD,CAtBgC,CAmChC;;;AACA,QAAM8B,iBAAiB,GAAG;AACxBC,IAAAA,WAAW,EAAE,gBADW;AAExBC,IAAAA,MAAM,EAAE,MAFgB;AAGxBC,IAAAA,MAAM,EAAE,KAHgB;AAIxBC,IAAAA,YAAY,EAAE,MAJU;AAKxBC,IAAAA,OAAO,EAAE;AALe,GAA1B;AAQA,QAAMC,aAAa,GAAG;AACpBH,IAAAA,MAAM,EAAE,MADY;AAEpBI,IAAAA,QAAQ,EAAE;AAFU,GAAtB;AAKA,sBACE;AAAK,IAAA,KAAK,EAAEP,iBAAZ;AAA+B,IAAA,SAAS,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAC,SADZ;AAEE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,YAAY,EAAE;AAAjC,KAFT;AAGE,IAAA,QAAQ,EAAEf,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AACE,IAAA,KAAK,EAAEZ,WADT;AAEE,IAAA,SAAS,EAAC,wCAFZ;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,QAJd;AAKE,kBAAW,QALb;AAME,IAAA,QAAQ,EAAEY,kBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,eAiBE;AAAK,IAAA,KAAK,EAAEY,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlC,YAAY,GACTY,cADS,aACTA,cADS,uBACTA,cAAc,CAAE0B,GAAhB,CAAqBC,QAAD,iBAClB,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,QAAQ,CAACC,IAAT,CAAcC,EAAjC;AAAqC,IAAA,YAAY,EAAEF,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADS,GAIT,0EALN,CAjBF,CADF,CADF;AA6BD,CA9EM","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { MDBCol, MDBFormInline, MDBIcon } from \"mdbreact\";\nimport Fuse from \"fuse.js\";\nimport { CustomerCard } from \"./CustomerComponents/CustomerCard\";\n\n// API Call to Kustomer for list of all customers\nconst kustomerAPIKey = process.env.REACT_APP_KUSTOMER_API_KEY;\nconst xhr = new XMLHttpRequest();\nxhr.responseType = \"json\"\n\nlet headers = new Headers({\n  'authorization': `Bearer ${kustomerAPIKey}`,\n  'content-type': 'application/json'\n})\n\nlet initObject = {\n  method: 'GET', headers: headers\n}\n\nconst baseURL: string = \"https://api.kustomerapp.com\"\nconst proxyURL: string = \"https://cors-anywhere.herokuapp.com/\"\nconst currentPage: number = 1\nconst pageSize: number= 1000\n\nconst fetchCustomers = async (page: number) => {\n  try {\n    const response = await fetch(\n      `${proxyURL}${baseURL}/v1/customers?page=${page}&pageSize=${pageSize}`,\n      initObject\n    )\n    const data = await response.json();\n    console.log(data)\n    return data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\nlet allCustomers: any = undefined;\n\n// const getCustomers = async (page: number) => {\n//   let proxyUrl: string = \"https://cors-anywhere.herokuapp.com/\";\n//   let requestAddition: string = \"/v1/customers?page=1&pageSize=1000\"\n//   let requestUrl: string = \"https://api.kustomerapp.com\";\n\n//   try {\n//     xhr.open(\"GET\", proxyUrl + requestUrl + requestAddition, true);\n//     xhr.setRequestHeader(\"authorization\", `Bearer ${kustomerAPIKey}`);\n//     xhr.setRequestHeader(\"content-type\", \"application/json\");\n//     xhr.onreadystatechange = () => {\n//       if (xhr.readyState === XMLHttpRequest.DONE) {\n//         let status = xhr.status;\n//         if (status === 0 || (status >= 200 && status < 400)) {\n//           let response = xhr.response;\n//           let resJSON = JSON.parse(JSON.stringify(response));\n//           allCustomers = resJSON.data;\n//           nextUrl = resJSON.links.next\n//           numPages = resJSON.meta.totalPages\n//           return resJSON.data\n//         }\n//       }\n//     };\n//     xhr.send();\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n\n// Fuse fuzzy search\nconst searchCustomers = (customers: any, pattern: string) => {\n  const options = {\n    keys: [\"attributes.displayName\", \"attributes.name\"],\n  };\n  const fuse = new Fuse(customers, options);\n  return fuse.search(pattern);\n};\n\n// COMPONENT\nexport const CustomerInfo = () => {\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [validCustomers, setValidCustomers] = useState<Array<Object>>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [customers, setCustomers] = useState([])\n  const [numPages, setNumPages] = useState(1)\n  useEffect(() => {\n    let currentPage = numPages\n    setLoading(true)\n    fetchCustomers(numPages).then(data => {\n      setNumPages(data.meta.totalPages)\n      console.log(numPages)\n    })\n    while (currentPage <= numPages) {\n      fetchCustomers(currentPage).then(data => {\n        setCustomers(data.data)\n      })\n      currentPage++;\n    }\n    setLoading(false)\n  }, [])\n\n  const handleSearchChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    const el = event.target as HTMLInputElement;\n    const value = el.value;\n    setSearchValue(value);\n    if (allCustomers !== undefined) {\n      console.log(\"customer data loaded\");\n      setValidCustomers(searchCustomers(allCustomers, value));\n    } else {\n      console.log(\"loading customer data\");\n    }\n  };\n\n  // Styles\n  const customerInfoStyle = {\n    borderRight: \"2px solid gray\",\n    margin: \"10px\",\n    height: \"95%\",\n    borderRadius: \"10px\",\n    padding: \"10px\"\n  };\n\n  const resultsStyles = {\n    height: \"90vh\",\n    overflow: \"scroll\",\n  };\n\n  return (\n    <div style={customerInfoStyle} className=\"z-depth-1\">\n      <MDBCol md=\"12\">\n        <h2>Customer Info</h2>\n        <MDBFormInline\n          className=\"md-form\"\n          style={{ display: \"flex\", alignContent: \"center\" }}\n          onSubmit={handleSearchChange}\n        >\n          <MDBIcon icon=\"search\"></MDBIcon>\n          <input\n            value={searchValue}\n            className=\"form-control form-control-lg ml-3 w-75\"\n            type=\"text\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={handleSearchChange}\n          ></input>\n        </MDBFormInline>\n        <div style={resultsStyles}>\n          {allCustomers\n            ? validCustomers?.map((customer: any) => (\n                <CustomerCard key={customer.item.id} customerData={customer} />\n              ))\n            : \"Loading customer information! Try searching again in a couple of seconds\"}\n        </div>\n      </MDBCol>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}