{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/SubmitConfirmation.tsx\";\nimport React from 'react';\nimport { ModalBody } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nconst SubmitConfirmation = props => {\n  const formatData = data => {\n    let elementObjects = {};\n\n    if (data !== undefined) {\n      const dataEntries = Object.entries(data);\n\n      for (const [key, value] of dataEntries) {\n        let thisObject = {\n          key,\n          value\n        };\n        elementObjects = { ...elementObjects,\n          thisObject\n        };\n      }\n    }\n\n    return elementObjects;\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: props.show,\n    onHide: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Review Damage/Defect Submission\")), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, JSON.stringify(formatData(props.data), null, 1)), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default SubmitConfirmation;","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/SubmitConfirmation.tsx"],"names":["React","ModalBody","Modal","Button","SubmitConfirmation","props","formatData","data","elementObjects","undefined","dataEntries","Object","entries","key","value","thisObject","show","onHide","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAcA,MAAMC,kBAAkB,GAAIC,KAAD,IAAoC;AAE7D,QAAMC,UAAU,GAAIC,IAAD,IAAc;AAC/B,QAAIC,cAAc,GAAG,EAArB;;AACA,QAAID,IAAI,KAAKE,SAAb,EAAwB;AACtB,YAAMC,WAAW,GAAGC,MAAM,CAACC,OAAP,CAAeL,IAAf,CAApB;;AACA,WAAK,MAAM,CAACM,GAAD,EAAMC,KAAN,CAAX,IAA2BJ,WAA3B,EAAwC;AACtC,YAAIK,UAAyB,GAAG;AAACF,UAAAA,GAAD;AAAMC,UAAAA;AAAN,SAAhC;AACAN,QAAAA,cAAc,GAAG,EAAC,GAAGA,cAAJ;AAAoBO,UAAAA;AAApB,SAAjB;AACD;AAEF;;AACD,WAAOP,cAAP;AACD,GAXD;;AAaA,sBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,KAAK,CAACW,IAAnB;AAAyB,IAAA,MAAM,EAAEX,KAAK,CAACY,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,CADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,SAAL,CAAeb,UAAU,CAACD,KAAK,CAACE,IAAP,CAAzB,EAAuC,IAAvC,EAA6C,CAA7C,CADH,CAJF,eAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF;AAWD,CA1BD;;AA4BA,eAAeH,kBAAf","sourcesContent":["import React from 'react';\nimport { ModalBody } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { createNoSubstitutionTemplateLiteral } from 'typescript';\n\ntype SubmitConfirmationProps = {\n  show: boolean\n  onHide: () => void\n  data: any\n}\n\ntype ElementObject = {\n  key: string,\n  value: any\n}\n\nconst SubmitConfirmation = (props: SubmitConfirmationProps) => {\n\n  const formatData = (data:any) => {\n    let elementObjects = {}\n    if (data !== undefined) {\n      const dataEntries = Object.entries(data);\n      for (const [key, value] of dataEntries) {\n        let thisObject: ElementObject = {key, value}\n        elementObjects = {...elementObjects, thisObject}\n      }\n\n    }\n    return elementObjects\n  }\n\n  return(\n    <Modal show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n          <Modal.Title>Review Damage/Defect Submission</Modal.Title>\n      </Modal.Header>\n      <ModalBody>\n        {JSON.stringify(formatData(props.data), null, 1)}\n      </ModalBody>\n      <Button type=\"submit\">Submit</Button>\n    </Modal>\n  );\n};\n\nexport default SubmitConfirmation;"]},"metadata":{},"sourceType":"module"}