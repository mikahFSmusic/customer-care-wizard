{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx\";\nimport React, { useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport OfferDiscount from \"./FormComponents/OfferDiscount\";\nimport RefundAmount from \"./FormComponents/RefundAmount\";\nimport ItemAmount from \"./FormComponents/ItemAmount\";\nimport DamageDescription from \"./FormComponents/FileCase/DamageDescription\";\nimport ActionNeeded from \"./FormComponents/FileCase/ActionNeeded\";\nimport ReplacementOrder from \"./FormComponents/ReplacementOrder\";\nimport NarvarReturn from \"./FormComponents/NarvarReturn\";\nimport SubmitConfirmation from \"./SubmitConfirmation\";\nimport { addDamagedDefect } from \"./../../API\";\nimport { ImageUpload } from \"./FormComponents/ImageUpload\";\nimport { CustomerExplore } from '../CustomerExplore';\n\nconst DDForm = props => {\n  // Damage Level\n  let level = \"\";\n\n  const setLevel = newLevel => {\n    level = newLevel;\n  };\n  /* STATE HOOKS */\n\n\n  const [levelHeadElement, setLevelHeadElement] = useState();\n  const [customerData, setCustomerData] = useState();\n  const [imageUploadElements, setImageUploadElements] = useState([]);\n  const [offerDiscountElement, setOfferDiscountElement] = useState();\n  const [refundAmountElement, setRefundAmountElement] = useState();\n  const [narvarReturnElement, setNarvarReturnElement] = useState();\n  const [itemAmountElement, setItemAmountElement] = useState();\n  const [fileCaseElements, setFileCaseElements] = useState([]);\n  const [replacementOrderElement, setReplacementOrderElement] = useState(); // Submission Confirmation Modal\n\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState({});\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // Resets components on level change\n\n  const clearDynamicComponents = () => {\n    setOfferDiscountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }));\n    setRefundAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }\n    }));\n    setNarvarReturnElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 28\n      }\n    }));\n    setItemAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 26\n      }\n    }));\n    setFileCaseElements([/*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }\n    })]);\n    setReplacementOrderElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  const handleCustomerClick = event => {}; // Image Upload\n\n\n  const [imageURLs, setImageURLs] = useState();\n  useEffect(() => {\n    imageURLs === null || imageURLs === void 0 ? void 0 : imageURLs.forEach(url => {\n      setImageUploadElements(prevElements => [...prevElements, /*#__PURE__*/React.createElement(\"img\", {\n        width: \"80px\",\n        height: \"80px\",\n        src: url,\n        alt: \"damage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      })]);\n    });\n  }, [imageURLs]);\n\n  const handleFileChange = async event => {\n    const url = \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\";\n    const el = event.target;\n    const newURL = el.files ? el.files : url;\n    const images = await handleFileUpload(newURL);\n    let urls = [];\n    images.forEach(image => {\n      urls.push(image[\"location\"]);\n    });\n    setImageURLs(urls);\n  };\n\n  const handleFileUpload = async files => {\n    const imageForm = new FormData(); // appends image data for submission to S3 bucket\n\n    for (let i = 0; i < files.length; i++) {\n      imageForm.append(\"images\", files[i]);\n    } //TODO: this needs to change for live version (won't work online)\n\n\n    const url = `http://localhost:4000/upload-damage-image`;\n    const config = {\n      method: \"POST\",\n      body: imageForm\n    };\n\n    try {\n      const req = await fetch(url, config); // console.log(req);\n\n      if (req.ok) {\n        const res = await req.json(); // console.log(res);\n\n        if (res.success) {\n          return res.images;\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Damage Level Change Handler\n\n\n  const handleLevelChange = event => {\n    const el = event.target;\n    const value = el.value;\n    clearDynamicComponents();\n    setLevel(value);\n\n    if (value === \"Level 1\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 27\n        }\n      }, \"Level One\"));\n      setImageUploadElements([/*#__PURE__*/React.createElement(ImageUpload, {\n        onChange: handleFileChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 31\n        }\n      })]);\n      setOfferDiscountElement( /*#__PURE__*/React.createElement(OfferDiscount, {\n        name: \"offerDiscount\",\n        ref: register({\n          required: true\n        }),\n        onChange: handleOfferDiscount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }));\n    } else if (value === \"Level 2\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 27\n        }\n      }, \"Level Two\"));\n      setImageUploadElements([/*#__PURE__*/React.createElement(ImageUpload, {\n        onChange: handleFileChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 31\n        }\n      })]);\n      setOfferDiscountElement( /*#__PURE__*/React.createElement(OfferDiscount, {\n        name: \"offerDiscount\",\n        ref: register({\n          required: true\n        }),\n        onChange: handleOfferDiscount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }));\n    } else if (value === \"Level 3\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 27\n        }\n      }, \"Level Three\"));\n      setImageUploadElements([/*#__PURE__*/React.createElement(ImageUpload, {\n        onChange: handleFileChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 31\n        }\n      })]);\n      setItemAmountElement( /*#__PURE__*/React.createElement(ItemAmount, {\n        name: \"itemAmount\",\n        onChange: handleItemAmount,\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }));\n    }\n  }; // Handle Offer Discount\n\n\n  const handleOfferDiscount = event => {\n    const el = event.target;\n    const value = el.value; // Reset initial values if switched\n\n    setItemAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 26\n      }\n    }));\n    setRefundAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 28\n      }\n    }));\n    setNarvarReturnElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 28\n      }\n    }));\n\n    if (level === \"Level 1\") {\n      if (value === \"Discount\") {// Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement( /*#__PURE__*/React.createElement(RefundAmount, {\n          name: \"refundAmount\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }\n        })); //Submit\n      } else if (value === \"Replace\") {\n        setNarvarReturnElement( /*#__PURE__*/React.createElement(NarvarReturn, {\n          name: \"narvarReturn\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }\n        }));\n      }\n    } else if (level === \"Level 2\") {\n      if (value === \"Discount\") {// Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement( /*#__PURE__*/React.createElement(RefundAmount, {\n          name: \"refundAmount\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 11\n          }\n        }));\n      } else if (value === \"Replace\") {\n        setItemAmountElement( /*#__PURE__*/React.createElement(ItemAmount, {\n          name: \"itemAmount\",\n          onChange: handleItemAmount,\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  };\n\n  const handleItemAmount = event => {\n    const el = event.target;\n    const value = el.value; // reset values if change\n\n    setFileCaseElements([/*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 26\n      }\n    })]);\n    setReplacementOrderElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 32\n      }\n    }));\n\n    if (value === \"Over $50\") {\n      setFileCaseElements([/*#__PURE__*/React.createElement(DamageDescription, {\n        name: \"damageDescription\",\n        key: \"damageDescription\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ActionNeeded, {\n        name: \"actionNeeded\",\n        key: \"actionNeeded\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }\n      })]);\n    } else if (value === \"Under $50\") {\n      setReplacementOrderElement( /*#__PURE__*/React.createElement(ReplacementOrder, {\n        name: \"replacementOrder\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleReview = formData => {\n    setData(formData);\n    handleShow();\n  };\n\n  const onSubmit = formData => {\n    console.log(\"Pre-append\");\n    console.log(formData);\n    let outputForm = new FormData();\n\n    for (let key in formData) {\n      console.log(key);\n      outputForm.append(key, formData[key]);\n    }\n\n    outputForm.append(\"images\", JSON.stringify(imageURLs)); // stores form to Mongo\n\n    let outputData = {};\n\n    for (const [key, value] of outputForm) {\n      console.log(\"key: \" + key + \", value: \" + value);\n      outputData[key] = value;\n    }\n\n    addDamagedDefect(outputData).then(({\n      status\n    }) => {\n      if (status !== 201) {\n        throw new Error(\"Error saving data\");\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const formContainerStyles = {\n    margin: \"10px\",\n    height: \"95%\"\n  };\n  const formStyles = {\n    borderRadius: \"10px\",\n    padding: \"10px\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: formContainerStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    method: \"post\",\n    encType: \"multipart/form-data\",\n    action: \"/submit-damaged-defect\",\n    style: formStyles,\n    className: \"z-depth-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, \"Damaged/Defective Form\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, \"Customer Information\"), /*#__PURE__*/React.createElement(CustomerExplore, {\n    onClick: handleCustomerClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, \"Order #\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"orderNumber\",\n    placeholder: \"Order #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }), errors.orderNumber && \"Order # is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, \"Vendor\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"vendor\",\n    as: \"select\",\n    defaultValue: \"Choose Vendor...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }), vendorList.map(vendor => /*#__PURE__*/React.createElement(\"option\", {\n    key: vendor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, vendor))), errors.vendor && \"Vendor required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, \"SKU #\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"skuNumber\",\n    placeholder: \"SKU #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }), errors.skuNumber && \"SKU # is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, \"Damage Level\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"damageLevel\",\n    as: \"select\",\n    defaultValue: \"Damage Level...\",\n    ref: register({\n      required: true\n    }),\n    onChange: handleLevelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }), damageLevels.map(level => /*#__PURE__*/React.createElement(\"option\", {\n    key: level,\n    value: level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, level))), errors.damageLevel && \"Please select damage level\"), levelHeadElement, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }\n  }, imageUploadElements), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, offerDiscountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, narvarReturnElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }, refundAmountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  }, itemAmountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }\n  }, fileCaseElements), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }\n  }, replacementOrderElement), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit(handleReview),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }\n  }, \"Review\"), /*#__PURE__*/React.createElement(SubmitConfirmation, {\n    data: data,\n    show: show,\n    onHide: handleClose,\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DDForm;\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx"],"names":["React","useEffect","Form","Button","useState","useForm","OfferDiscount","RefundAmount","ItemAmount","DamageDescription","ActionNeeded","ReplacementOrder","NarvarReturn","SubmitConfirmation","addDamagedDefect","ImageUpload","CustomerExplore","DDForm","props","level","setLevel","newLevel","levelHeadElement","setLevelHeadElement","customerData","setCustomerData","imageUploadElements","setImageUploadElements","offerDiscountElement","setOfferDiscountElement","refundAmountElement","setRefundAmountElement","narvarReturnElement","setNarvarReturnElement","itemAmountElement","setItemAmountElement","fileCaseElements","setFileCaseElements","replacementOrderElement","setReplacementOrderElement","show","setShow","data","setData","register","handleSubmit","errors","clearDynamicComponents","handleCustomerClick","event","imageURLs","setImageURLs","forEach","url","prevElements","handleFileChange","el","target","newURL","files","images","handleFileUpload","urls","image","push","imageForm","FormData","i","length","append","config","method","body","req","fetch","ok","res","json","success","error","console","log","handleLevelChange","value","required","handleOfferDiscount","handleItemAmount","handleClose","handleShow","handleReview","formData","onSubmit","outputForm","key","JSON","stringify","outputData","then","status","Error","catch","formContainerStyles","margin","height","formStyles","borderRadius","padding","orderNumber","vendorList","map","vendor","skuNumber","damageLevels","damageLevel"],"mappings":";AAAA,OAAOA,KAAP,IAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAgB;AAC7B;AACA,MAAIC,KAAa,GAAG,EAApB;;AACA,QAAMC,QAAQ,GAAIC,QAAD,IAAsB;AACrCF,IAAAA,KAAK,GAAGE,QAAR;AACD,GAFD;AAIA;;;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,EAAxD;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,EAAhD;AACA,QAAM,CAACsB,mBAAD,EAAsBC,sBAAtB,IAAgDvB,QAAQ,CAE5D,EAF4D,CAA9D;AAIA,QAAM,CAACwB,oBAAD,EAAuBC,uBAAvB,IAAkDzB,QAAQ,EAAhE;AAGA,QAAM,CAAC0B,mBAAD,EAAsBC,sBAAtB,IAAgD3B,QAAQ,EAA9D;AACA,QAAM,CAAC4B,mBAAD,EAAsBC,sBAAtB,IAAgD7B,QAAQ,EAA9D;AACA,QAAM,CAAC8B,iBAAD,EAAoBC,oBAApB,IAA4C/B,QAAQ,EAA1D;AACA,QAAM,CAACgC,gBAAD,EAAmBC,mBAAnB,IAA0CjC,QAAQ,CACtD,EADsD,CAAxD;AAGA,QAAM,CAACkC,uBAAD,EAA0BC,0BAA1B,IAAwDnC,QAAQ,EAAtE,CAvB6B,CA2B7B;;AACA,QAAM,CAACoC,IAAD,EAAOC,OAAP,IAAkBrC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACsC,IAAD,EAAOC,OAAP,IAAkBvC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEwC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCzC,OAAO,EAAlD,CA9B6B,CAgC7B;;AACA,QAAM0C,sBAAsB,GAAG,MAAM;AACnClB,IAAAA,uBAAuB,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAvB;AACAE,IAAAA,sBAAsB,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAtB;AACAE,IAAAA,sBAAsB,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAtB;AACAE,IAAAA,oBAAoB,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAApB;AACAE,IAAAA,mBAAmB,CAAC,cAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAD,CAAnB;AACAE,IAAAA,0BAA0B,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAA1B;AACD,GAPD;;AASA,QAAMS,mBAAmB,GAAIC,KAAD,IAAyD,CAEpF,CAFD,CA1C6B,CA8C7B;;;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B/C,QAAQ,EAA1C;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdiD,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,OAAX,CAAoBC,GAAD,IAAS;AAC1B1B,MAAAA,sBAAsB,CAAE2B,YAAD,IAAkB,CACvC,GAAGA,YADoC,eAEvC;AAAK,QAAA,KAAK,EAAC,MAAX;AAAkB,QAAA,MAAM,EAAC,MAAzB;AAAgC,QAAA,GAAG,EAAED,GAArC;AAA0C,QAAA,GAAG,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFuC,CAAnB,CAAtB;AAID,KALD;AAMD,GAPQ,EAON,CAACH,SAAD,CAPM,CAAT;;AASA,QAAMK,gBAAgB,GAAG,MACvBN,KADuB,IAEpB;AACH,UAAMI,GAAG,GACP,yHADF;AAEA,UAAMG,EAAE,GAAGP,KAAK,CAACQ,MAAjB;AACA,UAAMC,MAAM,GAAGF,EAAE,CAACG,KAAH,GAAWH,EAAE,CAACG,KAAd,GAAsBN,GAArC;AACA,UAAMO,MAAM,GAAG,MAAMC,gBAAgB,CAACH,MAAD,CAArC;AACA,QAAII,IAAmB,GAAG,EAA1B;AACAF,IAAAA,MAAM,CAACR,OAAP,CAAgBW,KAAD,IAAgB;AAC7BD,MAAAA,IAAI,CAACE,IAAL,CAAUD,KAAK,CAAC,UAAD,CAAf;AACD,KAFD;AAGAZ,IAAAA,YAAY,CAACW,IAAD,CAAZ;AACD,GAbD;;AAeA,QAAMD,gBAAgB,GAAG,MAAOF,KAAP,IAAsB;AAC7C,UAAMM,SAAS,GAAG,IAAIC,QAAJ,EAAlB,CAD6C,CAG7C;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACS,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCF,MAAAA,SAAS,CAACI,MAAV,CAAiB,QAAjB,EAA2BV,KAAK,CAACQ,CAAD,CAAhC;AACD,KAN4C,CAQ7C;;;AACA,UAAMd,GAAG,GAAI,2CAAb;AAEA,UAAMiB,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAEP;AAFO,KAAf;;AAIA,QAAI;AACF,YAAMQ,GAAG,GAAG,MAAMC,KAAK,CAACrB,GAAD,EAAMiB,MAAN,CAAvB,CADE,CAEF;;AACA,UAAIG,GAAG,CAACE,EAAR,EAAY;AACV,cAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAlB,CADU,CAEV;;AACA,YAAID,GAAG,CAACE,OAAR,EAAiB;AACf,iBAAOF,GAAG,CAAChB,MAAX;AACD;AACF;AACF,KAVD,CAUE,OAAOmB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GA5BD,CAxE6B,CAsG7B;;;AACA,QAAMG,iBAAiB,GAAIjC,KAAD,IAA6B;AACrD,UAAMO,EAAE,GAAGP,KAAK,CAACQ,MAAjB;AACA,UAAM0B,KAAK,GAAG3B,EAAE,CAAC2B,KAAjB;AACApC,IAAAA,sBAAsB;AACtB3B,IAAAA,QAAQ,CAAC+D,KAAD,CAAR;;AACA,QAAIA,KAAK,KAAK,SAAd,EAAyB;AACvB5D,MAAAA,mBAAmB,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAD,CAAnB;AACAI,MAAAA,sBAAsB,CAAC,cAAC,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE4B,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAD,CAAD,CAAtB;AACA1B,MAAAA,uBAAuB,eACrB,oBAAC,aAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,GAAG,EAAEe,QAAQ,CAAC;AAAEwC,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAFf;AAGE,QAAA,QAAQ,EAAEC,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADqB,CAAvB;AAOD,KAVD,MAUO,IAAIF,KAAK,KAAK,SAAd,EAAyB;AAC9B5D,MAAAA,mBAAmB,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAD,CAAnB;AACAI,MAAAA,sBAAsB,CAAC,cAAC,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE4B,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAD,CAAD,CAAtB;AACA1B,MAAAA,uBAAuB,eACrB,oBAAC,aAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,GAAG,EAAEe,QAAQ,CAAC;AAAEwC,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAFf;AAGE,QAAA,QAAQ,EAAEC,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADqB,CAAvB;AAOD,KAVM,MAUA,IAAIF,KAAK,KAAK,SAAd,EAAyB;AAC9B5D,MAAAA,mBAAmB,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAD,CAAnB;AACAI,MAAAA,sBAAsB,CAAC,cAAC,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE4B,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAD,CAAD,CAAtB;AACApB,MAAAA,oBAAoB,eAClB,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,QAAQ,EAAEmD,gBAFZ;AAGE,QAAA,GAAG,EAAE1C,QAAQ,CAAC;AAAEwC,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADkB,CAApB;AAOD;AACF,GApCD,CAvG6B,CA6I7B;;;AACA,QAAMC,mBAAmB,GAAIpC,KAAD,IAA6B;AACvD,UAAMO,EAAE,GAAGP,KAAK,CAACQ,MAAjB;AACA,UAAM0B,KAAK,GAAG3B,EAAE,CAAC2B,KAAjB,CAFuD,CAIvD;;AACAhD,IAAAA,oBAAoB,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAApB;AACAJ,IAAAA,sBAAsB,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAtB;AACAE,IAAAA,sBAAsB,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAtB;;AAEA,QAAId,KAAK,KAAK,SAAd,EAAyB;AACvB,UAAIgE,KAAK,KAAK,UAAd,EAA0B,CACxB;AACD,OAFD,MAEO,IAAIA,KAAK,KAAK,QAAd,EAAwB;AAC7BpD,QAAAA,sBAAsB,eACpB,oBAAC,YAAD;AACE,UAAA,IAAI,EAAC,cADP;AAEE,UAAA,GAAG,EAAEa,QAAQ,CAAC;AAAEwC,YAAAA,QAAQ,EAAE;AAAZ,WAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB,CAD6B,CAO7B;AACD,OARM,MAQA,IAAID,KAAK,KAAK,SAAd,EAAyB;AAC9BlD,QAAAA,sBAAsB,eACpB,oBAAC,YAAD;AACE,UAAA,IAAI,EAAC,cADP;AAEE,UAAA,GAAG,EAAEW,QAAQ,CAAC;AAAEwC,YAAAA,QAAQ,EAAE;AAAZ,WAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAMD;AACF,KAnBD,MAmBO,IAAIjE,KAAK,KAAK,SAAd,EAAyB;AAC9B,UAAIgE,KAAK,KAAK,UAAd,EAA0B,CACxB;AACD,OAFD,MAEO,IAAIA,KAAK,KAAK,QAAd,EAAwB;AAC7BpD,QAAAA,sBAAsB,eACpB,oBAAC,YAAD;AACE,UAAA,IAAI,EAAC,cADP;AAEE,UAAA,GAAG,EAAEa,QAAQ,CAAC;AAAEwC,YAAAA,QAAQ,EAAE;AAAZ,WAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAMD,OAPM,MAOA,IAAID,KAAK,KAAK,SAAd,EAAyB;AAC9BhD,QAAAA,oBAAoB,eAClB,oBAAC,UAAD;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,QAAQ,EAAEmD,gBAFZ;AAGE,UAAA,GAAG,EAAE1C,QAAQ,CAAC;AAAEwC,YAAAA,QAAQ,EAAE;AAAZ,WAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADkB,CAApB;AAOD;AACF;AACF,GAhDD;;AAkDA,QAAME,gBAAgB,GAAIrC,KAAD,IAA6B;AACpD,UAAMO,EAAE,GAAGP,KAAK,CAACQ,MAAjB;AACA,UAAM0B,KAAK,GAAG3B,EAAE,CAAC2B,KAAjB,CAFoD,CAIpD;;AACA9C,IAAAA,mBAAmB,CAAC,cAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAD,CAAnB;AACAE,IAAAA,0BAA0B,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAA1B;;AAEA,QAAI4C,KAAK,KAAK,UAAd,EAA0B;AACxB9C,MAAAA,mBAAmB,CAAC,cAClB,oBAAC,iBAAD;AACE,QAAA,IAAI,EAAC,mBADP;AAEE,QAAA,GAAG,EAAC,mBAFN;AAGE,QAAA,GAAG,EAAEO,QAAQ,CAAC;AAAEwC,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADkB,eAMlB,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,GAAG,EAAC,cAFN;AAGE,QAAA,GAAG,EAAExC,QAAQ,CAAC;AAAEwC,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANkB,CAAD,CAAnB;AAYD,KAbD,MAaO,IAAID,KAAK,KAAK,WAAd,EAA2B;AAChC5C,MAAAA,0BAA0B,eACxB,oBAAC,gBAAD;AACE,QAAA,IAAI,EAAC,kBADP;AAEE,QAAA,GAAG,EAAEK,QAAQ,CAAC;AAAEwC,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADwB,CAA1B;AAMD;AACF,GA7BD;;AA+BA,QAAMG,WAAW,GAAG,MAAM;AACxB9C,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAM+C,UAAU,GAAG,MAAM;AACvB/C,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMgD,YAAY,GAAIC,QAAD,IAAwB;AAC3C/C,IAAAA,OAAO,CAAC+C,QAAD,CAAP;AACAF,IAAAA,UAAU;AACX,GAHD;;AAKA,QAAMG,QAAQ,GAAID,QAAD,IAAyB;AACxCV,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACA,QAAIE,UAAU,GAAG,IAAI1B,QAAJ,EAAjB;;AACA,SAAK,IAAI2B,GAAT,IAAgBH,QAAhB,EAA0B;AACxBV,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACAD,MAAAA,UAAU,CAACvB,MAAX,CAAkBwB,GAAlB,EAAuBH,QAAQ,CAACG,GAAD,CAA/B;AACD;;AACDD,IAAAA,UAAU,CAACvB,MAAX,CAAkB,QAAlB,EAA4ByB,IAAI,CAACC,SAAL,CAAe7C,SAAf,CAA5B,EARwC,CASxC;;AACA,QAAI8C,UAAe,GAAG,EAAtB;;AACA,SAAK,MAAM,CAACH,GAAD,EAAMV,KAAN,CAAX,IAA2BS,UAA3B,EAAuC;AACrCZ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUY,GAAV,GAAgB,WAAhB,GAA8BV,KAA1C;AACAa,MAAAA,UAAU,CAACH,GAAD,CAAV,GAAkBV,KAAlB;AACD;;AACDrE,IAAAA,gBAAgB,CAACkF,UAAD,CAAhB,CACGC,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AACpB,UAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,mBAAV,CAAN;AACD;AACF,KALH,EAMGC,KANH,CAMUrB,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANpB;AAOD,GAtBD;;AAwBA,QAAMsB,mBAAmB,GAAG;AAC1BC,IAAAA,MAAM,EAAE,MADkB;AAE1BC,IAAAA,MAAM,EAAE;AAFkB,GAA5B;AAKA,QAAMC,UAAU,GAAG;AACjBC,IAAAA,YAAY,EAAE,MADG;AAEjBC,IAAAA,OAAO,EAAE;AAFQ,GAAnB;AAKA,sBACE;AAAK,IAAA,KAAK,EAAEL,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAExD,YAAY,CAAC8C,QAAD,CADxB;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,OAAO,EAAC,qBAHV;AAIE,IAAA,MAAM,EAAC,wBAJT;AAKE,IAAA,KAAK,EAAEa,UALT;AAME,IAAA,SAAS,EAAC,WANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAWE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAQE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAExD,mBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAXF,eAuBE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,GAAG,EAAEJ,QAAQ,CAAC;AAAEwC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGtC,MAAM,CAAC6D,WAAP,IAAsB,qBAPzB,CAvBF,eAkCE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,YAAY,EAAC,kBAHf;AAIE,IAAA,GAAG,EAAE/D,QAAQ,CAAC;AAAEwC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOGwB,UAAU,CAACC,GAAX,CAAgBC,MAAD,iBACd;AAAQ,IAAA,GAAG,EAAEA,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,MAAtB,CADD,CAPH,CAFF,EAaGhE,MAAM,CAACgE,MAAP,IAAiB,iBAbpB,CAlCF,eAmDE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,GAAG,EAAElE,QAAQ,CAAC;AAAEwC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGtC,MAAM,CAACiE,SAAP,IAAoB,mBAPvB,CAnDF,eA8DE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,YAAY,EAAC,iBAHf;AAIE,IAAA,GAAG,EAAEnE,QAAQ,CAAC;AAAEwC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJf;AAKE,IAAA,QAAQ,EAAEF,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQG8B,YAAY,CAACH,GAAb,CAAkB1F,KAAD,iBAChB;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CADD,CARH,CAFF,EAgBG2B,MAAM,CAACmE,WAAP,IAAsB,4BAhBzB,CA9DF,EAkFG3F,gBAlFH,eAmFE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaI,mBAAb,CAnFF,eAoFE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaE,oBAAb,CApFF,eAqFE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaI,mBAAb,CArFF,eAsFE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaF,mBAAb,CAtFF,eAuFE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaI,iBAAb,CAvFF,eAwFE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaE,gBAAb,CAxFF,eAyFE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaE,uBAAb,CAzFF,eA0FE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEO,YAAY,CAAC4C,YAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1FF,eA2FE,oBAAC,kBAAD;AACE,IAAA,IAAI,EAAE/C,IADR;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,MAAM,EAAE+C,WAHV;AAIE,IAAA,QAAQ,EAAE1C,YAAY,CAAC8C,QAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3FF,CADF,CADF;AAsGD,CApXD;;AAsXA,eAAe1E,MAAf;AAEA,MAAM2F,UAAU,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,UAA7C,CAAnB;AACA,MAAMI,YAAY,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAArB","sourcesContent":["import React, { ChangeEvent, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport OfferDiscount from \"./FormComponents/OfferDiscount\";\nimport RefundAmount from \"./FormComponents/RefundAmount\";\nimport ItemAmount from \"./FormComponents/ItemAmount\";\nimport DamageDescription from \"./FormComponents/FileCase/DamageDescription\";\nimport ActionNeeded from \"./FormComponents/FileCase/ActionNeeded\";\nimport ReplacementOrder from \"./FormComponents/ReplacementOrder\";\nimport NarvarReturn from \"./FormComponents/NarvarReturn\";\nimport SubmitConfirmation from \"./SubmitConfirmation\";\nimport { addDamagedDefect } from \"./../../API\";\nimport { ImageUpload } from \"./FormComponents/ImageUpload\";\nimport { CustomerExplore } from '../CustomerExplore';\n\nconst DDForm = (props: any) => {\n  // Damage Level\n  let level: string = \"\";\n  const setLevel = (newLevel: string) => {\n    level = newLevel;\n  };\n\n  /* STATE HOOKS */\n  const [levelHeadElement, setLevelHeadElement] = useState<JSX.Element>();\n  const [customerData, setCustomerData] = useState<Object>();\n  const [imageUploadElements, setImageUploadElements] = useState<\n    Array<JSX.Element>\n  >([]);\n\n  const [offerDiscountElement, setOfferDiscountElement] = useState<\n    JSX.Element\n  >();\n  const [refundAmountElement, setRefundAmountElement] = useState<JSX.Element>();\n  const [narvarReturnElement, setNarvarReturnElement] = useState<JSX.Element>();\n  const [itemAmountElement, setItemAmountElement] = useState<JSX.Element>();\n  const [fileCaseElements, setFileCaseElements] = useState<Array<JSX.Element>>(\n    []\n  );\n  const [replacementOrderElement, setReplacementOrderElement] = useState<\n    JSX.Element\n  >();\n\n  // Submission Confirmation Modal\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState({});\n  const { register, handleSubmit, errors } = useForm();\n\n  // Resets components on level change\n  const clearDynamicComponents = () => {\n    setOfferDiscountElement(<div></div>);\n    setRefundAmountElement(<div></div>);\n    setNarvarReturnElement(<div></div>);\n    setItemAmountElement(<div></div>);\n    setFileCaseElements([<div></div>]);\n    setReplacementOrderElement(<div></div>);\n  };\n\n  const handleCustomerClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\n  }\n\n  // Image Upload\n  const [imageURLs, setImageURLs] = useState<Array<string>>();\n  useEffect(() => {\n    imageURLs?.forEach((url) => {\n      setImageUploadElements((prevElements) => [\n        ...prevElements,\n        <img width=\"80px\" height=\"80px\" src={url} alt=\"damage\" />,\n      ]);\n    });\n  }, [imageURLs]);\n\n  const handleFileChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const url =\n      \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\";\n    const el = event.target as HTMLInputElement;\n    const newURL = el.files ? el.files : url;\n    const images = await handleFileUpload(newURL);\n    let urls: Array<string> = [];\n    images.forEach((image: any) => {\n      urls.push(image[\"location\"]);\n    });\n    setImageURLs(urls);\n  };\n\n  const handleFileUpload = async (files: any) => {\n    const imageForm = new FormData();\n\n    // appends image data for submission to S3 bucket\n    for (let i = 0; i < files.length; i++) {\n      imageForm.append(\"images\", files[i]);\n    }\n\n    //TODO: this needs to change for live version (won't work online)\n    const url = `http://localhost:4000/upload-damage-image`;\n\n    const config = {\n      method: \"POST\",\n      body: imageForm,\n    };\n    try {\n      const req = await fetch(url, config);\n      // console.log(req);\n      if (req.ok) {\n        const res = await req.json();\n        // console.log(res);\n        if (res.success) {\n          return res.images;\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Damage Level Change Handler\n  const handleLevelChange = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n    clearDynamicComponents();\n    setLevel(value);\n    if (value === \"Level 1\") {\n      setLevelHeadElement(<h2>Level One</h2>);\n      setImageUploadElements([<ImageUpload onChange={handleFileChange} />]);\n      setOfferDiscountElement(\n        <OfferDiscount\n          name=\"offerDiscount\"\n          ref={register({ required: true })}\n          onChange={handleOfferDiscount}\n        />\n      );\n    } else if (value === \"Level 2\") {\n      setLevelHeadElement(<h2>Level Two</h2>);\n      setImageUploadElements([<ImageUpload onChange={handleFileChange} />]);\n      setOfferDiscountElement(\n        <OfferDiscount\n          name=\"offerDiscount\"\n          ref={register({ required: true })}\n          onChange={handleOfferDiscount}\n        />\n      );\n    } else if (value === \"Level 3\") {\n      setLevelHeadElement(<h2>Level Three</h2>);\n      setImageUploadElements([<ImageUpload onChange={handleFileChange} />]);\n      setItemAmountElement(\n        <ItemAmount\n          name=\"itemAmount\"\n          onChange={handleItemAmount}\n          ref={register({ required: true })}\n        />\n      );\n    }\n  };\n\n  // Handle Offer Discount\n  const handleOfferDiscount = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n\n    // Reset initial values if switched\n    setItemAmountElement(<div />);\n    setRefundAmountElement(<div />);\n    setNarvarReturnElement(<div />);\n\n    if (level === \"Level 1\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement(\n          <RefundAmount\n            name=\"refundAmount\"\n            ref={register({ required: true })}\n          />\n        );\n        //Submit\n      } else if (value === \"Replace\") {\n        setNarvarReturnElement(\n          <NarvarReturn\n            name=\"narvarReturn\"\n            ref={register({ required: true })}\n          />\n        );\n      }\n    } else if (level === \"Level 2\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement(\n          <RefundAmount\n            name=\"refundAmount\"\n            ref={register({ required: true })}\n          />\n        );\n      } else if (value === \"Replace\") {\n        setItemAmountElement(\n          <ItemAmount\n            name=\"itemAmount\"\n            onChange={handleItemAmount}\n            ref={register({ required: true })}\n          />\n        );\n      }\n    }\n  };\n\n  const handleItemAmount = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n\n    // reset values if change\n    setFileCaseElements([<div></div>]);\n    setReplacementOrderElement(<div></div>);\n\n    if (value === \"Over $50\") {\n      setFileCaseElements([\n        <DamageDescription\n          name=\"damageDescription\"\n          key=\"damageDescription\"\n          ref={register({ required: true })}\n        />,\n        <ActionNeeded\n          name=\"actionNeeded\"\n          key=\"actionNeeded\"\n          ref={register({ required: true })}\n        />,\n      ]);\n    } else if (value === \"Under $50\") {\n      setReplacementOrderElement(\n        <ReplacementOrder\n          name=\"replacementOrder\"\n          ref={register({ required: true })}\n        />\n      );\n    }\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleReview = (formData: FormData) => {\n    setData(formData);\n    handleShow();\n  };\n\n  const onSubmit = (formData: any): void => {\n    console.log(\"Pre-append\");\n    console.log(formData);\n    let outputForm = new FormData();\n    for (let key in formData) {\n      console.log(key);\n      outputForm.append(key, formData[key]);\n    }\n    outputForm.append(\"images\", JSON.stringify(imageURLs));\n    // stores form to Mongo\n    let outputData: any = {};\n    for (const [key, value] of outputForm) {\n      console.log(\"key: \" + key + \", value: \" + value);\n      outputData[key] = value;\n    }\n    addDamagedDefect(outputData)\n      .then(({ status }) => {\n        if (status !== 201) {\n          throw new Error(\"Error saving data\");\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const formContainerStyles = {\n    margin: \"10px\",\n    height: \"95%\",\n  };\n\n  const formStyles = {\n    borderRadius: \"10px\",\n    padding: \"10px\",\n  };\n\n  return (\n    <div style={formContainerStyles}>\n      <Form\n        onSubmit={handleSubmit(onSubmit)}\n        method=\"post\"\n        encType=\"multipart/form-data\"\n        action=\"/submit-damaged-defect\"\n        style={formStyles}\n        className=\"z-depth-1\"\n      >\n        <h2>Damaged/Defective Form</h2>\n        <br />\n        {/* Customer Information  */}\n        <Form.Group>\n          <Form.Label>Customer Information</Form.Label>\n          {/* TODO: some logic here, where on customer card click or drag, it adds the form information\n          <Form.Control\n            name=\"customerName\"\n            placeholder=\"Customer Name\"\n            ref={register({ required: true })}\n          /> */}\n          <CustomerExplore onClick={handleCustomerClick} />\n        </Form.Group>\n\n        {/* Order # */}\n        <Form.Group>\n          <Form.Label>Order #</Form.Label>\n          <Form.Control\n            name=\"orderNumber\"\n            placeholder=\"Order #\"\n            ref={register({ required: true })}\n          ></Form.Control>\n          {errors.orderNumber && \"Order # is required\"}\n        </Form.Group>\n\n        {/* Vendor */}\n        <Form.Group>\n          <Form.Label>Vendor</Form.Label>\n          <Form.Control\n            name=\"vendor\"\n            as=\"select\"\n            defaultValue=\"Choose Vendor...\"\n            ref={register({ required: true })}\n          >\n            <option></option>\n            {vendorList.map((vendor) => (\n              <option key={vendor}>{vendor}</option>\n            ))}\n          </Form.Control>\n          {errors.vendor && \"Vendor required\"}\n        </Form.Group>\n\n        {/* SKU Number */}\n        <Form.Group>\n          <Form.Label>SKU #</Form.Label>\n          <Form.Control\n            name=\"skuNumber\"\n            placeholder=\"SKU #\"\n            ref={register({ required: true })}\n          ></Form.Control>\n          {errors.skuNumber && \"SKU # is required\"}\n        </Form.Group>\n\n        {/* Damage Level */}\n        <Form.Group>\n          <Form.Label>Damage Level</Form.Label>\n          <Form.Control\n            name=\"damageLevel\"\n            as=\"select\"\n            defaultValue=\"Damage Level...\"\n            ref={register({ required: true })}\n            onChange={handleLevelChange}\n          >\n            <option></option>\n            {damageLevels.map((level) => (\n              <option key={level} value={level}>\n                {level}\n              </option>\n            ))}\n          </Form.Control>\n          {errors.damageLevel && \"Please select damage level\"}\n        </Form.Group>\n\n        {/* Level Paths */}\n        {levelHeadElement}\n        <Form.Group>{imageUploadElements}</Form.Group>\n        <Form.Group>{offerDiscountElement}</Form.Group>\n        <Form.Group>{narvarReturnElement}</Form.Group>\n        <Form.Group>{refundAmountElement}</Form.Group>\n        <Form.Group>{itemAmountElement}</Form.Group>\n        <Form.Group>{fileCaseElements}</Form.Group>\n        <Form.Group>{replacementOrderElement}</Form.Group>\n        <Button onClick={handleSubmit(handleReview)}>Review</Button>\n        <SubmitConfirmation\n          data={data}\n          show={show}\n          onHide={handleClose}\n          onSubmit={handleSubmit(onSubmit)}\n        />\n      </Form>\n    </div>\n  );\n};\n\nexport default DDForm;\n\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];\n"]},"metadata":{},"sourceType":"module"}