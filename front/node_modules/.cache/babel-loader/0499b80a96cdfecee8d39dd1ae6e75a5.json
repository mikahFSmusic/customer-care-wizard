{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx\";\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport OfferDiscount from \"./FormComponents/OfferDiscount\";\nimport RefundAmount from \"./FormComponents/RefundAmount\";\nimport ItemAmount from \"./FormComponents/ItemAmount\";\nimport DamageDescription from \"./FormComponents/FileCase/DamageDescription\";\nimport ActionNeeded from \"./FormComponents/FileCase/ActionNeeded\";\nimport ReplacementOrder from \"./FormComponents/ReplacementOrder\";\nimport NarvarReturn from \"./FormComponents/NarvarReturn\";\nimport SubmitConfirmation from \"./SubmitConfirmation\";\nimport { addDamagedDefect } from \"./../../API\";\nimport { ImageUpload } from \"./FormComponents/ImageUpload\";\n\nconst DDForm = props => {\n  let level = \"\";\n  const [levelHeadElement, setLevelHeadElement] = useState();\n  const [imageUploadElements, setImageUploadElements] = useState([]);\n  const [offerDiscountElement, setOfferDiscountElement] = useState();\n  const [refundAmountElement, setRefundAmountElement] = useState();\n  const [narvarReturnElement, setNarvarReturnElement] = useState();\n  const [itemAmountElement, setItemAmountElement] = useState();\n  const [fileCaseElements, setFileCaseElements] = useState([]);\n  const [replacementOrderElement, setReplacementOrderElement] = useState(); // Submission Confirmation Modal\n\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState({});\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const setLevel = newLevel => {\n    level = newLevel;\n  }; // Resets components on level change\n\n\n  const clearDynamicComponents = () => {\n    setOfferDiscountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }));\n    setRefundAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }\n    }));\n    setNarvarReturnElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 28\n      }\n    }));\n    setItemAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 26\n      }\n    }));\n    setFileCaseElements([/*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 26\n      }\n    })]);\n    setReplacementOrderElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  const handleImageUpload = () => {}; // Damage Level Change Handler\n\n\n  const handleLevelChange = event => {\n    const el = event.target;\n    const value = el.value;\n    clearDynamicComponents();\n    setLevel(value);\n\n    if (value === \"Level 1\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 27\n        }\n      }, \"Level One\"));\n      setImageUploadElements([/*#__PURE__*/React.createElement(ImageUpload, {\n        onChange: handleImageUpload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 31\n        }\n      })]);\n      setOfferDiscountElement( /*#__PURE__*/React.createElement(OfferDiscount, {\n        name: \"offerDiscount\",\n        ref: register({\n          required: true\n        }),\n        onChange: handleOfferDiscount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }));\n    } else if (value === \"Level 2\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 27\n        }\n      }, \"Level Two\"));\n      setImageUploadElements([/*#__PURE__*/React.createElement(ImageUpload, {\n        onChange: handleImageUpload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 31\n        }\n      })]);\n      setOfferDiscountElement( /*#__PURE__*/React.createElement(OfferDiscount, {\n        name: \"offerDiscount\",\n        ref: register({\n          required: true\n        }),\n        onChange: handleOfferDiscount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }));\n    } else if (value === \"Level 3\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 27\n        }\n      }, \"Level Three\"));\n      setImageUploadElements([/*#__PURE__*/React.createElement(ImageUpload, {\n        onChange: handleImageUpload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }\n      })]);\n      setItemAmountElement( /*#__PURE__*/React.createElement(ItemAmount, {\n        name: \"itemAmount\",\n        onChange: handleItemAmount,\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }));\n    }\n  }; // Handle Offer Discount\n\n\n  const handleOfferDiscount = event => {\n    const el = event.target;\n    const value = el.value; // Reset initial values if switched\n\n    setItemAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 26\n      }\n    }));\n    setRefundAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 28\n      }\n    }));\n    setNarvarReturnElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 28\n      }\n    }));\n\n    if (level === \"Level 1\") {\n      if (value === \"Discount\") {// Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement( /*#__PURE__*/React.createElement(RefundAmount, {\n          name: \"refundAmount\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }\n        })); //Submit\n      } else if (value === \"Replace\") {\n        setNarvarReturnElement( /*#__PURE__*/React.createElement(NarvarReturn, {\n          name: \"narvarReturn\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }\n        }));\n      }\n    } else if (level === \"Level 2\") {\n      if (value === \"Discount\") {// Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement( /*#__PURE__*/React.createElement(RefundAmount, {\n          name: \"refundAmount\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }\n        }));\n      } else if (value === \"Replace\") {\n        setItemAmountElement( /*#__PURE__*/React.createElement(ItemAmount, {\n          name: \"itemAmount\",\n          onChange: handleItemAmount,\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  };\n\n  const handleItemAmount = event => {\n    const el = event.target;\n    const value = el.value; // reset values if change\n\n    setFileCaseElements([/*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 26\n      }\n    })]);\n    setReplacementOrderElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 32\n      }\n    }));\n\n    if (value === \"Over $50\") {\n      setFileCaseElements([/*#__PURE__*/React.createElement(DamageDescription, {\n        name: \"damageDescription\",\n        key: \"damageDescription\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ActionNeeded, {\n        name: \"actionNeeded\",\n        key: \"actionNeeded\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      })]);\n    } else if (value === \"Under $50\") {\n      setReplacementOrderElement( /*#__PURE__*/React.createElement(ReplacementOrder, {\n        name: \"replacementOrder\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleReview = formData => {\n    setData(formData);\n    handleShow();\n  };\n\n  const onSubmit = formData => {\n    console.log(formData); // stores form to Mongo\n\n    addDamagedDefect(formData).then(({\n      status\n    }) => {\n      if (status !== 201) {\n        throw new Error(\"Error saving data\");\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const formContainerStyles = {\n    margin: \"10px\",\n    height: \"95%\"\n  };\n  const formStyles = {\n    borderRadius: \"10px\",\n    padding: \"10px\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: formContainerStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    method: \"post\",\n    encType: \"multipart/form-data\",\n    action: \"/submit-damaged-defect\",\n    style: formStyles,\n    className: \"z-depth-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, \"Damaged/Defective Form\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"Purchase Received\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"purchaseReceived\",\n    as: \"select\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"Received?\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, \"No\")), errors.purchaseReceived && \"receipt status is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, \"Order #\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"orderNumber\",\n    placeholder: \"Order #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }), errors.orderNumber && \"Order # is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, \"Vendor\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"vendor\",\n    as: \"select\",\n    defaultValue: \"Choose Vendor...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }), vendorList.map(vendor => /*#__PURE__*/React.createElement(\"option\", {\n    key: vendor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, vendor))), errors.vendor && \"Vendor required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, \"SKU #\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"skuNumber\",\n    placeholder: \"SKU #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }), errors.skuNumber && \"SKU # is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, \"Damage Level\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"damageLevel\",\n    as: \"select\",\n    defaultValue: \"Damage Level...\",\n    ref: register({\n      required: true\n    }),\n    onChange: handleLevelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }), damageLevels.map(level => /*#__PURE__*/React.createElement(\"option\", {\n    key: level,\n    value: level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, level))), errors.damageLevel && \"Please select damage level\"), levelHeadElement, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, imageUploadElements), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  }, offerDiscountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, narvarReturnElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, refundAmountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }, itemAmountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, fileCaseElements), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, replacementOrderElement), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit(handleReview),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, \"Review\"), /*#__PURE__*/React.createElement(SubmitConfirmation, {\n    data: data,\n    show: show,\n    onHide: handleClose,\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DDForm;\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx"],"names":["React","Form","Button","useState","useForm","OfferDiscount","RefundAmount","ItemAmount","DamageDescription","ActionNeeded","ReplacementOrder","NarvarReturn","SubmitConfirmation","addDamagedDefect","ImageUpload","DDForm","props","level","levelHeadElement","setLevelHeadElement","imageUploadElements","setImageUploadElements","offerDiscountElement","setOfferDiscountElement","refundAmountElement","setRefundAmountElement","narvarReturnElement","setNarvarReturnElement","itemAmountElement","setItemAmountElement","fileCaseElements","setFileCaseElements","replacementOrderElement","setReplacementOrderElement","show","setShow","data","setData","register","handleSubmit","errors","setLevel","newLevel","clearDynamicComponents","handleImageUpload","handleLevelChange","event","el","target","value","required","handleOfferDiscount","handleItemAmount","handleClose","handleShow","handleReview","formData","onSubmit","console","log","then","status","Error","catch","error","formContainerStyles","margin","height","formStyles","borderRadius","padding","purchaseReceived","orderNumber","vendorList","map","vendor","skuNumber","damageLevels","damageLevel"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport OfferDiscount from \"./FormComponents/OfferDiscount\";\nimport RefundAmount from \"./FormComponents/RefundAmount\";\nimport ItemAmount from \"./FormComponents/ItemAmount\";\nimport DamageDescription from \"./FormComponents/FileCase/DamageDescription\";\nimport ActionNeeded from \"./FormComponents/FileCase/ActionNeeded\";\nimport ReplacementOrder from \"./FormComponents/ReplacementOrder\";\nimport NarvarReturn from \"./FormComponents/NarvarReturn\";\nimport SubmitConfirmation from \"./SubmitConfirmation\";\nimport { addDamagedDefect } from \"./../../API\";\nimport { ImageUpload } from \"./FormComponents/ImageUpload\";\n\nconst DDForm = (props: any) => {\n  let level: string = \"\";\n  const [levelHeadElement, setLevelHeadElement] = useState<JSX.Element>();\n  const [imageUploadElements, setImageUploadElements] = useState<\n    Array<JSX.Element>\n  >([]);\n  const [offerDiscountElement, setOfferDiscountElement] = useState<\n    JSX.Element\n  >();\n  const [refundAmountElement, setRefundAmountElement] = useState<JSX.Element>();\n  const [narvarReturnElement, setNarvarReturnElement] = useState<JSX.Element>();\n  const [itemAmountElement, setItemAmountElement] = useState<JSX.Element>();\n  const [fileCaseElements, setFileCaseElements] = useState<Array<JSX.Element>>(\n    []\n  );\n  const [replacementOrderElement, setReplacementOrderElement] = useState<\n    JSX.Element\n  >();\n\n  // Submission Confirmation Modal\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState({});\n  const { register, handleSubmit, errors } = useForm();\n\n  const setLevel = (newLevel: string) => {\n    level = newLevel;\n  };\n\n  // Resets components on level change\n  const clearDynamicComponents = () => {\n    setOfferDiscountElement(<div></div>);\n    setRefundAmountElement(<div></div>);\n    setNarvarReturnElement(<div></div>);\n    setItemAmountElement(<div></div>);\n    setFileCaseElements([<div></div>]);\n    setReplacementOrderElement(<div></div>);\n  };\n\n  const handleImageUpload = () => {\n\n  }\n\n  // Damage Level Change Handler\n  const handleLevelChange = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n    clearDynamicComponents();\n    setLevel(value);\n    if (value === \"Level 1\") {\n      setLevelHeadElement(<h2>Level One</h2>);\n      setImageUploadElements([<ImageUpload onChange={handleImageUpload}/>]);\n      setOfferDiscountElement(\n        <OfferDiscount\n          name=\"offerDiscount\"\n          ref={register({ required: true })}\n          onChange={handleOfferDiscount}\n        />\n      );\n    } else if (value === \"Level 2\") {\n      setLevelHeadElement(<h2>Level Two</h2>);\n      setImageUploadElements([<ImageUpload  onChange={handleImageUpload}/>]);\n      setOfferDiscountElement(\n        <OfferDiscount\n          name=\"offerDiscount\"\n          ref={register({ required: true })}\n          onChange={handleOfferDiscount}\n        />\n      );\n    } else if (value === \"Level 3\") {\n      setLevelHeadElement(<h2>Level Three</h2>);\n      setImageUploadElements([<ImageUpload  onChange={handleImageUpload}/>]);\n      setItemAmountElement(\n        <ItemAmount\n          name=\"itemAmount\"\n          onChange={handleItemAmount}\n          ref={register({ required: true })}\n        />\n      );\n    }\n  };\n\n  // Handle Offer Discount\n  const handleOfferDiscount = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n\n    // Reset initial values if switched\n    setItemAmountElement(<div />);\n    setRefundAmountElement(<div />);\n    setNarvarReturnElement(<div />);\n\n    if (level === \"Level 1\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement(\n          <RefundAmount\n            name=\"refundAmount\"\n            ref={register({ required: true })}\n          />\n        );\n        //Submit\n      } else if (value === \"Replace\") {\n        setNarvarReturnElement(\n          <NarvarReturn\n            name=\"narvarReturn\"\n            ref={register({ required: true })}\n          />\n        );\n      }\n    } else if (level === \"Level 2\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement(\n          <RefundAmount\n            name=\"refundAmount\"\n            ref={register({ required: true })}\n          />\n        );\n      } else if (value === \"Replace\") {\n        setItemAmountElement(\n          <ItemAmount\n            name=\"itemAmount\"\n            onChange={handleItemAmount}\n            ref={register({ required: true })}\n          />\n        );\n      }\n    }\n  };\n\n  const handleItemAmount = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n\n    // reset values if change\n    setFileCaseElements([<div></div>]);\n    setReplacementOrderElement(<div></div>);\n\n    if (value === \"Over $50\") {\n      setFileCaseElements([\n        <DamageDescription\n          name=\"damageDescription\"\n          key=\"damageDescription\"\n          ref={register({ required: true })}\n        />,\n        <ActionNeeded\n          name=\"actionNeeded\"\n          key=\"actionNeeded\"\n          ref={register({ required: true })}\n        />,\n      ]);\n    } else if (value === \"Under $50\") {\n      setReplacementOrderElement(\n        <ReplacementOrder\n          name=\"replacementOrder\"\n          ref={register({ required: true })}\n        />\n      );\n    }\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleReview = (formData: any) => {\n    setData(formData);\n    handleShow();\n  };\n\n  const onSubmit = (formData: any): void => {\n    console.log(formData);\n\n    // stores form to Mongo\n    addDamagedDefect(formData)\n      .then(({ status }) => {\n        if (status !== 201) {\n          throw new Error(\"Error saving data\");\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const formContainerStyles = {\n    margin: \"10px\",\n    height: \"95%\",\n  };\n\n  const formStyles = {\n    borderRadius: \"10px\",\n    padding: \"10px\"\n  };\n\n  return (\n    <div style={formContainerStyles}>\n      <Form\n        onSubmit={handleSubmit(onSubmit)}\n        method=\"post\"\n        encType=\"multipart/form-data\"\n        action=\"/submit-damaged-defect\"\n        style={formStyles}\n        className=\"z-depth-1\"\n      >\n        <h2>Damaged/Defective Form</h2>\n        <br />\n        {/* Purchase Received */}\n        <Form.Group>\n          <Form.Label>Purchase Received</Form.Label>\n          <Form.Control\n            name=\"purchaseReceived\"\n            as=\"select\"\n            ref={register({ required: true })}\n          >\n            <option value=\"\">Received?</option>\n            <option>Yes</option>\n            <option>No</option>\n          </Form.Control>\n          {errors.purchaseReceived && \"receipt status is required\"}\n        </Form.Group>\n\n        {/* Order # */}\n        <Form.Group>\n          <Form.Label>Order #</Form.Label>\n          <Form.Control\n            name=\"orderNumber\"\n            placeholder=\"Order #\"\n            ref={register({ required: true })}\n          ></Form.Control>\n          {errors.orderNumber && \"Order # is required\"}\n        </Form.Group>\n\n        {/* Vendor */}\n        <Form.Group>\n          <Form.Label>Vendor</Form.Label>\n          <Form.Control\n            name=\"vendor\"\n            as=\"select\"\n            defaultValue=\"Choose Vendor...\"\n            ref={register({ required: true })}\n          >\n            <option></option>\n            {vendorList.map((vendor) => (\n              <option key={vendor}>{vendor}</option>\n            ))}\n          </Form.Control>\n          {errors.vendor && \"Vendor required\"}\n        </Form.Group>\n\n        {/* SKU Number */}\n        <Form.Group>\n          <Form.Label>SKU #</Form.Label>\n          <Form.Control\n            name=\"skuNumber\"\n            placeholder=\"SKU #\"\n            ref={register({ required: true })}\n          ></Form.Control>\n          {errors.skuNumber && \"SKU # is required\"}\n        </Form.Group>\n\n        {/* Damage Level */}\n        <Form.Group>\n          <Form.Label>Damage Level</Form.Label>\n          <Form.Control\n            name=\"damageLevel\"\n            as=\"select\"\n            defaultValue=\"Damage Level...\"\n            ref={register({ required: true })}\n            onChange={handleLevelChange}\n          >\n            <option></option>\n            {damageLevels.map((level) => (\n              <option key={level} value={level}>\n                {level}\n              </option>\n            ))}\n          </Form.Control>\n          {errors.damageLevel && \"Please select damage level\"}\n        </Form.Group>\n\n        {/* Level Paths */}\n        {levelHeadElement}\n        <Form.Group>{imageUploadElements}</Form.Group>\n        <Form.Group>{offerDiscountElement}</Form.Group>\n        <Form.Group>{narvarReturnElement}</Form.Group>\n        <Form.Group>{refundAmountElement}</Form.Group>\n        <Form.Group>{itemAmountElement}</Form.Group>\n        <Form.Group>{fileCaseElements}</Form.Group>\n        <Form.Group>{replacementOrderElement}</Form.Group>\n        <Button onClick={handleSubmit(handleReview)}>Review</Button>\n        <SubmitConfirmation\n          data={data}\n          show={show}\n          onHide={handleClose}\n          onSubmit={handleSubmit(onSubmit)}\n        />\n      </Form>\n    </div>\n  );\n};\n\nexport default DDForm;\n\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];\n"]},"metadata":{},"sourceType":"module"}