{"ast":null,"code":"// API Call to Kustomer for list of all customers\nconst kustomerAPIKey = process.env.REACT_APP_KUSTOMER_API_KEY;\nconst baseURL = \"https://api.kustomerapp.com/v1/\";\nconst proxyURL = \"https://cors-anywhere.herokuapp.com/\";\nexport const fetchCustomers = async name => {\n  const endpoint = \"customers/search\";\n  let headers = new Headers({\n    Authorization: `Bearer ${kustomerAPIKey}`,\n    \"Content-Type\": \"application/json\"\n  });\n  let raw = JSON.stringify({\n    and: [{\n      customer_name: {\n        contains: name\n      }\n    }],\n    sort: [{\n      customer_updated_at: \"asc\"\n    }],\n    queryContext: \"customer\",\n    or: []\n  });\n  let initObject = {\n    method: \"POST\",\n    headers: headers,\n    body: raw\n  };\n\n  try {\n    console.log(\"fetching customers\");\n    const response = await fetch(`${proxyURL}${baseURL}${endpoint}`, initObject);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchCustomerOrders = async customerID => {\n  const endpoint = `customers/${customerID}/klasses/orders`;\n  let headers = new Headers({\n    Authorization: `Bearer ${kustomerAPIKey}`,\n    \"Content-Type\": \"application/json\"\n  });\n  let initObject = {\n    method: \"GET\",\n    headers: headers\n  };\n\n  try {\n    console.log(\"getting customer orders\");\n    const response = await fetch(`${proxyURL}${baseURL}${endpoint}`, initObject);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchOrdersById = async orderId => {\n  const endpoint = `klasses/orders/${orderId}`;\n  let headers = new Headers({\n    Authorization: `Bearer ${kustomerAPIKey}`,\n    \"Content-Type\": \"application/json\"\n  });\n  let initObject = {\n    method: \"GET\",\n    headers: headers\n  };\n\n  try {\n    const response = await fetch(`${proxyURL}${baseURL}${endpoint}`, initObject);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getCustomerByEmail = async email => {\n  const endpoint = `customers/email=${email}`;\n  let headers = new Headers({\n    Authorization: `Bearer ${kustomerAPIKey}`,\n    \"Content-Type\": \"application/json\"\n  });\n  let initObject = {\n    method: \"GET\",\n    headers: headers\n  };\n\n  try {\n    const response = await fetch(`${proxyURL}${baseURL}${endpoint}`, initObject);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/kustomer.api.ts"],"names":["kustomerAPIKey","process","env","REACT_APP_KUSTOMER_API_KEY","baseURL","proxyURL","fetchCustomers","name","endpoint","headers","Headers","Authorization","raw","JSON","stringify","and","customer_name","contains","sort","customer_updated_at","queryContext","or","initObject","method","body","console","log","response","fetch","data","json","error","fetchCustomerOrders","customerID","fetchOrdersById","orderId","getCustomerByEmail","email"],"mappings":"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","sourcesContent":["// API Call to Kustomer for list of all customers\nconst kustomerAPIKey = process.env.REACT_APP_KUSTOMER_API_KEY;\nconst baseURL: string = \"https://api.kustomerapp.com/v1/\";\nconst proxyURL: string = \"https://cors-anywhere.herokuapp.com/\";\n\nexport const fetchCustomers = async (name: string) => {\n  const endpoint: string = \"customers/search\";\n  let headers = new Headers({\n    Authorization: `Bearer ${kustomerAPIKey}`,\n    \"Content-Type\": \"application/json\",\n  });\n\n  let raw = JSON.stringify({\n    and: [{ customer_name: { contains: name } }],\n    sort: [{ customer_updated_at: \"asc\" }],\n    queryContext: \"customer\",\n    or: [],\n  });\n\n  let initObject = {\n    method: \"POST\",\n    headers: headers,\n    body: raw,\n  };\n\n  try {\n    console.log(\"fetching customers\");\n    const response = await fetch(\n      `${proxyURL}${baseURL}${endpoint}`,\n      initObject\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCustomerOrders = async (customerID: string) => {\n  const endpoint: string = `customers/${customerID}/klasses/orders`;\n  let headers = new Headers({\n    Authorization: `Bearer ${kustomerAPIKey}`,\n    \"Content-Type\": \"application/json\",\n  });\n\n  let initObject = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  try {\n    console.log(\"getting customer orders\");\n    const response = await fetch(\n      `${proxyURL}${baseURL}${endpoint}`,\n      initObject\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchOrdersById = async (orderId: string) => {\n  const endpoint: string = `klasses/orders/${orderId}`;\n  let headers = new Headers({\n    Authorization: `Bearer ${kustomerAPIKey}`,\n    \"Content-Type\": \"application/json\",\n  });\n  let initObject = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  try {\n    const response = await fetch(\n      `${proxyURL}${baseURL}${endpoint}`,\n      initObject\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCustomerByEmail = async (email: string) => {\n  const endpoint: string = `customers/email=${email}`;\n  let headers = new Headers({\n    Authorization: `Bearer ${kustomerAPIKey}`,\n    \"Content-Type\": \"application/json\",\n  });\n  let initObject = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  try {\n    const response = await fetch(\n      `${proxyURL}${baseURL}${endpoint}`,\n      initObject\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}