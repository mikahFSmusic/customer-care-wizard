{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/SubmitConfirmation.tsx\";\nimport React from 'react';\nimport { ModalBody } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\n\nconst SubmitConfirmation = props => {\n  const formatData = data => {\n    if (data !== undefined) {\n      const dataEntries = Object.entries(data);\n      let outputEntries = [];\n      console.log(dataEntries);\n\n      for (let i = 0; i < dataEntries.length; i++) {\n        const entry = dataEntries[i];\n        const thisKey = entry[0];\n        console.log(entry);\n        console.log(thisKey);\n        let newKey = \"\"; // formats fields for display\n\n        switch (thisKey) {\n          case \"purchaseReceived\":\n            newKey = \"Purchase Received? \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"orderNumber\":\n            newKey = \"Order Number: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"vendor\":\n            newKey = \"Vendor: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"skuNumber\":\n            newKey = \"SKU #: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"damageLevel\":\n            newKey = \"Damage Level: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"image1\":\n            newKey = \"Image 1: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"image2\":\n            newKey = \"Image 2: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"image3\":\n            newKey = \"Image 3: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"levelOneOfferDiscount\" || \"levelTwoOfferDiscount\" || \"levelThreeOfferDiscount\":\n            newKey = \"Discount/Refund/Return: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"levelOneRefund\" || \"levelTwoRefund\" || \"levelThreeRefund\":\n            newKey = \"Refund Amount: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"levelTwoItemAmount\" || \"levelThreeItemAmount\":\n            newKey = \"Item Amount: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"damageDescription\":\n            newKey = \"Damage Description: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"actionNeeded\":\n            newKey = \"Action Needed: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n\n          case \"replacementOrder\":\n            newKey = \"Replacement Order #\";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n        }\n\n        index++;\n      }\n\n      console.log(outputEntries);\n      return outputEntries;\n    } else {\n      return [];\n    }\n  };\n\n  const handleSubmit = () => {\n    props.onHide();\n    props.onSubmit();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: props.show,\n    onHide: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Review Damage/Defect Submission\")), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, formatData(props.data).map(field => /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 16\n    }\n  }, field[0][0]), \": \", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 40\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default SubmitConfirmation;","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/SubmitConfirmation.tsx"],"names":["React","ModalBody","Modal","Button","Row","SubmitConfirmation","props","formatData","data","undefined","dataEntries","Object","entries","outputEntries","console","log","i","length","entry","thisKey","newKey","index","handleSubmit","onHide","onSubmit","show","map","field"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAeA,MAAMC,kBAAkB,GAAIC,KAAD,IAAoC;AAE7D,QAAMC,UAAU,GAAIC,IAAD,IAAc;AAC/B,QAAIA,IAAI,KAAKC,SAAb,EAAwB;AACtB,YAAMC,WAAW,GAAGC,MAAM,CAACC,OAAP,CAAeJ,IAAf,CAApB;AACA,UAAIK,aAAiB,GAAG,EAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,WAAW,CAACO,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,cAAME,KAAK,GAAGR,WAAW,CAACM,CAAD,CAAzB;AACA,cAAMG,OAAO,GAAGD,KAAK,CAAC,CAAD,CAArB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACA,YAAIC,MAAM,GAAG,EAAb,CAL2C,CAM3C;;AACA,gBAAOD,OAAP;AACE,eAAK,kBAAL;AACEC,YAAAA,MAAM,GAAG,qBAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,aAAL;AACEE,YAAAA,MAAM,GAAG,gBAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,QAAL;AACEE,YAAAA,MAAM,GAAG,UAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,WAAL;AACEE,YAAAA,MAAM,GAAG,SAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,aAAL;AACEE,YAAAA,MAAM,GAAG,gBAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,QAAL;AACEE,YAAAA,MAAM,GAAG,WAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,QAAL;AACEE,YAAAA,MAAM,GAAG,WAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,QAAL;AACEE,YAAAA,MAAM,GAAG,WAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,2BAA2B,uBAA3B,IAAsD,yBAA3D;AACEE,YAAAA,MAAM,GAAG,0BAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,oBAAoB,gBAApB,IAAwC,kBAA7C;AACEE,YAAAA,MAAM,GAAG,iBAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,wBAAwB,sBAA7B;AACEE,YAAAA,MAAM,GAAG,eAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,mBAAL;AACEE,YAAAA,MAAM,GAAG,sBAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,cAAL;AACEE,YAAAA,MAAM,GAAG,iBAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;;AACF,eAAK,kBAAL;AACEE,YAAAA,MAAM,GAAG,qBAAT;AACAP,YAAAA,aAAa,CAACQ,KAAD,CAAb,GAAuB,CAACD,MAAD,EAASF,KAAK,CAAC,CAAD,CAAd,CAAvB;AACA;AAxDJ;;AA0DAG,QAAAA,KAAK;AACN;;AACDP,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,aAAOA,aAAP;AACD,KAzED,MAyEO;AACL,aAAO,EAAP;AACD;AACF,GA7ED;;AA+EA,QAAMS,YAAY,GAAG,MAAM;AACzBhB,IAAAA,KAAK,CAACiB,MAAN;AACAjB,IAAAA,KAAK,CAACkB,QAAN;AACD,GAHD;;AAKA,sBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAElB,KAAK,CAACmB,IAAnB;AAAyB,IAAA,MAAM,EAAEnB,KAAK,CAACiB,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,CADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,UAAU,CAACD,KAAK,CAACE,IAAP,CAAV,CAAuBkB,GAAvB,CAA4BC,KAAD,iBAC1B,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAL,CAAL,qBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,CADD,CADH,CAJF,eASE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEL,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF;AAaD,CAnGD;;AAqGA,eAAejB,kBAAf","sourcesContent":["import React from 'react';\nimport { ModalBody } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row'\nimport { StringDecoder } from 'string_decoder';\n\ntype SubmitConfirmationProps = {\n  show: boolean\n  onHide: () => void\n  onSubmit: () => void\n  data: any\n}\n\ntype ElementObject = {\n  key: string,\n  value: string\n}\n\nconst SubmitConfirmation = (props: SubmitConfirmationProps) => {\n\n  const formatData = (data:any) => {\n    if (data !== undefined) {\n      const dataEntries = Object.entries(data);\n      let outputEntries:any = []\n      console.log(dataEntries);\n      for (let i = 0; i < dataEntries.length; i++) {\n        const entry = dataEntries[i];\n        const thisKey = entry[0]\n        console.log(entry);\n        console.log(thisKey);\n        let newKey = \"\"\n        // formats fields for display\n        switch(thisKey) {\n          case \"purchaseReceived\":\n            newKey = \"Purchase Received? \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"orderNumber\":\n            newKey = \"Order Number: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"vendor\":\n            newKey = \"Vendor: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"skuNumber\":\n            newKey = \"SKU #: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"damageLevel\":\n            newKey = \"Damage Level: \"\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"image1\":\n            newKey = \"Image 1: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"image2\":\n            newKey = \"Image 2: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"image3\":\n            newKey = \"Image 3: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"levelOneOfferDiscount\" || \"levelTwoOfferDiscount\" || \"levelThreeOfferDiscount\":\n            newKey = \"Discount/Refund/Return: \"\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"levelOneRefund\" || \"levelTwoRefund\" || \"levelThreeRefund\":\n            newKey = \"Refund Amount: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"levelTwoItemAmount\" || \"levelThreeItemAmount\":\n            newKey = \"Item Amount: \"\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"damageDescription\":\n            newKey = \"Damage Description: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"actionNeeded\":\n            newKey = \"Action Needed: \";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n          case \"replacementOrder\":\n            newKey = \"Replacement Order #\";\n            outputEntries[index] = [newKey, entry[1]];\n            break;\n        }\n        index++;\n      }\n      console.log(outputEntries);\n      return outputEntries;\n    } else {\n      return [];\n    }\n  }\n\n  const handleSubmit = () => {\n    props.onHide();\n    props.onSubmit();\n  }\n\n  return(\n    <Modal show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n          <Modal.Title>Review Damage/Defect Submission</Modal.Title>\n      </Modal.Header>\n      <ModalBody>\n        {formatData(props.data).map((field:any) => (\n          <Row><h3>{field[0][0]}</h3>: <h3>{}</h3></Row>\n        ))}\n      </ModalBody>\n      <Button type=\"submit\" onClick={handleSubmit}>Submit</Button>\n    </Modal>\n  );\n};\n\nexport default SubmitConfirmation;"]},"metadata":{},"sourceType":"module"}