{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/CustomerInfo.tsx\";\nimport React, { useState } from 'react';\nimport { MDBCol, MDBFormInline, MDBIcon } from 'mdbreact';\nconst kustomerAPIKey = process.env.REACT_APP_KUSTOMER_API_KEY;\nconst xhr = new XMLHttpRequest();\nxhr.responseType = 'json';\n\nconst getAllCustomers = () => {\n  console.log(\"getting all customers\");\n  let proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  let requestUrl = \"https://api.kustomerapp.com/v1/customers\";\n\n  try {\n    xhr.open(\"GET\", proxyUrl + requestUrl, true);\n    xhr.setRequestHeader(\"authorization\", `Bearer ${kustomerAPIKey}`);\n    xhr.setRequestHeader(\"content-type\", \"application/json\");\n    let resJSON = \"\";\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        let status = xhr.status;\n\n        if (status === 0 || status >= 200 && status < 400) {\n          let response = xhr.response;\n          console.log(\"LOAD SUCCESSFUL\");\n          resJSON = JSON.parse(JSON.stringify(response));\n          return resJSON;\n        }\n      }\n    };\n\n    xhr.send();\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst allCustomers = getAllCustomers();\nconsole.log(allCustomers);\nexport const CustomerInfo = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const customerInfoStyle = {\n    borderRight: \"2px solid gray\",\n    margin: \"10px\",\n    height: \"95%\"\n  };\n\n  const handleSearchChange = async event => {\n    const el = event.target;\n    const value = el.value;\n    setSearchValue(value);\n\n    if (allCustomers !== undefined) {\n      console.log(\"customer data loaded\");\n    } else {\n      console.log(\"loading customer data\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: customerInfoStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Customer Info\"), /*#__PURE__*/React.createElement(MDBFormInline, {\n    className: \"md-form\",\n    style: {\n      display: \"flex\",\n      alignContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    icon: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: searchValue,\n    className: \"form-control form-control-lg ml-3 w-75\",\n    type: \"text\",\n    placeholder: \"Search\",\n    \"aria-label\": \"Search\",\n    onChange: handleSearchChange,\n    onSubmit: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Search Result Display\"));\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/CustomerInfo.tsx"],"names":["React","useState","MDBCol","MDBFormInline","MDBIcon","kustomerAPIKey","process","env","REACT_APP_KUSTOMER_API_KEY","xhr","XMLHttpRequest","responseType","getAllCustomers","console","log","proxyUrl","requestUrl","open","setRequestHeader","resJSON","onreadystatechange","readyState","DONE","status","response","JSON","parse","stringify","send","error","Error","allCustomers","CustomerInfo","searchValue","setSearchValue","customerInfoStyle","borderRight","margin","height","handleSearchChange","event","el","target","value","undefined","display","alignContent"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\nimport { MDBCol, MDBFormInline, MDBIcon } from 'mdbreact'\n\nconst kustomerAPIKey = process.env.REACT_APP_KUSTOMER_API_KEY\nconst xhr = new XMLHttpRequest();\nxhr.responseType = 'json';\n\nconst getAllCustomers = () => {\n  console.log(\"getting all customers\")\n  let proxyUrl: string = \"https://cors-anywhere.herokuapp.com/\"\n  let requestUrl: string = \"https://api.kustomerapp.com/v1/customers\"\n  try {\n    xhr.open(\"GET\", proxyUrl + requestUrl, true);\n    xhr.setRequestHeader(\"authorization\", `Bearer ${kustomerAPIKey}`);\n    xhr.setRequestHeader(\"content-type\", \"application/json\");\n    let resJSON: string = \"\"\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        let status = xhr.status\n        if (status === 0 || (status >= 200 && status < 400) ) {\n          let response = xhr.response\n          console.log(\"LOAD SUCCESSFUL\")\n          resJSON = JSON.parse(JSON.stringify(response))\n          return resJSON\n        }\n      }\n    }\n    xhr.send()\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nconst allCustomers = getAllCustomers()\nconsole.log(allCustomers)\nexport const CustomerInfo = () => {\n  const [searchValue, setSearchValue] = useState<string>('')\n\n  const customerInfoStyle = {\n    borderRight: \"2px solid gray\",\n    margin: \"10px\",\n    height: \"95%\",\n  }\n\n  const handleSearchChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    const el = event.target as HTMLInputElement\n    const value = el.value\n    setSearchValue(value)\n    if (allCustomers !== undefined) {\n      console.log(\"customer data loaded\")\n    } else {\n      console.log(\"loading customer data\")\n    }\n  }\n\n  return (\n    <div style={customerInfoStyle}>\n      <MDBCol md=\"12\">\n        <h2>Customer Info</h2>\n        <MDBFormInline className=\"md-form\" style={{ display: \"flex\", alignContent: \"center\"}}>\n          <MDBIcon icon=\"search\"></MDBIcon>\n          <input value={searchValue} className=\"form-control form-control-lg ml-3 w-75\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={handleSearchChange} onSubmit={handleSearchChange}></input>\n        </MDBFormInline>\n      </MDBCol>\n\n      <div>\n        Search Result Display\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}