{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:4000\";\nexport const addDamagedDefect = async formData => {\n  try {\n    const damagedDefect = {\n      customerData: formData.customerData,\n      orderNumber: formData.orderNumber,\n      vendor: formData.vendor,\n      skuNumber: formData.skuNumber,\n      damageLevel: formData.damageLevel,\n      offerDiscount: formData.offerDiscount,\n      refundAmount: formData.refundAmount,\n      narvarReturn: formData.narvarReturn,\n      itemAmount: formData.itemAmount,\n      damageDescription: formData.damageDescription,\n      actionNeeded: formData.actionNeeded,\n      images: formData.images\n    };\n    const saveDamagedDefect = await axios.post(baseUrl + \"/submit-damaged-defect\", damagedDefect);\n    return saveDamagedDefect;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getAllDamagedDefects = async () => {\n  try {\n    const damagedDefects = await axios.get(baseUrl + \"/damaged-defects\");\n    return damagedDefects;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const updateDamagedDefect = async (damagedDefect, formData) => {\n  try {\n    const damagedDefectUpdate = {\n      customerData: formData.customerData,\n      orderNumber: formData.orderNumber,\n      vendor: formData.vendor,\n      skuNumber: formData.skuNumber,\n      damageLevel: formData.damageLevel,\n      offerDiscount: formData.offerDiscount,\n      refundAmount: formData.refundAmount,\n      narvarReturn: formData.narvarReturn,\n      itemAmount: formData.itemAmount,\n      damageDescription: formData.damageDescription,\n      actionNeeded: formData.actionNeeded,\n      images: formData.images\n    };\n    const updatedDamagedDefect = await axios.put(`${baseUrl}/update-damaged-defect/${damagedDefect._id}`, damagedDefectUpdate);\n    return updatedDamagedDefect;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteDamagedDefect = async _id => {\n  try {\n    const deletedDamagedDefect = await axios.delete(`${baseUrl}/delete-damaged-defect/${_id}`);\n    return deletedDamagedDefect;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const sendEmail = async () => {\n  try {\n    const sentEmail = await axios.get(`${baseUrl}/send-dd-emails/`);\n    return sentEmail;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/front/src/API.ts"],"names":["axios","baseUrl","addDamagedDefect","formData","damagedDefect","customerData","orderNumber","vendor","skuNumber","damageLevel","offerDiscount","refundAmount","narvarReturn","itemAmount","damageDescription","actionNeeded","images","saveDamagedDefect","post","error","Error","getAllDamagedDefects","damagedDefects","get","updateDamagedDefect","damagedDefectUpdate","updatedDamagedDefect","put","_id","deleteDamagedDefect","deletedDamagedDefect","delete","sendEmail","sentEmail"],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\n\nconst baseUrl: string = \"http://localhost:4000\";\n\nexport const addDamagedDefect = async (\n  formData: IDamagedDefect\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const damagedDefect: Omit<IDamagedDefect, \"_id\"> = {\n      customerData: formData.customerData,\n      orderNumber: formData.orderNumber,\n      vendor: formData.vendor,\n      skuNumber: formData.skuNumber,\n      damageLevel: formData.damageLevel,\n      offerDiscount: formData.offerDiscount,\n      refundAmount: formData.refundAmount,\n      narvarReturn: formData.narvarReturn,\n      itemAmount: formData.itemAmount,\n      damageDescription: formData.damageDescription,\n      actionNeeded: formData.actionNeeded,\n      images: formData.images\n    };\n    const saveDamagedDefect: AxiosResponse<ApiDataType> = await axios.post(\n      baseUrl + \"/submit-damaged-defect\",\n      damagedDefect\n    );\n    return saveDamagedDefect;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const getAllDamagedDefects = async (): Promise<\n  AxiosResponse<ApiDataType>\n> => {\n  try {\n    const damagedDefects: AxiosResponse<ApiDataType> = await axios.get(\n      baseUrl + \"/damaged-defects\"\n    );\n    return damagedDefects;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const updateDamagedDefect = async (\n  damagedDefect: IDamagedDefect,\n  formData: IDamagedDefect\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const damagedDefectUpdate: Pick<\n      IDamagedDefect,\n        \"customerData\"\n      | \"orderNumber\"\n      | \"vendor\"\n      | \"skuNumber\"\n      | \"damageLevel\"\n      | \"offerDiscount\"\n      | \"refundAmount\"\n      | \"narvarReturn\"\n      | \"itemAmount\"\n      | \"damageDescription\"\n      | \"actionNeeded\"\n      | \"images\"\n    > = {\n      customerData: formData.customerData,\n      orderNumber: formData.orderNumber,\n      vendor: formData.vendor,\n      skuNumber: formData.skuNumber,\n      damageLevel: formData.damageLevel,\n      offerDiscount: formData.offerDiscount,\n      refundAmount: formData.refundAmount,\n      narvarReturn: formData.narvarReturn,\n      itemAmount: formData.itemAmount,\n      damageDescription: formData.damageDescription,\n      actionNeeded: formData.actionNeeded,\n      images: formData.images\n    };\n    const updatedDamagedDefect: AxiosResponse<ApiDataType> = await axios.put(\n      `${baseUrl}/update-damaged-defect/${damagedDefect._id}`,\n      damagedDefectUpdate\n    );\n    return updatedDamagedDefect;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const deleteDamagedDefect = async (\n  _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const deletedDamagedDefect: AxiosResponse<ApiDataType> = await axios.delete(\n      `${baseUrl}/delete-damaged-defect/${_id}`\n    );\n    return deletedDamagedDefect;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const sendEmail = async () => {\n  try {\n    const sentEmail: AxiosResponse<ApiDataType> = await axios.get(\n      `${baseUrl}/send-dd-emails/`\n      )\n    return sentEmail\n  } catch (error) {\n    throw new Error(error)\n  }\n}"]},"metadata":{},"sourceType":"module"}