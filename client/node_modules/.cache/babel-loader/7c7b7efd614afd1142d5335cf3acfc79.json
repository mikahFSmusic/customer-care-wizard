{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { getAllDamagedDefects, sendEmail } from \"../../api\";\n// import { VendorChart } from './VendorChart'\n// type VendorInfo = {\n//   name: string;\n//   levelOneCount: number;\n//   levelTwoCount: number;\n//   levelThreeCount: number;\n// };\n// const Dashboard = () => {\n//   const [loading, setLoading] = useState<boolean>(true);\n//   const [damageData, setDamageData] = useState<Array<object>>();\n//   const [vendorData, setVendorData] = useState<VendorInfo[]>();\n//   const doFetch = async () => {\n//     setLoading(true);\n//     const data = await getAllDamagedDefects();\n//     let jsonData = JSON.parse(JSON.stringify(data.data));\n//     console.log(jsonData);\n//     setDamageData(jsonData.damagedDefects);\n//     setVendorData(getVendorData(jsonData.damagedDefects))\n//     console.log(getVendorData(jsonData.damagedDefects))\n//     setLoading(false);\n//   };\n//   const getVendorData = (data: Array<object>) => {\n//     let vendorData: Array<VendorInfo> = [];\n//     for (let i = 0; i < data.length; i++) {\n//       let ticket = JSON.parse(JSON.stringify(data[i]));\n//       let vendor = ticket.vendor;\n//       if (!vendor) { continue; }\n//       let damageLevel = ticket.damageLevel;\n//       let index = vendorData.findIndex(\n//         (thisVendor) => thisVendor.name === vendor\n//       );\n//       if (index === -1) {\n//         const thisVendorInfo: VendorInfo = {\n//           name: vendor,\n//           levelOneCount: 0,\n//           levelTwoCount: 0,\n//           levelThreeCount: 0,\n//         };\n//         switch (damageLevel) {\n//           case \"Level 1\":\n//             thisVendorInfo.levelOneCount += 1;\n//             break;\n//           case \"Level 2\":\n//             thisVendorInfo.levelTwoCount += 1;\n//             break;\n//           case \"Level 3\":\n//             thisVendorInfo.levelThreeCount += 1;\n//             break;\n//         }\n//         vendorData.push(thisVendorInfo);\n//       } else {\n//         let thisVendorInfo = vendorData[index];\n//         switch (damageLevel) {\n//           case \"Level 1\":\n//             thisVendorInfo.levelOneCount += 1;\n//             break;\n//           case \"Level 2\":\n//             thisVendorInfo.levelTwoCount += 1;\n//             break;\n//           case \"Level 3\":\n//             thisVendorInfo.levelThreeCount += 1;\n//             break;\n//         }\n//       }\n//     }\n//     return vendorData\n//   };\n//   const handleClick = () => {\n//     doFetch();\n//   };\n//   const doSendEmail = async (event: React.MouseEvent<HTMLButtonElement, globalThis.MouseEvent>) => {\n//     const email = await sendEmail();\n//     let jsonData = JSON.parse(JSON.stringify(email.data));\n//     console.log(jsonData);\n//   }\n//   return (\n//     <div>\n//       {/* <button onClick={handleClick}>Get DD Forms</button>\n//       <div>\n//         {damageData?.map((ticket) => (\n//           <h5 key={JSON.parse(JSON.stringify(ticket))._id}>\n//             {JSON.parse(JSON.stringify(ticket)).vendor}\n//           </h5>\n//         ))}\n//       </div> */}\n//       <button onClick={doSendEmail}> Send Email! </button>\n//       <VendorChart />\n//     </div>\n//   );\n// };\n// export default Dashboard;","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/dashboard/Dashboard.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from \"react\";\n// import { getAllDamagedDefects, sendEmail } from \"../../api\";\n// import { VendorChart } from './VendorChart'\n\n// type VendorInfo = {\n//   name: string;\n//   levelOneCount: number;\n//   levelTwoCount: number;\n//   levelThreeCount: number;\n// };\n\n// const Dashboard = () => {\n//   const [loading, setLoading] = useState<boolean>(true);\n//   const [damageData, setDamageData] = useState<Array<object>>();\n//   const [vendorData, setVendorData] = useState<VendorInfo[]>();\n\n//   const doFetch = async () => {\n//     setLoading(true);\n//     const data = await getAllDamagedDefects();\n//     let jsonData = JSON.parse(JSON.stringify(data.data));\n//     console.log(jsonData);\n//     setDamageData(jsonData.damagedDefects);\n//     setVendorData(getVendorData(jsonData.damagedDefects))\n//     console.log(getVendorData(jsonData.damagedDefects))\n//     setLoading(false);\n//   };\n\n//   const getVendorData = (data: Array<object>) => {\n//     let vendorData: Array<VendorInfo> = [];\n//     for (let i = 0; i < data.length; i++) {\n//       let ticket = JSON.parse(JSON.stringify(data[i]));\n//       let vendor = ticket.vendor;\n//       if (!vendor) { continue; }\n//       let damageLevel = ticket.damageLevel;\n\n//       let index = vendorData.findIndex(\n//         (thisVendor) => thisVendor.name === vendor\n//       );\n//       if (index === -1) {\n//         const thisVendorInfo: VendorInfo = {\n//           name: vendor,\n//           levelOneCount: 0,\n//           levelTwoCount: 0,\n//           levelThreeCount: 0,\n//         };\n//         switch (damageLevel) {\n//           case \"Level 1\":\n//             thisVendorInfo.levelOneCount += 1;\n//             break;\n//           case \"Level 2\":\n//             thisVendorInfo.levelTwoCount += 1;\n//             break;\n//           case \"Level 3\":\n//             thisVendorInfo.levelThreeCount += 1;\n//             break;\n//         }\n//         vendorData.push(thisVendorInfo);\n//       } else {\n//         let thisVendorInfo = vendorData[index];\n//         switch (damageLevel) {\n//           case \"Level 1\":\n//             thisVendorInfo.levelOneCount += 1;\n//             break;\n//           case \"Level 2\":\n//             thisVendorInfo.levelTwoCount += 1;\n//             break;\n//           case \"Level 3\":\n//             thisVendorInfo.levelThreeCount += 1;\n//             break;\n//         }\n//       }\n//     }\n//     return vendorData\n//   };\n//   const handleClick = () => {\n//     doFetch();\n//   };\n\n//   const doSendEmail = async (event: React.MouseEvent<HTMLButtonElement, globalThis.MouseEvent>) => {\n//     const email = await sendEmail();\n//     let jsonData = JSON.parse(JSON.stringify(email.data));\n//     console.log(jsonData);\n//   }\n\n//   return (\n//     <div>\n//       {/* <button onClick={handleClick}>Get DD Forms</button>\n//       <div>\n//         {damageData?.map((ticket) => (\n//           <h5 key={JSON.parse(JSON.stringify(ticket))._id}>\n//             {JSON.parse(JSON.stringify(ticket)).vendor}\n//           </h5>\n//         ))}\n//       </div> */}\n//       <button onClick={doSendEmail}> Send Email! </button>\n//       <VendorChart />\n\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n"]},"metadata":{},"sourceType":"module"}