{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/FormComponents/ImageUpload.tsx\";\nimport React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form'; // allows passing of url from parent element\n// (could implement a fetch to database for updating for contents)\n// TODO: implement reference/registering of field with react-hook-form\n\nexport const ImageUpload = props => {\n  const [url, setURL] = useState(\"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\");\n  const placeholder = \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\";\n\n  if (props.imageURL && url !== placeholder) {\n    setURL(props.imageURL);\n  }\n\n  const handleFileChange = event => {\n    const el = event.target;\n    const newURL = URL.createObjectURL(el.files[0]);\n    handleFileUpload(el.files ? newURL : url);\n  };\n\n  const handleFileUpload = async file => {\n    const imageData = new FormData();\n    console.log(file);\n    imageData.append(\"image\", file);\n    const url = `http://localhost:4000/upload-damage-image`;\n    const config = {\n      method: \"POST\",\n      body: imageData\n    };\n    console.log(imageData);\n\n    try {\n      const req = await fetch(url, config);\n      console.log(req);\n\n      if (req.ok) {\n        const res = await req.json();\n        console.log(res);\n\n        if (res.success) {\n          setURL(res.image.damageImage);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"50px\",\n    height: \"50px\",\n    src: `${url}`,\n    alt: \"damage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.File, {\n    name: \"image\",\n    type: \"file\",\n    accept: \"image/png image/jpeg\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/FormComponents/ImageUpload.tsx"],"names":["React","useState","Form","ImageUpload","props","url","setURL","placeholder","imageURL","handleFileChange","event","el","target","newURL","URL","createObjectURL","files","handleFileUpload","file","imageData","FormData","console","log","append","config","method","body","req","fetch","ok","res","json","success","image","damageImage","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,sBAAjB,C,CAEA;AACA;AACA;;AAKA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AACtD,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAS,yHAAT,CAA9B;AAEA,QAAMM,WAAW,GAAG,yHAApB;;AAEA,MAAIH,KAAK,CAACI,QAAN,IAAkBH,GAAG,KAAKE,WAA9B,EAA2C;AACzCD,IAAAA,MAAM,CAACF,KAAK,CAACI,QAAP,CAAN;AACD;;AAED,QAAMC,gBAAgB,GAAIC,KAAD,IAA8C;AACrE,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAjB;AACA,UAAMC,MAAM,GAAGC,GAAG,CAACC,eAAJ,CAAoBJ,EAAE,CAACK,KAAH,CAAS,CAAT,CAApB,CAAf;AACAC,IAAAA,gBAAgB,CAACN,EAAE,CAACK,KAAH,GAAWH,MAAX,GAAoBR,GAArB,CAAhB;AACD,GAJD;;AAMA,QAAMY,gBAAgB,GAAG,MAAOC,IAAP,IAAoB;AAC3C,UAAMC,SAAS,GAAG,IAAIC,QAAJ,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAC,IAAAA,SAAS,CAACI,MAAV,CAAiB,OAAjB,EAA0BL,IAA1B;AAEA,UAAMb,GAAG,GAAI,2CAAb;AAEA,UAAMmB,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAEP;AAFO,KAAf;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AACA,QAAI;AACF,YAAMQ,GAAG,GAAG,MAAMC,KAAK,CAACvB,GAAD,EAAMmB,MAAN,CAAvB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;;AACA,UAAIA,GAAG,CAACE,EAAR,EAAY;AACV,cAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAlB;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;;AACA,YAAIA,GAAG,CAACE,OAAR,EAAiB;AACf1B,UAAAA,MAAM,CAACwB,GAAG,CAACG,KAAJ,CAAUC,WAAX,CAAN;AACD;AACF;AACF,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD;AACF,GAzBD;;AA0BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,MAAM,EAAC,MAAzB;AAAgC,IAAA,GAAG,EAAG,GAAE9B,GAAI,EAA5C;AAA+C,IAAA,GAAG,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,IAAI,EAAC,MAA7B;AAAoC,IAAA,MAAM,EAAC,sBAA3C;AAAkE,IAAA,QAAQ,EAAEI,gBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA/CM","sourcesContent":["import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\n// allows passing of url from parent element\n// (could implement a fetch to database for updating for contents)\n// TODO: implement reference/registering of field with react-hook-form\ninterface ImageUploadProps {\n  imageURL?: string\n}\n\nexport const ImageUpload = (props: ImageUploadProps) => {\n  const [url, setURL] = useState<string>(\"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\")\n\n  const placeholder = \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\"\n\n  if (props.imageURL && url !== placeholder) {\n    setURL(props.imageURL)\n  }\n\n  const handleFileChange = (event:React.ChangeEvent<HTMLFormElement>) => {\n    const el = event.target as HTMLFormElement\n    const newURL = URL.createObjectURL(el.files[0])\n    handleFileUpload(el.files ? newURL : url)\n  }\n\n  const handleFileUpload = async (file:any) => {\n    const imageData = new FormData()\n    console.log(file)\n    imageData.append(\"image\", file)\n\n    const url = `http://localhost:4000/upload-damage-image`;\n\n    const config = {\n      method: \"POST\",\n      body: imageData\n    }\n    console.log(imageData)\n    try {\n      const req = await fetch(url, config)\n      console.log(req)\n      if (req.ok) {\n        const res = await req.json()\n        console.log(res)\n        if (res.success) {\n          setURL(res.image.damageImage)\n        }\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  return (\n    <div>\n      <img width=\"50px\" height=\"50px\" src={`${url}`} alt=\"damage\"></img>\n      <Form.File name=\"image\" type=\"file\" accept=\"image/png image/jpeg\" onChange={handleFileChange}></Form.File>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}