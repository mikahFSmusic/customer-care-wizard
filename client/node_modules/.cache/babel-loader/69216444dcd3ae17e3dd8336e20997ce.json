{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx\";\nimport React, { useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport LevelOneHead from \"./LevelOne\";\nimport LevelTwoHead from \"./LevelTwo\";\nimport LevelThreeHead from \"./LevelThree\";\nimport OfferDiscount from \"./FormComponents/OfferDiscount\";\nimport RefundAmount from \"./FormComponents/RefundAmount\";\nimport ItemAmount from \"./FormComponents/ItemAmount\";\nimport DamageDescription from \"./FormComponents/FileCase/DamageDescription\";\nimport ActionNeeded from \"./FormComponents/FileCase/ActionNeeded\";\nimport ReplacementOrder from \"./FormComponents/ReplacementOrder\";\nimport NarvarReturn from \"./FormComponents/NarvarReturn\";\n\nconst DDForm = props => {\n  let level = \"\";\n  const [levelHeadElement, setLevelHeadElement] = useState();\n  const [imageUploadElements, setImageUploadElements] = useState([]);\n  const [offerDiscountElement, setOfferDiscountElement] = useState();\n  const [refundAmountElement, setRefundAmountElement] = useState();\n  const [narvarReturnElement, setNarvarReturnElement] = useState();\n  const [itemAmountElement, setItemAmountElement] = useState();\n  const [fileCaseElements, setFileCaseElements] = useState([]);\n  const [replacementOrderElement, setReplacementOrderElement] = useState();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const setLevel = newLevel => {\n    level = newLevel;\n  };\n\n  const clearDynamicComponents = () => {\n    setOfferDiscountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }));\n    setRefundAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 28\n      }\n    }));\n    setNarvarReturnElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 28\n      }\n    }));\n    setItemAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }\n    }));\n    setFileCaseElements([/*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }\n    })]);\n    setReplacementOrderElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  useEffect(() => {}, [level]); // Damage Level Change Handler\n\n  const handleLevelChange = event => {\n    const el = event.target;\n    const value = el.value;\n    clearDynamicComponents();\n    setLevel(value);\n\n    if (value === \"Level 1\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(LevelOneHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }\n      }));\n      setImageUploadElements([/*#__PURE__*/React.createElement(Form.File, {\n        key: \"image1\",\n        name: \"image1\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      })]);\n      setOfferDiscountElement( /*#__PURE__*/React.createElement(OfferDiscount, {\n        name: \"levelOneOfferDiscount\",\n        ref: register({\n          required: true\n        }),\n        onChange: handleOfferDiscount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }));\n    } else if (value === \"Level 2\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(LevelTwoHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 27\n        }\n      }));\n      setImageUploadElements([/*#__PURE__*/React.createElement(Form.File, {\n        key: \"image1\",\n        name: \"image1\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Form.File, {\n        key: \"image2\",\n        name: \"image2\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Form.File, {\n        key: \"image3\",\n        name: \"image3\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      })]);\n      setOfferDiscountElement( /*#__PURE__*/React.createElement(OfferDiscount, {\n        name: \"levelTwoOfferDiscount\",\n        ref: register({\n          required: true\n        }),\n        onChange: handleOfferDiscount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }));\n    } else if (value === \"Level 3\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(LevelThreeHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 27\n        }\n      }));\n      setImageUploadElements([/*#__PURE__*/React.createElement(Form.File, {\n        key: \"image1\",\n        name: \"image1\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Form.File, {\n        key: \"image2\",\n        name: \"image2\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Form.File, {\n        key: \"image3\",\n        name: \"image3\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      })]);\n      setItemAmountElement( /*#__PURE__*/React.createElement(ItemAmount, {\n        name: \"levelThreeItemAmount\",\n        onChange: handleItemAmount,\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }));\n    }\n  }; // Handle Offer Discount\n\n\n  const handleOfferDiscount = event => {\n    const el = event.target;\n    const value = el.value; // Reset initial values if switched\n\n    setItemAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 26\n      }\n    }));\n    setRefundAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 28\n      }\n    }));\n    setNarvarReturnElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 28\n      }\n    })); // TODO: need a step to check if the item is out of stock\n\n    if (level === \"Level 1\") {\n      if (value === \"Discount\") {// Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        console.log(\"level 1 Refund\");\n        setRefundAmountElement( /*#__PURE__*/React.createElement(RefundAmount, {\n          name: \"levelOneRefund\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }\n        })); //Submit\n      } else if (value === \"Replace\") {\n        setNarvarReturnElement( /*#__PURE__*/React.createElement(NarvarReturn, {\n          name: \"narvarReturn\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }\n        }));\n      }\n    } else if (level === \"Level 2\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n        console.log(\"Level 2 Discount\");\n      } else if (value === \"Refund\") {\n        setRefundAmountElement( /*#__PURE__*/React.createElement(RefundAmount, {\n          name: \"levelTwoRefund\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }\n        }));\n      } else if (value === \"Replace\") {\n        setItemAmountElement( /*#__PURE__*/React.createElement(ItemAmount, {\n          name: \"levelTwoItemAmount\",\n          onChange: handleItemAmount,\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  };\n\n  const handleItemAmount = event => {\n    const el = event.target;\n    const value = el.value; // reset values if change\n\n    setFileCaseElements([/*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 26\n      }\n    })]);\n    setReplacementOrderElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 32\n      }\n    }));\n\n    if (value === \"Over $50\") {\n      setFileCaseElements([/*#__PURE__*/React.createElement(DamageDescription, {\n        name: \"damageDescription\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ActionNeeded, {\n        name: \"actionNeeded\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      })]);\n    } else if (value === \"Under $50\") {\n      setReplacementOrderElement( /*#__PURE__*/React.createElement(ReplacementOrder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 34\n        }\n      }));\n    }\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, \"Damaged/Defective Form\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, \"Purchase Received\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"purchaseReceived\",\n    as: \"select\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Received?\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"No\")), errors.purchaseReceived && \"receipt status is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, \"Order #\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"orderNumber\",\n    placeholder: \"Order #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }), errors.orderNumber && \"Order # is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, \"Vendor\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"vendor\",\n    as: \"select\",\n    defaultValue: \"Choose Vendor...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }), vendorList.map(vendor => /*#__PURE__*/React.createElement(\"option\", {\n    key: vendor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, vendor))), errors.vendor && \"Vendor required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, \"SKU #\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"skuNumber\",\n    placeholder: \"SKU #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }), errors.skuNumber && \"SKU # is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, \"Damage Level\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"damageLevel\",\n    as: \"select\",\n    defaultValue: \"Damage Level...\",\n    ref: register({\n      required: true\n    }),\n    onChange: handleLevelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }), damageLevels.map(level => /*#__PURE__*/React.createElement(\"option\", {\n    key: level,\n    value: level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, level))), errors.damageLevel && \"Please select damage level\"), levelHeadElement, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, imageUploadElements), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, offerDiscountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, narvarReturnElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, refundAmountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, itemAmountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }, fileCaseElements), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, replacementOrderElement), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default DDForm;\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx"],"names":["React","useEffect","Form","Button","useState","useForm","LevelOneHead","LevelTwoHead","LevelThreeHead","OfferDiscount","RefundAmount","ItemAmount","DamageDescription","ActionNeeded","ReplacementOrder","NarvarReturn","DDForm","props","level","levelHeadElement","setLevelHeadElement","imageUploadElements","setImageUploadElements","offerDiscountElement","setOfferDiscountElement","refundAmountElement","setRefundAmountElement","narvarReturnElement","setNarvarReturnElement","itemAmountElement","setItemAmountElement","fileCaseElements","setFileCaseElements","replacementOrderElement","setReplacementOrderElement","register","handleSubmit","errors","setLevel","newLevel","clearDynamicComponents","handleLevelChange","event","el","target","value","required","handleOfferDiscount","handleItemAmount","console","log","onSubmit","data","purchaseReceived","orderNumber","vendorList","map","vendor","skuNumber","damageLevels","damageLevel"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport LevelOneHead from \"./LevelOne\";\nimport LevelTwoHead from \"./LevelTwo\";\nimport LevelThreeHead from \"./LevelThree\";\nimport OfferDiscount from \"./FormComponents/OfferDiscount\";\nimport RefundAmount from \"./FormComponents/RefundAmount\";\nimport ItemAmount from \"./FormComponents/ItemAmount\";\nimport DamageDescription from \"./FormComponents/FileCase/DamageDescription\";\nimport ActionNeeded from \"./FormComponents/FileCase/ActionNeeded\";\nimport ReplacementOrder from \"./FormComponents/ReplacementOrder\";\nimport NarvarReturn from \"./FormComponents/NarvarReturn\";\n\ninterface FormInputs {\n  purchaseReceived: string;\n  orderNumber: string;\n  vendor: string;\n  skuNumber: string;\n  damageLevel: string;\n}\n\nconst DDForm = (props: any) => {\n  let level: string = \"\";\n  const [levelHeadElement, setLevelHeadElement] = useState<JSX.Element>();\n  const [imageUploadElements, setImageUploadElements] = useState<\n    Array<JSX.Element>\n  >([]);\n  const [offerDiscountElement, setOfferDiscountElement] = useState<\n    JSX.Element\n  >();\n  const [refundAmountElement, setRefundAmountElement] = useState<JSX.Element>();\n  const [narvarReturnElement, setNarvarReturnElement] = useState<JSX.Element>();\n  const [itemAmountElement, setItemAmountElement] = useState<JSX.Element>();\n  const [fileCaseElements, setFileCaseElements] = useState<Array<JSX.Element>>(\n    []\n  );\n  const [replacementOrderElement, setReplacementOrderElement] = useState<\n    JSX.Element\n  >();\n  const { register, handleSubmit, errors } = useForm<FormInputs>();\n\n  const setLevel = (newLevel: string) => {\n    level = newLevel;\n  };\n\n  const clearDynamicComponents = () => {\n    setOfferDiscountElement(<div></div>);\n    setRefundAmountElement(<div></div>);\n    setNarvarReturnElement(<div></div>);\n    setItemAmountElement(<div></div>);\n    setFileCaseElements([<div></div>]);\n    setReplacementOrderElement(<div></div>);\n  };\n\n  useEffect(() => {}, [level]);\n\n  // Damage Level Change Handler\n  const handleLevelChange = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n    clearDynamicComponents();\n    setLevel(value);\n    if (value === \"Level 1\") {\n      setLevelHeadElement(<LevelOneHead></LevelOneHead>);\n      setImageUploadElements([\n        <Form.File key=\"image1\" name=\"image1\" ref={register({required: true})} />,\n      ]);\n      setOfferDiscountElement(\n        <OfferDiscount\n          name=\"levelOneOfferDiscount\"\n          ref={register({required: true})}\n          onChange={handleOfferDiscount}\n        />\n      );\n    } else if (value === \"Level 2\") {\n      setLevelHeadElement(<LevelTwoHead></LevelTwoHead>);\n      setImageUploadElements([\n        <Form.File key=\"image1\" name=\"image1\" ref={register({required: true})} />,\n        <Form.File key=\"image2\" name=\"image2\" ref={register({required: true})} />,\n        <Form.File key=\"image3\" name=\"image3\" ref={register({required: true})} />,\n      ]);\n      setOfferDiscountElement(\n        <OfferDiscount\n          name=\"levelTwoOfferDiscount\"\n          ref={register({required: true})}\n          onChange={handleOfferDiscount}\n        />\n      );\n    } else if (value === \"Level 3\") {\n      setLevelHeadElement(<LevelThreeHead></LevelThreeHead>);\n      setImageUploadElements([\n        <Form.File key=\"image1\" name=\"image1\" ref={register({required: true})} />,\n        <Form.File key=\"image2\" name=\"image2\" ref={register({required: true})} />,\n        <Form.File key=\"image3\" name=\"image3\" ref={register({required: true})} />,\n      ]);\n      setItemAmountElement(\n        <ItemAmount\n          name=\"levelThreeItemAmount\"\n          onChange={handleItemAmount}\n          ref={register({required: true})}\n        />\n      );\n    }\n  };\n\n  // Handle Offer Discount\n  const handleOfferDiscount = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n\n    // Reset initial values if switched\n    setItemAmountElement(<div />);\n    setRefundAmountElement(<div />);\n    setNarvarReturnElement(<div />);\n\n    // TODO: need a step to check if the item is out of stock\n    if (level === \"Level 1\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        console.log(\"level 1 Refund\");\n        setRefundAmountElement(\n          <RefundAmount\n            name=\"levelOneRefund\"\n            ref={register({ required: true })}\n          />\n        );\n        //Submit\n      } else if (value === \"Replace\") {\n        setNarvarReturnElement(\n          <NarvarReturn\n            name=\"narvarReturn\"\n            ref={register({ required: true })}\n          />\n        );\n      }\n    } else if (level === \"Level 2\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n        console.log(\"Level 2 Discount\");\n      } else if (value === \"Refund\") {\n        setRefundAmountElement(\n          <RefundAmount\n            name=\"levelTwoRefund\"\n            ref={register({ required: true })}\n          />\n        );\n      } else if (value === \"Replace\") {\n        setItemAmountElement(\n          <ItemAmount\n            name=\"levelTwoItemAmount\"\n            onChange={handleItemAmount}\n            ref={register({required: true})}\n          />\n        );\n      }\n    }\n  };\n\n  const handleItemAmount = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n\n    // reset values if change\n    setFileCaseElements([<div></div>]);\n    setReplacementOrderElement(<div></div>);\n\n    if (value === \"Over $50\") {\n      setFileCaseElements([\n        <DamageDescription name=\"damageDescription\" ref={register({required: true})} />,\n        <ActionNeeded name=\"actionNeeded\" ref={register({required: true})} />,\n      ]);\n    } else if (value === \"Under $50\") {\n      setReplacementOrderElement(<ReplacementOrder />);\n    }\n  };\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <h2>Damaged/Defective Form</h2>\n      {/* Purchase Received */}\n      <Form.Group>\n        <Form.Label>Purchase Received</Form.Label>\n        <Form.Control\n          name=\"purchaseReceived\"\n          as=\"select\"\n          ref={register({ required: true })}\n        >\n          <option value=\"\">Received?</option>\n          <option>Yes</option>\n          <option>No</option>\n        </Form.Control>\n        {errors.purchaseReceived && \"receipt status is required\"}\n      </Form.Group>\n\n      {/* Order # */}\n      <Form.Group>\n        <Form.Label>Order #</Form.Label>\n        <Form.Control\n          name=\"orderNumber\"\n          placeholder=\"Order #\"\n          ref={register({ required: true })}\n        ></Form.Control>\n        {errors.orderNumber && \"Order # is required\"}\n      </Form.Group>\n\n      {/* Vendor */}\n      <Form.Group>\n        <Form.Label>Vendor</Form.Label>\n        <Form.Control\n          name=\"vendor\"\n          as=\"select\"\n          defaultValue=\"Choose Vendor...\"\n          ref={register({ required: true })}\n        >\n          <option></option>\n          {vendorList.map((vendor) => (\n            <option key={vendor}>{vendor}</option>\n          ))}\n        </Form.Control>\n        {errors.vendor && \"Vendor required\"}\n      </Form.Group>\n\n      {/* SKU Number */}\n      <Form.Group>\n        <Form.Label>SKU #</Form.Label>\n        <Form.Control\n          name=\"skuNumber\"\n          placeholder=\"SKU #\"\n          ref={register({ required: true })}\n        ></Form.Control>\n        {errors.skuNumber && \"SKU # is required\"}\n      </Form.Group>\n\n      {/* Damage Level */}\n      <Form.Group>\n        <Form.Label>Damage Level</Form.Label>\n        <Form.Control\n          name=\"damageLevel\"\n          as=\"select\"\n          defaultValue=\"Damage Level...\"\n          ref={register({ required: true })}\n          onChange={handleLevelChange}\n        >\n          <option></option>\n          {damageLevels.map((level) => (\n            <option key={level} value={level}>\n              {level}\n            </option>\n          ))}\n        </Form.Control>\n        {errors.damageLevel && \"Please select damage level\"}\n      </Form.Group>\n\n      {/* Level Paths */}\n      {levelHeadElement}\n      <Form.Group>{imageUploadElements}</Form.Group>\n      <Form.Group>{offerDiscountElement}</Form.Group>\n      <Form.Group>{narvarReturnElement}</Form.Group>\n      <Form.Group>{refundAmountElement}</Form.Group>\n      <Form.Group>{itemAmountElement}</Form.Group>\n      <Form.Group>{fileCaseElements}</Form.Group>\n      <Form.Group>{replacementOrderElement}</Form.Group>\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n};\n\nexport default DDForm;\n\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];\n"]},"metadata":{},"sourceType":"module"}