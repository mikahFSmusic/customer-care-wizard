{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/front/src/components/DamageDefectForm/DamageDefectForm.tsx\";\nimport React, { useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport OfferDiscount from \"./FormComponents/OfferDiscount\";\nimport RefundAmount from \"./FormComponents/RefundAmount\";\nimport ItemAmount from \"./FormComponents/ItemAmount\";\nimport DamageDescription from \"./FormComponents/FileCase/DamageDescription\";\nimport ActionNeeded from \"./FormComponents/FileCase/ActionNeeded\";\nimport ReplacementOrder from \"./FormComponents/ReplacementOrder\";\nimport NarvarReturn from \"./FormComponents/NarvarReturn\";\nimport SubmitConfirmation from \"./SubmitConfirmation\";\nimport { addDamagedDefect } from \"../../API\";\nimport { ImageUpload } from \"./FormComponents/ImageUpload\";\nimport { CustomerExplore } from '../CustomerExplore';\nimport { MDBCol } from 'mdbreact';\nimport { fetchCustomerOrders } from \"../../KustomerAPI\";\n\nconst DDForm = props => {\n  // Damage Level\n  let level = \"\";\n\n  const setLevel = newLevel => {\n    level = newLevel;\n  };\n  /* STATE HOOKS */\n\n\n  const [imageUploadElements, setImageUploadElements] = useState([]);\n  const [offerDiscountElement, setOfferDiscountElement] = useState();\n  const [refundAmountElement, setRefundAmountElement] = useState();\n  const [narvarReturnElement, setNarvarReturnElement] = useState();\n  const [itemAmountElement, setItemAmountElement] = useState();\n  const [fileCaseElements, setFileCaseElements] = useState([]);\n  const [replacementOrderElement, setReplacementOrderElement] = useState(); // Submission Confirmation Modal\n\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState({});\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // Resets components on level change\n\n  const clearDynamicComponents = () => {\n    setOfferDiscountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }));\n    setRefundAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }\n    }));\n    setNarvarReturnElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 28\n      }\n    }));\n    setItemAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 26\n      }\n    }));\n    setFileCaseElements([/*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }\n    })]);\n    setReplacementOrderElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  const [customerData, setCustomerData] = useState();\n  const [customerID, setCustomerID] = useState(\"\");\n  const [customerOrders, setCustomerOrders] = useState(); // TODO: set customer data type\n\n  const handleCustomerClick = (event, customerData) => {\n    console.log(customerData);\n    setCustomerData(customerData);\n    setCustomerID(customerData.id);\n  };\n\n  useEffect(() => {\n    const doFetch = async customerID => {\n      if (customerID) {\n        const data = await fetchCustomerOrders(customerID);\n\n        if (data) {\n          console.log(data);\n          setCustomerOrders(data);\n        }\n      }\n    };\n\n    doFetch(customerID);\n  }, [customerID]); // Image Upload\n\n  const [imageURLs, setImageURLs] = useState();\n  useEffect(() => {\n    imageURLs === null || imageURLs === void 0 ? void 0 : imageURLs.forEach(url => {\n      setImageUploadElements(prevElements => [...prevElements, /*#__PURE__*/React.createElement(\"img\", {\n        width: \"80px\",\n        height: \"80px\",\n        src: url,\n        alt: \"damage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      })]);\n    });\n  }, [imageURLs]);\n\n  const handleFileChange = async event => {\n    const url = \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\";\n    const el = event.target;\n    const newURL = el.files ? el.files : url;\n    const images = await handleFileUpload(newURL);\n    let urls = [];\n    images.forEach(image => {\n      urls.push(image[\"location\"]);\n    });\n    setImageURLs(urls);\n  };\n\n  const handleFileUpload = async files => {\n    const imageForm = new FormData(); // appends image data for submission to S3 bucket\n\n    for (let i = 0; i < files.length; i++) {\n      imageForm.append(\"images\", files[i]);\n    } //TODO: this needs to change for live version (won't work online)\n    // variable named server url to replace localhost would work\n\n\n    const url = `http://localhost:4000/upload-damage-image`;\n    const config = {\n      method: \"POST\",\n      body: imageForm\n    };\n\n    try {\n      const req = await fetch(url, config); // console.log(req);\n\n      if (req.ok) {\n        const res = await req.json(); // console.log(res);\n\n        if (res.success) {\n          return res.images;\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Damage Level Change Handler\n\n\n  const handleLevelChange = event => {\n    const el = event.target;\n    const value = el.value;\n    clearDynamicComponents();\n    setLevel(value);\n\n    if (value === \"Level 1\") {\n      setImageUploadElements([/*#__PURE__*/React.createElement(ImageUpload, {\n        onChange: handleFileChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 31\n        }\n      })]);\n      setOfferDiscountElement( /*#__PURE__*/React.createElement(OfferDiscount, {\n        name: \"offerDiscount\",\n        ref: register({\n          required: true\n        }),\n        onChange: handleOfferDiscount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }));\n    } else if (value === \"Level 2\") {\n      setImageUploadElements([/*#__PURE__*/React.createElement(ImageUpload, {\n        onChange: handleFileChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 31\n        }\n      })]);\n      setOfferDiscountElement( /*#__PURE__*/React.createElement(OfferDiscount, {\n        name: \"offerDiscount\",\n        ref: register({\n          required: true\n        }),\n        onChange: handleOfferDiscount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }));\n    } else if (value === \"Level 3\") {\n      setImageUploadElements([/*#__PURE__*/React.createElement(ImageUpload, {\n        onChange: handleFileChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 31\n        }\n      })]);\n      setItemAmountElement( /*#__PURE__*/React.createElement(ItemAmount, {\n        name: \"itemAmount\",\n        onChange: handleItemAmount,\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }));\n    }\n  }; // Handle Offer Discount\n\n\n  const handleOfferDiscount = event => {\n    const el = event.target;\n    const value = el.value; // Reset initial values if switched\n\n    setItemAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 26\n      }\n    }));\n    setRefundAmountElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 28\n      }\n    }));\n    setNarvarReturnElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 28\n      }\n    }));\n\n    if (level === \"Level 1\") {\n      if (value === \"Discount\") {// Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement( /*#__PURE__*/React.createElement(RefundAmount, {\n          name: \"refundAmount\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }\n        })); //Submit\n      } else if (value === \"Replace\") {\n        setNarvarReturnElement( /*#__PURE__*/React.createElement(NarvarReturn, {\n          name: \"narvarReturn\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }\n        }));\n      }\n    } else if (level === \"Level 2\") {\n      if (value === \"Discount\") {// Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement( /*#__PURE__*/React.createElement(RefundAmount, {\n          name: \"refundAmount\",\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }\n        }));\n      } else if (value === \"Replace\") {\n        setItemAmountElement( /*#__PURE__*/React.createElement(ItemAmount, {\n          name: \"itemAmount\",\n          onChange: handleItemAmount,\n          ref: register({\n            required: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  };\n\n  const handleItemAmount = event => {\n    const el = event.target;\n    const value = el.value; // reset values if change\n\n    setFileCaseElements([/*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 26\n      }\n    })]);\n    setReplacementOrderElement( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 32\n      }\n    }));\n\n    if (value === \"Over $50\") {\n      setFileCaseElements([/*#__PURE__*/React.createElement(DamageDescription, {\n        name: \"damageDescription\",\n        key: \"damageDescription\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ActionNeeded, {\n        name: \"actionNeeded\",\n        key: \"actionNeeded\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }\n      })]);\n    } else if (value === \"Under $50\") {\n      setReplacementOrderElement( /*#__PURE__*/React.createElement(ReplacementOrder, {\n        name: \"replacementOrder\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleReview = formData => {\n    setData(formData);\n    handleShow();\n  };\n\n  const onSubmit = formData => {\n    console.log(\"Pre-append\");\n    console.log(formData);\n    let outputForm = new FormData();\n\n    for (let key in formData) {\n      console.log(key);\n      outputForm.append(key, formData[key]);\n    }\n\n    outputForm.append(\"customerData\", JSON.stringify(customerData));\n    outputForm.append(\"images\", JSON.stringify(imageURLs)); // stores form to Mongo\n\n    let outputData = {};\n\n    for (const [key, value] of outputForm) {\n      console.log(\"key: \" + key + \", value: \" + value);\n      outputData[key] = value;\n    }\n\n    addDamagedDefect(outputData).then(({\n      status\n    }) => {\n      if (status !== 201) {\n        throw new Error(\"Error saving data\");\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const formContainerStyles = {\n    margin: \"2px\",\n    height: \"95%\"\n  };\n  const formStyles = {\n    borderRadius: \"10px\",\n    padding: \"20px\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: formContainerStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    method: \"post\",\n    encType: \"multipart/form-data\",\n    action: \"/submit-damaged-defect\",\n    style: formStyles,\n    className: \"z-depth-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    style: {\n      padding: '10px',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, \"Damaged/Defective Item Form\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomerExplore, {\n    onClick: handleCustomerClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      color: \"#e5e5e5\",\n      backgroundColor: \"#e5e5e5\",\n      height: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      color: \"#e5e5e5\",\n      backgroundColor: \"#e5e5e5\",\n      height: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"orderNumber\",\n    placeholder: \"Order #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }), errors.orderNumber && \"Order # is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"vendor\",\n    as: \"select\",\n    placeholder: \"vendor\",\n    defaultValue: \"Select vendor\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"damage-level\",\n    value: \"Select vendor\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, \"Select vendor\"), vendorList.map(vendor => /*#__PURE__*/React.createElement(\"option\", {\n    key: vendor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }, vendor))), errors.vendor && \"Vendor required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"skuNumber\",\n    placeholder: \"SKU #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }), errors.skuNumber && \"SKU # is required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      color: \"#e5e5e5\",\n      backgroundColor: \"#e5e5e5\",\n      height: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"damageLevel\",\n    as: \"select\",\n    defaultValue: \"Damage level\",\n    ref: register({\n      required: true\n    }),\n    onChange: handleLevelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"damage-level\",\n    value: \"Damage level\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }, \"Damage level\"), damageLevels.map(level => /*#__PURE__*/React.createElement(\"option\", {\n    key: level,\n    value: level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }, level))), errors.damageLevel && \"Please select damage level\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }, imageUploadElements), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 11\n    }\n  }, offerDiscountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }, narvarReturnElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 11\n    }\n  }, refundAmountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }, itemAmountElement), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 11\n    }\n  }, fileCaseElements), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 11\n    }\n  }, replacementOrderElement), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit(handleReview),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, \"Review\"), /*#__PURE__*/React.createElement(SubmitConfirmation, {\n    data: data,\n    show: show,\n    onHide: handleClose,\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default DDForm;\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/front/src/components/DamageDefectForm/DamageDefectForm.tsx"],"names":["React","useEffect","Form","Button","useState","useForm","OfferDiscount","RefundAmount","ItemAmount","DamageDescription","ActionNeeded","ReplacementOrder","NarvarReturn","SubmitConfirmation","addDamagedDefect","ImageUpload","CustomerExplore","MDBCol","fetchCustomerOrders","DDForm","props","level","setLevel","newLevel","imageUploadElements","setImageUploadElements","offerDiscountElement","setOfferDiscountElement","refundAmountElement","setRefundAmountElement","narvarReturnElement","setNarvarReturnElement","itemAmountElement","setItemAmountElement","fileCaseElements","setFileCaseElements","replacementOrderElement","setReplacementOrderElement","show","setShow","data","setData","register","handleSubmit","errors","clearDynamicComponents","customerData","setCustomerData","customerID","setCustomerID","customerOrders","setCustomerOrders","handleCustomerClick","event","console","log","id","doFetch","imageURLs","setImageURLs","forEach","url","prevElements","handleFileChange","el","target","newURL","files","images","handleFileUpload","urls","image","push","imageForm","FormData","i","length","append","config","method","body","req","fetch","ok","res","json","success","error","handleLevelChange","value","required","handleOfferDiscount","handleItemAmount","handleClose","handleShow","handleReview","formData","onSubmit","outputForm","key","JSON","stringify","outputData","then","status","Error","catch","formContainerStyles","margin","height","formStyles","borderRadius","padding","justifyContent","color","backgroundColor","orderNumber","vendorList","map","vendor","skuNumber","damageLevels","damageLevel"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport OfferDiscount from \"./FormComponents/OfferDiscount\";\nimport RefundAmount from \"./FormComponents/RefundAmount\";\nimport ItemAmount from \"./FormComponents/ItemAmount\";\nimport DamageDescription from \"./FormComponents/FileCase/DamageDescription\";\nimport ActionNeeded from \"./FormComponents/FileCase/ActionNeeded\";\nimport ReplacementOrder from \"./FormComponents/ReplacementOrder\";\nimport NarvarReturn from \"./FormComponents/NarvarReturn\";\nimport SubmitConfirmation from \"./SubmitConfirmation\";\nimport { addDamagedDefect } from \"../../API\";\nimport { ImageUpload } from \"./FormComponents/ImageUpload\";\nimport { CustomerExplore } from '../CustomerExplore';\nimport { MDBCol } from 'mdbreact';\nimport { fetchCustomers, fetchCustomerOrders } from \"../../KustomerAPI\";\n\nconst DDForm = (props: any) => {\n  // Damage Level\n  let level: string = \"\";\n  const setLevel = (newLevel: string) => {\n    level = newLevel;\n  };\n\n  /* STATE HOOKS */\n  const [imageUploadElements, setImageUploadElements] = useState<\n    Array<JSX.Element>\n  >([]);\n\n  const [offerDiscountElement, setOfferDiscountElement] = useState<\n    JSX.Element\n  >();\n  const [refundAmountElement, setRefundAmountElement] = useState<JSX.Element>();\n  const [narvarReturnElement, setNarvarReturnElement] = useState<JSX.Element>();\n  const [itemAmountElement, setItemAmountElement] = useState<JSX.Element>();\n  const [fileCaseElements, setFileCaseElements] = useState<Array<JSX.Element>>(\n    []\n  );\n  const [replacementOrderElement, setReplacementOrderElement] = useState<\n    JSX.Element\n  >();\n\n  // Submission Confirmation Modal\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState({});\n  const { register, handleSubmit, errors } = useForm();\n\n  // Resets components on level change\n  const clearDynamicComponents = () => {\n    setOfferDiscountElement(<div></div>);\n    setRefundAmountElement(<div></div>);\n    setNarvarReturnElement(<div></div>);\n    setItemAmountElement(<div></div>);\n    setFileCaseElements([<div></div>]);\n    setReplacementOrderElement(<div></div>);\n  };\n\n  const [customerData, setCustomerData] = useState<Object>();\n  const [customerID, setCustomerID] = useState<string>(\"\");\n  const [customerOrders, setCustomerOrders] = useState<Object>();\n\n  // TODO: set customer data type\n  const handleCustomerClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, customerData: any) => {\n    console.log(customerData)\n    setCustomerData(customerData)\n    setCustomerID(customerData.id)\n  }\n\n  useEffect(() => {\n    const doFetch = async (customerID: string) => {\n      if (customerID) {\n        const data = await fetchCustomerOrders(customerID);\n        if (data) {\n          console.log(data)\n          setCustomerOrders(data)\n        }\n      }\n    }\n    doFetch(customerID)\n  }, [customerID])\n\n  // Image Upload\n  const [imageURLs, setImageURLs] = useState<Array<string>>();\n  useEffect(() => {\n    imageURLs?.forEach((url) => {\n      setImageUploadElements((prevElements) => [\n        ...prevElements,\n        <img width=\"80px\" height=\"80px\" src={url} alt=\"damage\" />,\n      ]);\n    });\n  }, [imageURLs]);\n\n  const handleFileChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const url =\n      \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\";\n    const el = event.target as HTMLInputElement;\n    const newURL = el.files ? el.files : url;\n    const images = await handleFileUpload(newURL);\n    let urls: Array<string> = [];\n    images.forEach((image: any) => {\n      urls.push(image[\"location\"]);\n    });\n    setImageURLs(urls);\n  };\n\n  const handleFileUpload = async (files: any) => {\n    const imageForm = new FormData();\n\n    // appends image data for submission to S3 bucket\n    for (let i = 0; i < files.length; i++) {\n      imageForm.append(\"images\", files[i]);\n    }\n\n    //TODO: this needs to change for live version (won't work online)\n    // variable named server url to replace localhost would work\n    const url = `http://localhost:4000/upload-damage-image`;\n\n    const config = {\n      method: \"POST\",\n      body: imageForm,\n    };\n    try {\n      const req = await fetch(url, config);\n      // console.log(req);\n      if (req.ok) {\n        const res = await req.json();\n        // console.log(res);\n        if (res.success) {\n          return res.images;\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Damage Level Change Handler\n  const handleLevelChange = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n    clearDynamicComponents();\n    setLevel(value);\n    if (value === \"Level 1\") {\n      setImageUploadElements([<ImageUpload onChange={handleFileChange} />]);\n      setOfferDiscountElement(\n        <OfferDiscount\n          name=\"offerDiscount\"\n          ref={register({ required: true })}\n          onChange={handleOfferDiscount}\n        />\n      );\n    } else if (value === \"Level 2\") {\n      setImageUploadElements([<ImageUpload onChange={handleFileChange} />]);\n      setOfferDiscountElement(\n        <OfferDiscount\n          name=\"offerDiscount\"\n          ref={register({ required: true })}\n          onChange={handleOfferDiscount}\n        />\n      );\n    } else if (value === \"Level 3\") {\n      setImageUploadElements([<ImageUpload onChange={handleFileChange} />]);\n      setItemAmountElement(\n        <ItemAmount\n          name=\"itemAmount\"\n          onChange={handleItemAmount}\n          ref={register({ required: true })}\n        />\n      );\n    }\n  };\n\n  // Handle Offer Discount\n  const handleOfferDiscount = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n\n    // Reset initial values if switched\n    setItemAmountElement(<div />);\n    setRefundAmountElement(<div />);\n    setNarvarReturnElement(<div />);\n\n    if (level === \"Level 1\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement(\n          <RefundAmount\n            name=\"refundAmount\"\n            ref={register({ required: true })}\n          />\n        );\n        //Submit\n      } else if (value === \"Replace\") {\n        setNarvarReturnElement(\n          <NarvarReturn\n            name=\"narvarReturn\"\n            ref={register({ required: true })}\n          />\n        );\n      }\n    } else if (level === \"Level 2\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement(\n          <RefundAmount\n            name=\"refundAmount\"\n            ref={register({ required: true })}\n          />\n        );\n      } else if (value === \"Replace\") {\n        setItemAmountElement(\n          <ItemAmount\n            name=\"itemAmount\"\n            onChange={handleItemAmount}\n            ref={register({ required: true })}\n          />\n        );\n      }\n    }\n  };\n\n  const handleItemAmount = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n\n    // reset values if change\n    setFileCaseElements([<div></div>]);\n    setReplacementOrderElement(<div></div>);\n\n    if (value === \"Over $50\") {\n      setFileCaseElements([\n        <DamageDescription\n          name=\"damageDescription\"\n          key=\"damageDescription\"\n          ref={register({ required: true })}\n        />,\n        <ActionNeeded\n          name=\"actionNeeded\"\n          key=\"actionNeeded\"\n          ref={register({ required: true })}\n        />,\n      ]);\n    } else if (value === \"Under $50\") {\n      setReplacementOrderElement(\n        <ReplacementOrder\n          name=\"replacementOrder\"\n          ref={register({ required: true })}\n        />\n      );\n    }\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleReview = (formData: FormData) => {\n    setData(formData);\n    handleShow();\n  };\n\n  const onSubmit = (formData: any): void => {\n    console.log(\"Pre-append\");\n    console.log(formData);\n    let outputForm = new FormData();\n    for (let key in formData) {\n      console.log(key);\n      outputForm.append(key, formData[key]);\n    }\n    outputForm.append(\"customerData\", JSON.stringify(customerData));\n    outputForm.append(\"images\", JSON.stringify(imageURLs));\n    // stores form to Mongo\n    let outputData: any = {};\n    for (const [key, value] of outputForm) {\n      console.log(\"key: \" + key + \", value: \" + value);\n      outputData[key] = value;\n    }\n    addDamagedDefect(outputData)\n      .then(({ status }) => {\n        if (status !== 201) {\n          throw new Error(\"Error saving data\");\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const formContainerStyles = {\n    margin: \"2px\",\n    height: \"95%\",\n  };\n\n  const formStyles = {\n    borderRadius: \"10px\",\n    padding: \"20px\",\n  };\n\n  return (\n    <div style={formContainerStyles}>\n      <Form\n        onSubmit={handleSubmit(onSubmit)}\n        method=\"post\"\n        encType=\"multipart/form-data\"\n        action=\"/submit-damaged-defect\"\n        style={formStyles}\n        className=\"z-depth-1\"\n      >\n\n        {/* Customer Information  */}\n        <MDBCol style={{padding: '10px', justifyContent: 'center'}}>\n          <h5>Damaged/Defective Item Form</h5>\n          {/* Customer search and base details */}\n          <Form.Group>\n            <CustomerExplore onClick={handleCustomerClick} />\n          </Form.Group>\n          <hr style={{color: \"#e5e5e5\", backgroundColor:\"#e5e5e5\", height: 1 }}/>\n\n          <Form.Group>\n\n          </Form.Group>\n          <hr style={{color: \"#e5e5e5\", backgroundColor:\"#e5e5e5\", height: 1 }}/>\n          {/* Order # */}\n          <Form.Group>\n            <Form.Control\n              name=\"orderNumber\"\n              placeholder=\"Order #\"\n              ref={register({ required: true })}\n            ></Form.Control>\n            {errors.orderNumber && \"Order # is required\"}\n          </Form.Group>\n\n          {/* Vendor */}\n          <Form.Group>\n            <Form.Control\n              name=\"vendor\"\n              as=\"select\"\n              placeholder=\"vendor\"\n              defaultValue=\"Select vendor\"\n              ref={register({ required: true })}\n            >\n              <option key=\"damage-level\" value=\"Select vendor\" disabled>Select vendor</option>\n              {vendorList.map((vendor) => (\n                <option key={vendor}>{vendor}</option>\n              ))}\n            </Form.Control>\n            {errors.vendor && \"Vendor required\"}\n          </Form.Group>\n\n          {/* SKU Number */}\n          <Form.Group>\n            <Form.Control\n              name=\"skuNumber\"\n              placeholder=\"SKU #\"\n              ref={register({ required: true })}\n            ></Form.Control>\n            {errors.skuNumber && \"SKU # is required\"}\n          </Form.Group>\n          <hr style={{color: \"#e5e5e5\", backgroundColor:\"#e5e5e5\", height: 1 }}/>\n          {/* Damage Level */}\n          <Form.Group>\n            <Form.Control\n              name=\"damageLevel\"\n              as=\"select\"\n              defaultValue=\"Damage level\"\n              ref={register({ required: true })}\n              onChange={handleLevelChange}\n            >\n              <option key=\"damage-level\" value=\"Damage level\" disabled>Damage level</option>\n              {damageLevels.map((level) => (\n                <option key={level} value={level}>\n                  {level}\n                </option>\n              ))}\n            </Form.Control>\n            {errors.damageLevel && \"Please select damage level\"}\n          </Form.Group>\n\n          {/* Level Paths */}\n          <Form.Group>{imageUploadElements}</Form.Group>\n          <Form.Group>{offerDiscountElement}</Form.Group>\n          <Form.Group>{narvarReturnElement}</Form.Group>\n          <Form.Group>{refundAmountElement}</Form.Group>\n          <Form.Group>{itemAmountElement}</Form.Group>\n          <Form.Group>{fileCaseElements}</Form.Group>\n          <Form.Group>{replacementOrderElement}</Form.Group>\n          <Button onClick={handleSubmit(handleReview)}>Review</Button>\n          <SubmitConfirmation\n            data={data}\n            show={show}\n            onHide={handleClose}\n            onSubmit={handleSubmit(onSubmit)}\n          />\n        </MDBCol>\n      </Form>\n    </div>\n  );\n};\n\nexport default DDForm;\n\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];\n"]},"metadata":{},"sourceType":"module"}