{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx\";\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useForm } from \"react-hook-form\";\n\nconst DDForm = () => {\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"purchaseReceived\",\n    as: \"select\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"No\"))), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"orderNumber\",\n    placeholder: \"Order #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"vendor\",\n    as: \"select\",\n    defaultValue: \"Choose Vendor...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Choose Vendor...\"), vendorList.map(vendor => /*#__PURE__*/React.createElement(\"option\", {\n    key: vendor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, vendor))), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"skuNumber\",\n    placeholder: \"SKU #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"damageLevel\",\n    as: \"select\",\n    defaultValue: \"Damage Level...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Damage Level...\"), damageLevels.map(level => /*#__PURE__*/React.createElement(\"option\", {\n    key: level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, level))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default DDForm;\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx"],"names":["React","Form","Button","useForm","DDForm","register","handleSubmit","onSubmit","data","console","log","required","vendorList","map","vendor","damageLevels","level"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BH,OAAO,EAA1C;;AAEA,QAAMI,QAAQ,GAAIC,IAAD,IAAe;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;;AAGA,sBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,YAAY,CAACC,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,kBADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,GAAG,EAAEF,QAAQ,CAAC;AAAEM,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF,CAFF,eAcE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,GAAG,EAAEN,QAAQ,CAAC;AAAEM,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAqBE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,YAAY,EAAC,kBAHf;AAIE,IAAA,GAAG,EAAEN,QAAQ,CAAC;AAAEM,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,EAQGC,UAAU,CAACC,GAAX,CAAgBC,MAAD,iBACd;AAAQ,IAAA,GAAG,EAAEA,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,MAAtB,CADD,CARH,CArBF,eAkCE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,GAAG,EAAET,QAAQ,CAAC;AAAEM,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,eAwCE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,YAAY,EAAC,iBAHf;AAIE,IAAA,GAAG,EAAEN,QAAQ,CAAC;AAAEM,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,EAOGI,YAAY,CAACF,GAAb,CAAkBG,KAAD,iBAChB;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBA,KAArB,CADD,CAPH,CAxCF,eAoDE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApDF,CADF;AAwDD,CA9DD;;AAgEA,eAAeZ,MAAf;AAEA,MAAMQ,UAAU,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,UAA7C,CAAnB;AACA,MAAMG,YAAY,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAArB","sourcesContent":["import React, { FormEvent } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst DDForm = () => {\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  };\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      {/* Purchase Received */}\n      <Form.Group>\n        <Form.Control\n          name=\"purchaseReceived\"\n          as=\"select\"\n          ref={register({ required: true })}\n        >\n          <option>Yes</option>\n          <option>No</option>\n        </Form.Control>\n      </Form.Group>\n\n      {/* Order # */}\n      <Form.Control\n        name=\"orderNumber\"\n        placeholder=\"Order #\"\n        ref={register({ required: true })}\n      ></Form.Control>\n\n      {/* Vendor */}\n      <Form.Control\n        name=\"vendor\"\n        as=\"select\"\n        defaultValue=\"Choose Vendor...\"\n        ref={register({ required: true })}\n      >\n        {/* Vendor list should be populated programatically */}\n        <option>Choose Vendor...</option>\n        {vendorList.map((vendor) => (\n          <option key={vendor}>{vendor}</option>\n        ))}\n      </Form.Control>\n\n      <Form.Control\n        name=\"skuNumber\"\n        placeholder=\"SKU #\"\n        ref={register({ required: true })}\n      ></Form.Control>\n\n      <Form.Control\n        name=\"damageLevel\"\n        as=\"select\"\n        defaultValue=\"Damage Level...\"\n        ref={register({ required: true })}\n      >\n        <option>Damage Level...</option>\n        {damageLevels.map((level) => (\n          <option key={level}>{level}</option>\n        ))}\n      </Form.Control>\n\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n};\n\nexport default DDForm;\n\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];\n"]},"metadata":{},"sourceType":"module"}