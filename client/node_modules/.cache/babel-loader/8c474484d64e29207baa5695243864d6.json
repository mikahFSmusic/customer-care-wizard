{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/dashboard/Dashboard.tsx\";\nimport React, { useState } from \"react\";\nimport { getAllDamagedDefects, sendEmail } from \"../../api\";\nimport { VendorChart } from \"./VendorChart\";\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [damageData, setDamageData] = useState();\n  const [vendorData, setVendorData] = useState();\n\n  const doFetch = async () => {\n    setLoading(true);\n    const data = await getAllDamagedDefects();\n    let jsonData = JSON.parse(JSON.stringify(data.data));\n    console.log(jsonData);\n    setDamageData(jsonData.damagedDefects);\n    setVendorData(getVendorData(jsonData.damagedDefects));\n    console.log(getVendorData(jsonData.damagedDefects));\n    setLoading(false);\n  };\n\n  const getVendorData = data => {\n    let vendorData = [];\n\n    for (let i = 0; i < data.length; i++) {\n      let ticket = JSON.parse(JSON.stringify(data[i]));\n      let vendor = ticket.vendor;\n\n      if (!vendor) {\n        continue;\n      }\n\n      let damageLevel = ticket.damageLevel;\n      let index = vendorData.findIndex(thisVendor => thisVendor.name === vendor);\n\n      if (index === -1) {\n        const thisVendorInfo = {\n          name: vendor,\n          levelOneCount: 0,\n          levelTwoCount: 0,\n          levelThreeCount: 0\n        };\n\n        switch (damageLevel) {\n          case \"Level 1\":\n            thisVendorInfo.levelOneCount += 1;\n            break;\n\n          case \"Level 2\":\n            thisVendorInfo.levelTwoCount += 1;\n            break;\n\n          case \"Level 3\":\n            thisVendorInfo.levelThreeCount += 1;\n            break;\n        }\n\n        vendorData.push(thisVendorInfo);\n      } else {\n        let thisVendorInfo = vendorData[index];\n\n        switch (damageLevel) {\n          case \"Level 1\":\n            thisVendorInfo.levelOneCount += 1;\n            break;\n\n          case \"Level 2\":\n            thisVendorInfo.levelTwoCount += 1;\n            break;\n\n          case \"Level 3\":\n            thisVendorInfo.levelThreeCount += 1;\n            break;\n        }\n      }\n    }\n\n    return vendorData;\n  };\n\n  const handleClick = () => {\n    doFetch();\n  };\n\n  const doSendEmail = async event => {\n    const email = await sendEmail();\n    let jsonData = JSON.parse(JSON.stringify(email.data));\n    console.log(jsonData);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: doSendEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \" Send Email! \"), /*#__PURE__*/React.createElement(VendorChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/dashboard/Dashboard.tsx"],"names":["React","useState","getAllDamagedDefects","sendEmail","VendorChart","Dashboard","loading","setLoading","damageData","setDamageData","vendorData","setVendorData","doFetch","data","jsonData","JSON","parse","stringify","console","log","damagedDefects","getVendorData","i","length","ticket","vendor","damageLevel","index","findIndex","thisVendor","name","thisVendorInfo","levelOneCount","levelTwoCount","levelThreeCount","push","handleClick","doSendEmail","event","email"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { getAllDamagedDefects, sendEmail } from \"../../api\";\nimport { VendorChart } from \"./VendorChart\";\n\ntype VendorInfo = {\n  name: string;\n  levelOneCount: number;\n  levelTwoCount: number;\n  levelThreeCount: number;\n};\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [damageData, setDamageData] = useState<Array<object>>();\n  const [vendorData, setVendorData] = useState<VendorInfo[]>();\n\n  const doFetch = async () => {\n    setLoading(true);\n    const data = await getAllDamagedDefects();\n    let jsonData = JSON.parse(JSON.stringify(data.data));\n    console.log(jsonData);\n    setDamageData(jsonData.damagedDefects);\n    setVendorData(getVendorData(jsonData.damagedDefects));\n    console.log(getVendorData(jsonData.damagedDefects));\n    setLoading(false);\n  };\n\n  const getVendorData = (data: Array<object>) => {\n    let vendorData: Array<VendorInfo> = [];\n    for (let i = 0; i < data.length; i++) {\n      let ticket = JSON.parse(JSON.stringify(data[i]));\n      let vendor = ticket.vendor;\n      if (!vendor) {\n        continue;\n      }\n      let damageLevel = ticket.damageLevel;\n\n      let index = vendorData.findIndex(\n        (thisVendor) => thisVendor.name === vendor\n      );\n      if (index === -1) {\n        const thisVendorInfo: VendorInfo = {\n          name: vendor,\n          levelOneCount: 0,\n          levelTwoCount: 0,\n          levelThreeCount: 0,\n        };\n        switch (damageLevel) {\n          case \"Level 1\":\n            thisVendorInfo.levelOneCount += 1;\n            break;\n          case \"Level 2\":\n            thisVendorInfo.levelTwoCount += 1;\n            break;\n          case \"Level 3\":\n            thisVendorInfo.levelThreeCount += 1;\n            break;\n        }\n        vendorData.push(thisVendorInfo);\n      } else {\n        let thisVendorInfo = vendorData[index];\n        switch (damageLevel) {\n          case \"Level 1\":\n            thisVendorInfo.levelOneCount += 1;\n            break;\n          case \"Level 2\":\n            thisVendorInfo.levelTwoCount += 1;\n            break;\n          case \"Level 3\":\n            thisVendorInfo.levelThreeCount += 1;\n            break;\n        }\n      }\n    }\n    return vendorData;\n  };\n  const handleClick = () => {\n    doFetch();\n  };\n\n  const doSendEmail = async (\n    event: React.MouseEvent<HTMLButtonElement, globalThis.MouseEvent>\n  ) => {\n    const email = await sendEmail();\n    let jsonData = JSON.parse(JSON.stringify(email.data));\n    console.log(jsonData);\n  };\n\n  return (\n    <>\n      {/* <button onClick={handleClick}>Get DD Forms</button>\n      <div>\n        {damageData?.map((ticket) => (\n          <h5 key={JSON.parse(JSON.stringify(ticket))._id}>\n            {JSON.parse(JSON.stringify(ticket)).vendor}\n          </h5>\n        ))}\n      </div> */}\n      <button onClick={doSendEmail}> Send Email! </button>\n      <VendorChart />\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}