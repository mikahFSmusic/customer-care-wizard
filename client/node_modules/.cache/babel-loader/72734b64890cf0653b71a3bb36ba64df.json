{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/CustomerInfo.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { MDBCol, MDBFormInline, MDBIcon } from \"mdbreact\";\nimport Fuse from \"fuse.js\";\nimport { CustomerCard } from \"./CustomerComponents/CustomerCard\"; // API Call to Kustomer for list of all customers\n\nconst kustomerAPIKey = process.env.REACT_APP_KUSTOMER_API_KEY;\nconst xhr = new XMLHttpRequest();\nxhr.responseType = \"json\";\nlet headers = new Headers({\n  'authorization': `Bearer ${kustomerAPIKey}`,\n  'content-type': 'application/json'\n});\nlet initObject = {\n  method: 'GET',\n  headers: headers\n};\nconst baseURL = \"https://api.kustomerapp.com\";\nconst proxyURL = \"https://cors-anywhere.herokuapp.com/\";\nconst currentPage = 1;\nconst pageSize = 1000;\n\nconst fetchCustomers = async () => {\n  try {\n    const response = await fetch(`${proxyURL}${baseURL}/v1/customers?page=${currentPage}&pageSize=${pageSize}`, initObject);\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nlet allCustomers = undefined;\nlet nextUrl = \"\";\nlet numPages = 0;\n\nconst getNumPages = async () => {\n  let proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  let requestAddition = \"/v1/customers?page=1&pageSize=1000\";\n  let requestUrl = \"https://api.kustomerapp.com\";\n};\n\nconst getCustomers = async page => {\n  let proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  let requestAddition = \"/v1/customers?page=1&pageSize=1000\";\n  let requestUrl = \"https://api.kustomerapp.com\";\n\n  try {\n    xhr.open(\"GET\", proxyUrl + requestUrl + requestAddition, true);\n    xhr.setRequestHeader(\"authorization\", `Bearer ${kustomerAPIKey}`);\n    xhr.setRequestHeader(\"content-type\", \"application/json\");\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        let status = xhr.status;\n\n        if (status === 0 || status >= 200 && status < 400) {\n          let response = xhr.response;\n          let resJSON = JSON.parse(JSON.stringify(response));\n          allCustomers = resJSON.data;\n          nextUrl = resJSON.links.next;\n          numPages = resJSON.meta.totalPages;\n          return resJSON.data;\n        }\n      }\n    };\n\n    xhr.send();\n  } catch (error) {\n    throw new Error(error);\n  }\n}; // Fuse fuzzy search\n\n\nconst searchCustomers = (customers, pattern) => {\n  const options = {\n    keys: [\"attributes.displayName\", \"attributes.name\"]\n  };\n  const fuse = new Fuse(customers, options);\n  return fuse.search(pattern);\n}; // COMPONENT\n\n\nexport const CustomerInfo = () => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [validCustomers, setValidCustomers] = useState();\n  const [loading, setLoading] = useState(true);\n  const [customers, setCustomers] = useState([]);\n  useEffect(() => {\n    // allCustomers = getCustomers(0);\n    // console.log(allCustomers)\n    // console.log(numPages)\n    // console.log(nextUrl)\n    setLoading(true);\n    fetchCustomers().then(data => setCustomers(data));\n    setLoading(false);\n  }, []);\n\n  const handleSearchChange = async event => {\n    event.preventDefault();\n    const el = event.target;\n    const value = el.value;\n    setSearchValue(value);\n\n    if (allCustomers !== undefined) {\n      console.log(\"customer data loaded\");\n      setValidCustomers(searchCustomers(allCustomers, value));\n    } else {\n      console.log(\"loading customer data\");\n    }\n  }; // Styles\n\n\n  const customerInfoStyle = {\n    borderRight: \"2px solid gray\",\n    margin: \"10px\",\n    height: \"95%\",\n    borderRadius: \"10px\",\n    padding: \"10px\"\n  };\n  const resultsStyles = {\n    height: \"90vh\",\n    overflow: \"scroll\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: customerInfoStyle,\n    className: \"z-depth-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Customer Info\"), /*#__PURE__*/React.createElement(MDBFormInline, {\n    className: \"md-form\",\n    style: {\n      display: \"flex\",\n      alignContent: \"center\"\n    },\n    onSubmit: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    icon: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: searchValue,\n    className: \"form-control form-control-lg ml-3 w-75\",\n    type: \"text\",\n    placeholder: \"Search\",\n    \"aria-label\": \"Search\",\n    onChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: resultsStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, allCustomers ? validCustomers === null || validCustomers === void 0 ? void 0 : validCustomers.map(customer => /*#__PURE__*/React.createElement(CustomerCard, {\n    key: customer.item.id,\n    customerData: customer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  })) : \"Loading customer information! Try searching again in a couple of seconds\")));\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/CustomerInfo.tsx"],"names":["React","useEffect","useState","MDBCol","MDBFormInline","MDBIcon","Fuse","CustomerCard","kustomerAPIKey","process","env","REACT_APP_KUSTOMER_API_KEY","xhr","XMLHttpRequest","responseType","headers","Headers","initObject","method","baseURL","proxyURL","currentPage","pageSize","fetchCustomers","response","fetch","data","json","console","log","error","allCustomers","undefined","nextUrl","numPages","getNumPages","proxyUrl","requestAddition","requestUrl","getCustomers","page","open","setRequestHeader","onreadystatechange","readyState","DONE","status","resJSON","JSON","parse","stringify","links","next","meta","totalPages","send","Error","searchCustomers","customers","pattern","options","keys","fuse","search","CustomerInfo","searchValue","setSearchValue","validCustomers","setValidCustomers","loading","setLoading","setCustomers","then","handleSearchChange","event","preventDefault","el","target","value","customerInfoStyle","borderRight","margin","height","borderRadius","padding","resultsStyles","overflow","display","alignContent","map","customer","item","id"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { MDBCol, MDBFormInline, MDBIcon } from \"mdbreact\";\nimport Fuse from \"fuse.js\";\nimport { CustomerCard } from \"./CustomerComponents/CustomerCard\";\n\n// API Call to Kustomer for list of all customers\nconst kustomerAPIKey = process.env.REACT_APP_KUSTOMER_API_KEY;\nconst xhr = new XMLHttpRequest();\nxhr.responseType = \"json\"\n\nlet headers = new Headers({\n  'authorization': `Bearer ${kustomerAPIKey}`,\n  'content-type': 'application/json'\n})\n\nlet initObject = {\n  method: 'GET', headers: headers\n}\n\nconst baseURL: string = \"https://api.kustomerapp.com\"\nconst proxyURL: string = \"https://cors-anywhere.herokuapp.com/\"\nconst currentPage: number = 1\nconst pageSize: number= 1000\n\nconst fetchCustomers = async () => {\n  try {\n    const response = await fetch(\n      `${proxyURL}${baseURL}/v1/customers?page=${currentPage}&pageSize=${pageSize}`,\n      initObject\n    )\n    const data = await response.json();\n    console.log(data)\n    return data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\nlet allCustomers: any = undefined;\nlet nextUrl: string = \"\"\nlet numPages: number = 0\n\nconst getNumPages = async () => {\n  let proxyUrl: string = \"https://cors-anywhere.herokuapp.com/\";\n  let requestAddition: string = \"/v1/customers?page=1&pageSize=1000\"\n  let requestUrl: string = \"https://api.kustomerapp.com\";\n\n}\n\nconst getCustomers = async (page: number) => {\n  let proxyUrl: string = \"https://cors-anywhere.herokuapp.com/\";\n  let requestAddition: string = \"/v1/customers?page=1&pageSize=1000\"\n  let requestUrl: string = \"https://api.kustomerapp.com\";\n\n  try {\n    xhr.open(\"GET\", proxyUrl + requestUrl + requestAddition, true);\n    xhr.setRequestHeader(\"authorization\", `Bearer ${kustomerAPIKey}`);\n    xhr.setRequestHeader(\"content-type\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        let status = xhr.status;\n        if (status === 0 || (status >= 200 && status < 400)) {\n          let response = xhr.response;\n          let resJSON = JSON.parse(JSON.stringify(response));\n          allCustomers = resJSON.data;\n          nextUrl = resJSON.links.next\n          numPages = resJSON.meta.totalPages\n          return resJSON.data\n        }\n      }\n    };\n    xhr.send();\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Fuse fuzzy search\nconst searchCustomers = (customers: any, pattern: string) => {\n  const options = {\n    keys: [\"attributes.displayName\", \"attributes.name\"],\n  };\n  const fuse = new Fuse(customers, options);\n  return fuse.search(pattern);\n};\n\n// COMPONENT\nexport const CustomerInfo = () => {\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [validCustomers, setValidCustomers] = useState<Array<Object>>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [customers, setCustomers] = useState([])\n  useEffect(() => {\n    // allCustomers = getCustomers(0);\n    // console.log(allCustomers)\n    // console.log(numPages)\n    // console.log(nextUrl)\n    setLoading(true)\n    fetchCustomers().then(data => setCustomers(data))\n    setLoading(false)\n  }, [])\n\n  const handleSearchChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    const el = event.target as HTMLInputElement;\n    const value = el.value;\n    setSearchValue(value);\n    if (allCustomers !== undefined) {\n      console.log(\"customer data loaded\");\n      setValidCustomers(searchCustomers(allCustomers, value));\n    } else {\n      console.log(\"loading customer data\");\n    }\n  };\n\n  // Styles\n  const customerInfoStyle = {\n    borderRight: \"2px solid gray\",\n    margin: \"10px\",\n    height: \"95%\",\n    borderRadius: \"10px\",\n    padding: \"10px\"\n  };\n\n  const resultsStyles = {\n    height: \"90vh\",\n    overflow: \"scroll\",\n  };\n\n  return (\n    <div style={customerInfoStyle} className=\"z-depth-1\">\n      <MDBCol md=\"12\">\n        <h2>Customer Info</h2>\n        <MDBFormInline\n          className=\"md-form\"\n          style={{ display: \"flex\", alignContent: \"center\" }}\n          onSubmit={handleSearchChange}\n        >\n          <MDBIcon icon=\"search\"></MDBIcon>\n          <input\n            value={searchValue}\n            className=\"form-control form-control-lg ml-3 w-75\"\n            type=\"text\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={handleSearchChange}\n          ></input>\n        </MDBFormInline>\n        <div style={resultsStyles}>\n          {allCustomers\n            ? validCustomers?.map((customer: any) => (\n                <CustomerCard key={customer.item.id} customerData={customer} />\n              ))\n            : \"Loading customer information! Try searching again in a couple of seconds\"}\n        </div>\n      </MDBCol>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}