{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/FormComponents/ImageUpload.tsx\";\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\"; // allows passing of url from parent element\n// (could implement a fetch to database for updating for contents)\n// TODO: implement reference/registering of field with react-hook-form\n\nexport const ImageUpload = props => {\n  const [imageData, setImageData] = useState([]);\n  const [url, setURL] = useState(\"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\"); // on file change\n\n  const handleFileChange = event => {\n    const el = event.target;\n    console.log(el);\n    const newURL = el.files ? el.files : url;\n    handleFileUpload(newURL);\n  };\n\n  const handleFileUpload = async files => {\n    const imageForm = new FormData(); // appends image data for submission to S3 bucket\n\n    for (let i = 0; i < files.length; i++) {\n      imageForm.append(\"images\", files[i]);\n    }\n\n    const url = `http://localhost:4000/upload-damage-image`;\n    const config = {\n      method: \"POST\",\n      body: imageForm\n    };\n\n    try {\n      const req = await fetch(url, config); // console.log(req);\n\n      if (req.ok) {\n        const res = await req.json(); // console.log(res);\n\n        if (res.success) {\n          setImageData(res.images);\n          imageData.forEach(image => {\n            var _props$imageURLs;\n\n            (_props$imageURLs = props.imageURLs) === null || _props$imageURLs === void 0 ? void 0 : _props$imageURLs.push(image[\"location\"]);\n          });\n          console.log(props.imageURLs);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.File, {\n    name: \"images\",\n    type: \"file\",\n    accept: \"image/png image/jpeg\",\n    onChange: handleFileChange,\n    value: props.imageURLs,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), imageData === null || imageData === void 0 ? void 0 : imageData.map(image => /*#__PURE__*/React.createElement(\"img\", {\n    width: \"80px\",\n    height: \"80px\",\n    src: `${image[\"location\"]}`,\n    alt: \"damage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/FormComponents/ImageUpload.tsx"],"names":["React","useState","Form","ImageUpload","props","imageData","setImageData","url","setURL","handleFileChange","event","el","target","console","log","newURL","files","handleFileUpload","imageForm","FormData","i","length","append","config","method","body","req","fetch","ok","res","json","success","images","forEach","image","imageURLs","push","error","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CAEA;AACA;AACA;;AAMA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AACtD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAC5B,yHAD4B,CAA9B,CAFsD,CAMtD;;AACA,QAAMQ,gBAAgB,GAAIC,KAAD,IAAgD;AACvE,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACA,UAAMI,MAAM,GAAGJ,EAAE,CAACK,KAAH,GAAWL,EAAE,CAACK,KAAd,GAAsBT,GAArC;AACAU,IAAAA,gBAAgB,CAACF,MAAD,CAAhB;AACD,GALD;;AAOA,QAAME,gBAAgB,GAAG,MAAOD,KAAP,IAAsB;AAC7C,UAAME,SAAS,GAAG,IAAIC,QAAJ,EAAlB,CAD6C,CAG7C;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCF,MAAAA,SAAS,CAACI,MAAV,CAAiB,QAAjB,EAA2BN,KAAK,CAACI,CAAD,CAAhC;AACD;;AAED,UAAMb,GAAG,GAAI,2CAAb;AAEA,UAAMgB,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAEP;AAFO,KAAf;;AAIA,QAAI;AACF,YAAMQ,GAAG,GAAG,MAAMC,KAAK,CAACpB,GAAD,EAAMgB,MAAN,CAAvB,CADE,CAEF;;AACA,UAAIG,GAAG,CAACE,EAAR,EAAY;AACV,cAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAlB,CADU,CAEV;;AACA,YAAID,GAAG,CAACE,OAAR,EAAiB;AACfzB,UAAAA,YAAY,CAACuB,GAAG,CAACG,MAAL,CAAZ;AACA3B,UAAAA,SAAS,CAAC4B,OAAV,CAAmBC,KAAD,IAAW;AAAA;;AAC3B,gCAAA9B,KAAK,CAAC+B,SAAN,sEAAiBC,IAAjB,CAAsBF,KAAK,CAAC,UAAD,CAA3B;AACD,WAFD;AAGArB,UAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAAC+B,SAAlB;AACD;AACF;AACF,KAdD,CAcE,OAAOE,KAAP,EAAc;AACdxB,MAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACD;AACF,GA/BD;;AAgCA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAC,sBAHT;AAIE,IAAA,QAAQ,EAAE5B,gBAJZ;AAKE,IAAA,KAAK,EAAEL,KAAK,CAAC+B,SALf;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWG9B,SAXH,aAWGA,SAXH,uBAWGA,SAAS,CAAEiC,GAAX,CAAgBJ,KAAD,iBACd;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,GAAG,EAAG,GAAEA,KAAK,CAAC,UAAD,CAAa,EAH5B;AAIE,IAAA,GAAG,EAAC,QAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAXH,CADF;AAsBD,CApEM","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\n// allows passing of url from parent element\n// (could implement a fetch to database for updating for contents)\n// TODO: implement reference/registering of field with react-hook-form\ninterface ImageUploadProps {\n  imageURLs?: Array<string>;\n  onChange: (event:any) => void\n}\n\nexport const ImageUpload = (props: ImageUploadProps) => {\n  const [imageData, setImageData] = useState([]);\n  const [url, setURL] = useState<string>(\n    \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\"\n  );\n\n  // on file change\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const el = event.target as HTMLInputElement;\n    console.log(el);\n    const newURL = el.files ? el.files : url;\n    handleFileUpload(newURL);\n  };\n\n  const handleFileUpload = async (files: any) => {\n    const imageForm = new FormData();\n\n    // appends image data for submission to S3 bucket\n    for (let i = 0; i < files.length; i++) {\n      imageForm.append(\"images\", files[i]);\n    }\n\n    const url = `http://localhost:4000/upload-damage-image`;\n\n    const config = {\n      method: \"POST\",\n      body: imageForm,\n    };\n    try {\n      const req = await fetch(url, config);\n      // console.log(req);\n      if (req.ok) {\n        const res = await req.json();\n        // console.log(res);\n        if (res.success) {\n          setImageData(res.images);\n          imageData.forEach((image) => {\n            props.imageURLs?.push(image[\"location\"])\n          })\n          console.log(props.imageURLs)\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div>\n      <Form.File\n        name=\"images\"\n        type=\"file\"\n        accept=\"image/png image/jpeg\"\n        onChange={handleFileChange}\n        value={props.imageURLs}\n        multiple\n      ></Form.File>\n      <br />\n      <br />\n      {imageData?.map((image) => (\n        <img\n          width=\"80px\"\n          height=\"80px\"\n          src={`${image[\"location\"]}`}\n          alt=\"damage\"\n        ></img>\n      ))}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}