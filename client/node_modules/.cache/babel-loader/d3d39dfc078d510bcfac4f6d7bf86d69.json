{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/Dashboard/Dashboard.tsx\";\nimport React, { useState } from \"react\";\nimport { getAllDamagedDefects } from \"../../API\";\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [damageData, setDamageData] = useState();\n\n  const doFetch = async () => {\n    setLoading(true);\n    const data = await getAllDamagedDefects();\n    let jsonData = JSON.parse(JSON.stringify(data.data));\n    console.log(jsonData);\n    setDamageData(jsonData.damagedDefects);\n    setLoading(false);\n  };\n\n  const setVendorData = data => {\n    let vendorData = [];\n\n    for (let i = 0; i < data.length; i++) {\n      let ticket = JSON.parse(JSON.stringify(data[i]));\n      let vendor = ticket.vendor;\n      let damageLevel = ticket.damageLevel;\n      vendorData.findIndex(thisVendor => thisVendor.name == vendor);\n    }\n  };\n\n  const handleClick = () => {\n    doFetch();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Get DD Forms\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, damageData === null || damageData === void 0 ? void 0 : damageData.map(ticket => /*#__PURE__*/React.createElement(\"h5\", {\n    key: JSON.parse(JSON.stringify(ticket))._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, JSON.parse(JSON.stringify(ticket)).vendor))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/Dashboard/Dashboard.tsx"],"names":["React","useState","getAllDamagedDefects","Dashboard","loading","setLoading","damageData","setDamageData","doFetch","data","jsonData","JSON","parse","stringify","console","log","damagedDefects","setVendorData","vendorData","i","length","ticket","vendor","damageLevel","findIndex","thisVendor","name","handleClick","map","_id"],"mappings":";AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,WAArC;;AAYA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,EAA5C;;AAEA,QAAMO,OAAO,GAAG,YAAY;AAC1BH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMI,IAAI,GAAG,MAAMP,oBAAoB,EAAvC;AACA,QAAIQ,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAI,CAACA,IAApB,CAAX,CAAf;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAH,IAAAA,aAAa,CAACG,QAAQ,CAACM,cAAV,CAAb;AACAX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPD;;AASA,QAAMY,aAAa,GAAIR,IAAD,IAAyB;AAC7C,QAAIS,UAA4B,GAAG,EAAnC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,IAAI,CAACW,MAAzB,EAAiCD,CAAC,EAAlC,EAAuC;AACnC,UAAIE,MAAM,GAAIV,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAI,CAACU,CAAD,CAAnB,CAAX,CAAd;AACA,UAAIG,MAAM,GAAGD,MAAM,CAACC,MAApB;AACA,UAAIC,WAAW,GAAGF,MAAM,CAACE,WAAzB;AAEAL,MAAAA,UAAU,CAACM,SAAX,CAAqBC,UAAU,IAAIA,UAAU,CAACC,IAAX,IAAmBJ,MAAtD;AAIH;AACF,GAZD;;AAaA,QAAMK,WAAW,GAAG,MAAM;AACxBnB,IAAAA,OAAO;AACR,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEmB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,UADH,aACGA,UADH,uBACGA,UAAU,CAAEsB,GAAZ,CAAiBP,MAAD,iBACb;AAAI,IAAA,GAAG,EAAEV,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeQ,MAAf,CAAX,EAAmCQ,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeQ,MAAf,CAAX,EAAmCC,MADxC,CADH,CADH,CAFF,CADF;AAaD,CA3CD;;AA6CA,eAAenB,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllDamagedDefects } from \"../../API\";\nimport * as d3 from \"d3\";\nimport { ConnectionStates } from \"mongoose\";\n\n\ntype VendorInfo = {\n    name: string,\n    levelOneCount: number,\n    levelTwoCount: number,\n    levelThreeCount: number\n}\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [damageData, setDamageData] = useState<Array<object>>();\n\n  const doFetch = async () => {\n    setLoading(true);\n    const data = await getAllDamagedDefects();\n    let jsonData = JSON.parse(JSON.stringify(data.data));\n    console.log(jsonData);\n    setDamageData(jsonData.damagedDefects);\n    setLoading(false);\n  };\n\n  const setVendorData = (data: Array<object>) => {\n    let vendorData:Array<VendorInfo> = []\n    for (let i = 0; i < data.length; i++ ) {\n        let ticket  = JSON.parse(JSON.stringify(data[i]))\n        let vendor = ticket.vendor\n        let damageLevel = ticket.damageLevel\n\n        vendorData.findIndex(thisVendor => thisVendor.name == vendor)\n\n\n\n    }\n  }\n  const handleClick = () => {\n    doFetch();\n  };\n\n  return (\n    <div>\n      <button onClick={handleClick}>Get DD Forms</button>\n      <div>\n        {damageData?.map((ticket) => (\n            <h5 key={JSON.parse(JSON.stringify(ticket))._id}>\n                {JSON.parse(JSON.stringify(ticket)).vendor}\n            </h5>\n\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}