{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/reportForm/ReportFormContext.tsx\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { useCustomer } from \"../customer/CustomerContext\";\nexport const DEFAULT_FORM_CONTEXT_VALUE = {\n  customer: null,\n  orders: null,\n  addOrder: () => {\n    return;\n  },\n  removeOrder: () => {\n    return;\n  }\n};\nexport const ReportFormContext = createContext(DEFAULT_FORM_CONTEXT_VALUE);\nexport const ReportFormProvider = props => {\n  const {\n    customer\n  } = useCustomer();\n  const [selectedOrders, setSelectedOrders] = useState();\n\n  const addOrder = async order => {\n    if (order) {\n      console.log(\"adding order\");\n      setSelectedOrders(selectedOrders => selectedOrders === null || selectedOrders === void 0 ? void 0 : selectedOrders.concat({\n        orderNumber: order.attributes.data.orderNumber,\n        order\n      }));\n    }\n  };\n\n  const removeOrder = async order => {\n    if (order && selectedOrders) {\n      selectedOrders.forEach((selectedOrder, index) => {\n        if (selectedOrder.orderNumber === order.attributes.data.orderNumber) {\n          selectedOrders.splice(index);\n          setSelectedOrders(selectedOrders);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ReportFormContext.Provider, {\n    value: {\n      customer,\n      orders: selectedOrders,\n      addOrder,\n      removeOrder\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport function useForm() {\n  return useContext(ReportFormContext);\n}","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/reportForm/ReportFormContext.tsx"],"names":["React","createContext","useContext","useState","useCustomer","DEFAULT_FORM_CONTEXT_VALUE","customer","orders","addOrder","removeOrder","ReportFormContext","ReportFormProvider","props","selectedOrders","setSelectedOrders","order","console","log","concat","orderNumber","attributes","data","forEach","selectedOrder","index","splice","children","useForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAaA,OAAO,MAAMC,0BAAmD,GAAG;AACjEC,EAAAA,QAAQ,EAAE,IADuD;AAEjEC,EAAAA,MAAM,EAAE,IAFyD;AAGjEC,EAAAA,QAAQ,EAAE,MAAM;AACd;AACD,GALgE;AAMjEC,EAAAA,WAAW,EAAE,MAAM;AACjB;AACD;AARgE,CAA5D;AAWP,OAAO,MAAMC,iBAAiB,GAAGT,aAAa,CAC5CI,0BAD4C,CAAvC;AAIP,OAAO,MAAMM,kBAA6D,GACxEC,KAD2E,IAExE;AACH,QAAM;AAAEN,IAAAA;AAAF,MAAeF,WAAW,EAAhC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,EAApD;;AAEA,QAAMK,QAAQ,GAAG,MAAOO,KAAP,IAAyB;AACxC,QAAIA,KAAJ,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAH,MAAAA,iBAAiB,CAAED,cAAD,IAChBA,cADgB,aAChBA,cADgB,uBAChBA,cAAc,CAAEK,MAAhB,CAAuB;AACrBC,QAAAA,WAAW,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,IAAjB,CAAsBF,WADd;AAErBJ,QAAAA;AAFqB,OAAvB,CADe,CAAjB;AAMD;AACF,GAVD;;AAYA,QAAMN,WAAW,GAAG,MAAOM,KAAP,IAAyB;AAC3C,QAAIA,KAAK,IAAIF,cAAb,EAA6B;AAC3BA,MAAAA,cAAc,CAACS,OAAf,CAAuB,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;AAC/C,YAAID,aAAa,CAACJ,WAAd,KAA8BJ,KAAK,CAACK,UAAN,CAAiBC,IAAjB,CAAsBF,WAAxD,EAAqE;AACnEN,UAAAA,cAAc,CAACY,MAAf,CAAsBD,KAAtB;AACAV,UAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD;AACF,OALD;AAMD;AACF,GATD;;AAWA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AAAEP,MAAAA,QAAF;AAAYC,MAAAA,MAAM,EAAEM,cAApB;AAAoCL,MAAAA,QAApC;AAA8CC,MAAAA;AAA9C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGG,KAAK,CAACc,QAHT,CADF;AAOD,CApCM;AAsCP,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOzB,UAAU,CAACQ,iBAAD,CAAjB;AACD","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\nimport { useCustomer } from \"../customer/CustomerContext\";\n\ninterface IReportFormContextValue {\n  customer: ICustomerData | null;\n  orders: ISelectedOrder[] | null | undefined;\n  addOrder: (order: IOrder) => void;\n  removeOrder: (order: IOrder) => void;\n}\n\ninterface IReportFormContextProviderProps {\n  children: React.ReactNode;\n}\n\nexport const DEFAULT_FORM_CONTEXT_VALUE: IReportFormContextValue = {\n  customer: null,\n  orders: null,\n  addOrder: () => {\n    return;\n  },\n  removeOrder: () => {\n    return;\n  },\n};\n\nexport const ReportFormContext = createContext<IReportFormContextValue>(\n  DEFAULT_FORM_CONTEXT_VALUE\n);\n\nexport const ReportFormProvider: React.FC<IReportFormContextProviderProps> = (\n  props\n) => {\n  const { customer } = useCustomer();\n  const [selectedOrders, setSelectedOrders] = useState<ISelectedOrder[]>();\n\n  const addOrder = async (order: IOrder) => {\n    if (order) {\n      console.log(\"adding order\");\n      setSelectedOrders((selectedOrders) =>\n        selectedOrders?.concat({\n          orderNumber: order.attributes.data.orderNumber,\n          order,\n        })\n      );\n    }\n  };\n\n  const removeOrder = async (order: IOrder) => {\n    if (order && selectedOrders) {\n      selectedOrders.forEach((selectedOrder, index) => {\n        if (selectedOrder.orderNumber === order.attributes.data.orderNumber) {\n          selectedOrders.splice(index);\n          setSelectedOrders(selectedOrders);\n        }\n      });\n    }\n  };\n\n  return (\n    <ReportFormContext.Provider\n      value={{ customer, orders: selectedOrders, addOrder, removeOrder }}\n    >\n      {props.children}\n    </ReportFormContext.Provider>\n  );\n};\n\nexport function useForm() {\n  return useContext(ReportFormContext);\n}\n"]},"metadata":{},"sourceType":"module"}