{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx\";\nimport React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useForm } from \"react-hook-form\";\n\nconst DDForm = () => {\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"No\")), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Order #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    defaultValue: \"Choose Vendor...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Choose Vendor...\"), vendorList.map(vendor => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, vendor))), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"SKU #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    name: \"damageLevelRadios\",\n    type: \"radio\",\n    label: \"Level 1\",\n    id: \"lvl1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    name: \"damageLevelRadios\",\n    type: \"radio\",\n    label: \"Level 2\",\n    id: \"lvl2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    name: \"damageLevelRadios\",\n    type: \"radio\",\n    label: \"level 3\",\n    id: \"lvl3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Submit\"));\n};\n\nexport default DDForm;\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx"],"names":["React","Form","Button","useForm","DDForm","register","handleSubmit","onSubmit","values","console","log","required","vendorList","map","vendor"],"mappings":"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","sourcesContent":["import React, { FormEvent } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst DDForm  = () => {\n    const { register, handleSubmit } = useForm();\n\n    const onSubmit = (values: any) => {\n        console.log(values);\n    }\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n            {/* Purchase Received */}\n            <Form.Control as=\"select\" ref={register({ required: true })}>\n                <option>Yes</option>\n                <option>No</option>\n            </Form.Control>\n\n            {/* Order # */}\n            <Form.Control placeholder=\"Order #\" ref={register({required: true})}></Form.Control>\n\n            {/* Vendor */}\n            <Form.Control as=\"select\" defaultValue=\"Choose Vendor...\" ref={register({required: true})}>\n                {/* Vendor list should be populated programatically */}\n                <option>Choose Vendor...</option>\n                {vendorList.map((vendor) => (\n                    <option>{vendor}</option>\n                ))}\n            </Form.Control>\n\n            <Form.Control placeholder=\"SKU #\" ref={register({required: true})}></Form.Control>\n            <Form.Group ref={register}>\n            <Form.Check name=\"damageLevelRadios\" type=\"radio\" label=\"Level 1\" id=\"lvl1\"></Form.Check>\n            <Form.Check name=\"damageLevelRadios\" type=\"radio\" label=\"Level 2\" id=\"lvl2\"></Form.Check>\n            <Form.Check name=\"damageLevelRadios\" type=\"radio\" label=\"level 3\" id=\"lvl3\"></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\">Submit</Button>\n        </Form>\n    )\n}\n\nexport default DDForm;\n\nconst vendorList = [\n    \"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"\n]"]},"metadata":{},"sourceType":"module"}