{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/FormComponents/ImageUpload.tsx\";\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\"; // allows passing of url from parent element\n// (could implement a fetch to database for updating for contents)\n// TODO: implement reference/registering of field with react-hook-form\n\nexport const ImageUpload = props => {\n  const [imageData, setImageData] = useState();\n  const [url, setURL] = useState(\"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\");\n  const placeholder = \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\";\n\n  if (props.imageURL && url !== placeholder) {\n    setURL(props.imageURL);\n  }\n\n  const handleFileChange = event => {\n    const el = event.target;\n    console.log(el);\n    const newURL = el.files ? el.files[0] : url;\n    handleFileUpload(newURL);\n  };\n\n  const handleFileUpload = async file => {\n    const imageData = new FormData();\n    console.log(file);\n    imageData.append(\"image\", file);\n    console.log(imageData);\n    const url = `http://localhost:4000/upload-damage-image`;\n    const config = {\n      method: \"POST\",\n      body: imageData\n    };\n\n    try {\n      const req = await fetch(url, config);\n      console.log(req);\n\n      if (req.ok) {\n        const res = await req.json();\n        console.log(res);\n\n        if (res.success) {\n          setImageData(res.image);\n          setURL(res.image.location);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"80px\",\n    height: \"80px\",\n    src: `${url}`,\n    alt: \"damage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.File, {\n    name: \"image\",\n    type: \"file\",\n    accept: \"image/png image/jpeg\",\n    onChange: handleFileChange,\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.File.Label, {\n    \"data-browse\": \"Browse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/FormComponents/ImageUpload.tsx"],"names":["React","useState","Form","ImageUpload","props","imageData","setImageData","url","setURL","placeholder","imageURL","handleFileChange","event","el","target","console","log","newURL","files","handleFileUpload","file","FormData","append","config","method","body","req","fetch","ok","res","json","success","image","location","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CAEA;AACA;AACA;;AAKA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AACtD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,EAA1C;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAC5B,yHAD4B,CAA9B;AAIA,QAAMQ,WAAW,GACf,yHADF;;AAGA,MAAIL,KAAK,CAACM,QAAN,IAAkBH,GAAG,KAAKE,WAA9B,EAA2C;AACzCD,IAAAA,MAAM,CAACJ,KAAK,CAACM,QAAP,CAAN;AACD;;AAED,QAAMC,gBAAgB,GAAIC,KAAD,IAAgD;AACvE,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACA,UAAMI,MAAM,GAAGJ,EAAE,CAACK,KAAH,GAAWL,EAAE,CAACK,KAAH,CAAS,CAAT,CAAX,GAAyBX,GAAxC;AACAY,IAAAA,gBAAgB,CAACF,MAAD,CAAhB;AACD,GALD;;AAOA,QAAME,gBAAgB,GAAG,MAAOC,IAAP,IAAqB;AAC5C,UAAMf,SAAS,GAAG,IAAIgB,QAAJ,EAAlB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAf,IAAAA,SAAS,CAACiB,MAAV,CAAiB,OAAjB,EAA0BF,IAA1B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AAEA,UAAME,GAAG,GAAI,2CAAb;AAEA,UAAMgB,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAEpB;AAFO,KAAf;;AAIA,QAAI;AACF,YAAMqB,GAAG,GAAG,MAAMC,KAAK,CAACpB,GAAD,EAAMgB,MAAN,CAAvB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;;AACA,UAAIA,GAAG,CAACE,EAAR,EAAY;AACV,cAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAlB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;;AACA,YAAIA,GAAG,CAACE,OAAR,EAAiB;AACfzB,UAAAA,YAAY,CAACuB,GAAG,CAACG,KAAL,CAAZ;AACAxB,UAAAA,MAAM,CAACqB,GAAG,CAACG,KAAJ,CAAUC,QAAX,CAAN;AACD;AACF;AACF,KAXD,CAWE,OAAOC,KAAP,EAAc;AACdnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACD;AACF,GA1BD;;AA2BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,MAAM,EAAC,MAAzB;AAAgC,IAAA,GAAG,EAAG,GAAE3B,GAAI,EAA5C;AAA+C,IAAA,GAAG,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAC,sBAHT;AAIE,IAAA,QAAQ,EAAEI,gBAJZ;AAKE,IAAA,MAAM,MALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD,CAAM,IAAN,CAAW,KAAX;AAAiB,mBAAY,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,CADF;AAcD,CA7DM","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\n// allows passing of url from parent element\n// (could implement a fetch to database for updating for contents)\n// TODO: implement reference/registering of field with react-hook-form\ninterface ImageUploadProps {\n  imageURL?: string;\n}\n\nexport const ImageUpload = (props: ImageUploadProps) => {\n  const [imageData, setImageData] = useState();\n  const [url, setURL] = useState<string>(\n    \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\"\n  );\n\n  const placeholder =\n    \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\";\n\n  if (props.imageURL && url !== placeholder) {\n    setURL(props.imageURL);\n  }\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const el = event.target as HTMLInputElement;\n    console.log(el);\n    const newURL = el.files ? el.files[0] : url;\n    handleFileUpload(newURL);\n  };\n\n  const handleFileUpload = async (file: any) => {\n    const imageData = new FormData();\n    console.log(file);\n    imageData.append(\"image\", file);\n    console.log(imageData);\n\n    const url = `http://localhost:4000/upload-damage-image`;\n\n    const config = {\n      method: \"POST\",\n      body: imageData,\n    };\n    try {\n      const req = await fetch(url, config);\n      console.log(req);\n      if (req.ok) {\n        const res = await req.json();\n        console.log(res);\n        if (res.success) {\n          setImageData(res.image);\n          setURL(res.image.location);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div>\n      <img width=\"80px\" height=\"80px\" src={`${url}`} alt=\"damage\"></img>\n      <Form.File\n        name=\"image\"\n        type=\"file\"\n        accept=\"image/png image/jpeg\"\n        onChange={handleFileChange}\n        custom\n      >\n        <Form.File.Label data-browse=\"Browse\"></Form.File.Label>\n      </Form.File>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}