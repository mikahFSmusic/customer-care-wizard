{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/customer/Customer.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCustomer } from \"./CustomerContext\";\nexport const Customer = props => {\n  const {\n    customer\n  } = useCustomer();\n  const [customerId, setCustomerId] = useState(\"\");\n  const [phones, setPhones] = useState();\n  const [email, setEmail] = useState();\n  useEffect(() => {\n    if (customer) {\n      setCustomerId(customer.data.id);\n      setPhones(customer.data.attributes.phones);\n\n      if (customer.data.attributes.emails) {\n        setEmail(customer.data.attributes.emails[0].email);\n      }\n    }\n  }, [customer]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, customer && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderRadius: 5,\n      color: \"black\",\n      borderColor: \"black\",\n      paddingLeft: 15,\n      paddingTop: 5,\n      paddingBottom: 5\n    },\n    className: \"z-depth-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"ID: \", customerId), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Phone(s): \", phones === null || phones === void 0 ? void 0 : phones.map(phone => phone.phone + \", \")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Email: \", email)));\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/customer/Customer.tsx"],"names":["React","useEffect","useState","useCustomer","Customer","props","customer","customerId","setCustomerId","phones","setPhones","email","setEmail","data","id","attributes","emails","borderRadius","color","borderColor","paddingLeft","paddingTop","paddingBottom","map","phone"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,mBAA5B;AASA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAA2B;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAeH,WAAW,EAAhC;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAS,EAAT,CAA5C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,EAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,QAAJ,EAAc;AACZE,MAAAA,aAAa,CAACF,QAAQ,CAACO,IAAT,CAAcC,EAAf,CAAb;AACAJ,MAAAA,SAAS,CAACJ,QAAQ,CAACO,IAAT,CAAcE,UAAd,CAAyBN,MAA1B,CAAT;;AACA,UAAIH,QAAQ,CAACO,IAAT,CAAcE,UAAd,CAAyBC,MAA7B,EAAqC;AACnCJ,QAAAA,QAAQ,CAACN,QAAQ,CAACO,IAAT,CAAcE,UAAd,CAAyBC,MAAzB,CAAgC,CAAhC,EAAmCL,KAApC,CAAR;AACD;AACF;AACF,GARQ,EAQN,CAACL,QAAD,CARM,CAAT;AASA,sBACE,0CACGA,QAAQ,iBACP;AACE,IAAA,KAAK,EAAE;AACLW,MAAAA,YAAY,EAAE,CADT;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,WAAW,EAAE,OAHR;AAILC,MAAAA,WAAW,EAAE,EAJR;AAKLC,MAAAA,UAAU,EAAE,CALP;AAMLC,MAAAA,aAAa,EAAE;AANV,KADT;AASE,IAAA,SAAS,EAAC,WATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQf,UAAR,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcE,MAAd,aAAcA,MAAd,uBAAcA,MAAM,CAAEc,GAAR,CAAaC,KAAD,IAAWA,KAAK,CAACA,KAAN,GAAc,IAArC,CAAd,CAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWb,KAAX,CAbF,CAFJ,CADF;AAqBD,CApCM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useCustomer } from \"./CustomerContext\";\n\ninterface ICustomerProps {\n  customerData?: ICustomerData;\n  onClick?: (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    customerData: ICustomerData\n  ) => void;\n}\nexport const Customer = (props: ICustomerProps) => {\n  const { customer } = useCustomer();\n  const [customerId, setCustomerId] = useState<string>(\"\");\n  const [phones, setPhones] = useState<PhonesEntity[] | null | undefined>();\n  const [email, setEmail] = useState<string>();\n\n  useEffect(() => {\n    if (customer) {\n      setCustomerId(customer.data.id);\n      setPhones(customer.data.attributes.phones);\n      if (customer.data.attributes.emails) {\n        setEmail(customer.data.attributes.emails[0].email);\n      }\n    }\n  }, [customer]);\n  return (\n    <>\n      {customer && (\n        <div\n          style={{\n            borderRadius: 5,\n            color: \"black\",\n            borderColor: \"black\",\n            paddingLeft: 15,\n            paddingTop: 5,\n            paddingBottom: 5,\n          }}\n          className=\"z-depth-1\"\n        >\n          <p>ID: {customerId}</p>\n          <p>Phone(s): {phones?.map((phone) => phone.phone + \", \")}</p>\n          <p>Email: {email}</p>\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}