{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/CustomerExplore.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { MDBCol, MDBFormInline, MDBIcon } from \"mdbreact\";\nimport { CustomerInfo } from './CustomerComponents/CustomerInfo';\nimport { CustomerSearchResults } from \"./CustomerComponents/CustomerSearchResults\"; // API Call to Kustomer for list of all customers\n\nconst kustomerAPIKey = process.env.REACT_APP_KUSTOMER_API_KEY;\nconst baseURL = \"https://api.kustomerapp.com/v1/customers/search\";\nconst proxyURL = \"https://cors-anywhere.herokuapp.com/\";\n\nconst fetchCustomers = async name => {\n  let headers = new Headers({\n    Authorization: `Bearer ${kustomerAPIKey}`,\n    \"Content-Type\": \"application/json\"\n  });\n  let raw = JSON.stringify({\n    and: [{\n      customer_name: {\n        contains: name\n      }\n    }],\n    sort: [{\n      customer_updated_at: \"asc\"\n    }],\n    queryContext: \"customer\",\n    or: []\n  });\n  let initObject = {\n    method: \"POST\",\n    headers: headers,\n    body: raw\n  };\n\n  try {\n    const response = await fetch(`${proxyURL}${baseURL}`, initObject);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}; // COMPONENT\n\n\nexport const CustomerExplore = () => {\n  // State Hooks\n  const [loading, setLoading] = useState(true);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [customers, setCustomers] = useState();\n  const [showResults, setShowResults] = useState(true);\n  const [showCustomer, setShowCustomer] = useState(false);\n  const [customerData, setCustomerData] = useState(); // Effect Hooks\n\n  useEffect(() => {\n    setShowCustomer(false);\n    setShowResults(true);\n\n    const doFetch = async searchValue => {\n      setLoading(true);\n      const data = await fetchCustomers(searchValue);\n      setCustomers(data.data);\n      setLoading(false);\n    };\n\n    doFetch(searchValue);\n  }, [searchValue]);\n\n  const handleSearchChange = event => {\n    event.preventDefault();\n    const el = event.target;\n    const value = el.value;\n\n    if (value.length > 2) {\n      setSearchValue(value);\n    }\n  };\n\n  const handleCustomerClick = (event, customerData) => {\n    console.log(customerData);\n    setCustomerData(customerData);\n    setShowResults(false);\n    setShowCustomer(true);\n  };\n\n  const renderSwitch = () => {\n    {\n      /* TODO: Add spinner here instead of loading text */\n    }\n\n    if (loading) {\n      return \"loading...\";\n    }\n\n    if (!loading && showResults) {\n      return /*#__PURE__*/React.createElement(CustomerSearchResults, {\n        customers: customers,\n        onClick: handleCustomerClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 14\n        }\n      });\n    } else if (!loading && !showResults && showCustomer) {\n      return /*#__PURE__*/React.createElement(CustomerInfo, {\n        customerData: customerData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }\n      });\n    }\n  }; // Styles\n\n\n  const customerInfoStyle = {\n    margin: \"10px\",\n    height: \"95%\",\n    borderRadius: \"10px\",\n    padding: \"10px\",\n    overflow: \"scroll\"\n  };\n  const resultsStyles = {\n    overflow: \"scroll\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: customerInfoStyle,\n    className: \"z-depth-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MDBFormInline, {\n    className: \"md-form\",\n    style: {\n      display: \"flex\",\n      alignContent: \"center\"\n    },\n    onSubmit: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    icon: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control form-control-lg ml-3 w-75\",\n    type: \"text\",\n    placeholder: \"Customer Search\",\n    \"aria-label\": \"Customer Search\",\n    onChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: resultsStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, renderSwitch()))));\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/CustomerExplore.tsx"],"names":["React","useEffect","useState","MDBCol","MDBFormInline","MDBIcon","CustomerInfo","CustomerSearchResults","kustomerAPIKey","process","env","REACT_APP_KUSTOMER_API_KEY","baseURL","proxyURL","fetchCustomers","name","headers","Headers","Authorization","raw","JSON","stringify","and","customer_name","contains","sort","customer_updated_at","queryContext","or","initObject","method","body","response","fetch","data","json","error","console","log","CustomerExplore","loading","setLoading","searchValue","setSearchValue","customers","setCustomers","showResults","setShowResults","showCustomer","setShowCustomer","customerData","setCustomerData","doFetch","handleSearchChange","event","preventDefault","el","target","value","length","handleCustomerClick","renderSwitch","customerInfoStyle","margin","height","borderRadius","padding","overflow","resultsStyles","display","alignContent"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { MDBCol, MDBFormInline, MDBIcon } from \"mdbreact\";\nimport { CustomerInfo } from './CustomerComponents/CustomerInfo';\nimport { CustomerSearchResults } from \"./CustomerComponents/CustomerSearchResults\";\n\n// API Call to Kustomer for list of all customers\nconst kustomerAPIKey = process.env.REACT_APP_KUSTOMER_API_KEY;\n\nconst baseURL: string = \"https://api.kustomerapp.com/v1/customers/search\";\nconst proxyURL: string = \"https://cors-anywhere.herokuapp.com/\";\n\nconst fetchCustomers = async (name: string) => {\n  let headers = new Headers({\n    Authorization: `Bearer ${kustomerAPIKey}`,\n    \"Content-Type\": \"application/json\",\n  });\n\n  let raw = JSON.stringify({\n    and: [{ customer_name: { contains: name } }],\n    sort: [{ customer_updated_at: \"asc\" }],\n    queryContext: \"customer\",\n    or: [],\n  });\n\n  let initObject = {\n    method: \"POST\",\n    headers: headers,\n    body: raw,\n  };\n\n  try {\n    const response = await fetch(`${proxyURL}${baseURL}`, initObject);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// COMPONENT\nexport const CustomerExplore = () => {\n  // State Hooks\n  const [loading, setLoading] = useState<boolean>(true);\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [customers, setCustomers] = useState<Array<Object>>();\n  const [showResults, setShowResults] = useState<boolean>(true);\n  const [showCustomer, setShowCustomer] = useState<boolean>(false);\n  const [customerData, setCustomerData] = useState()\n\n  // Effect Hooks\n  useEffect(() => {\n    setShowCustomer(false)\n    setShowResults(true)\n    const doFetch = async (searchValue: string) => {\n      setLoading(true);\n      const data = await fetchCustomers(searchValue);\n      setCustomers(data.data);\n      setLoading(false);\n    };\n    doFetch(searchValue);\n  }, [searchValue]);\n\n  const handleSearchChange = (event: ChangeEvent<HTMLInputElement>) => {\n\n    event.preventDefault();\n    const el = event.target as HTMLInputElement;\n    const value = el.value;\n    if (value.length > 2) {\n      setSearchValue(value);\n    }\n  };\n\n  const handleCustomerClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    customerData: any\n  ) => {\n    console.log(customerData);\n    setCustomerData(customerData);\n    setShowResults(false);\n    setShowCustomer(true);\n  };\n\n  const renderSwitch = () => {\n    {/* TODO: Add spinner here instead of loading text */}\n    if (loading) {\n      return \"loading...\"\n    }\n    if (!loading && showResults) {\n      return <CustomerSearchResults customers={customers} onClick={handleCustomerClick} />\n    } else if (!loading && !showResults && showCustomer) {\n      return <CustomerInfo customerData={customerData}/>\n    }\n  }\n\n  // Styles\n  const customerInfoStyle = {\n    margin: \"10px\",\n    height: \"95%\",\n    borderRadius: \"10px\",\n    padding: \"10px\",\n    overflow: \"scroll\",\n  };\n\n  const resultsStyles = {\n    overflow: \"scroll\",\n  };\n\n  return (\n    <div style={customerInfoStyle} className=\"z-depth-1\">\n      <MDBCol md=\"12\">\n        <MDBFormInline\n          className=\"md-form\"\n          style={{ display: \"flex\", alignContent: \"center\" }}\n          onSubmit={handleSearchChange}\n        >\n          <MDBIcon icon=\"search\"></MDBIcon>\n          <input\n            className=\"form-control form-control-lg ml-3 w-75\"\n            type=\"text\"\n            placeholder=\"Customer Search\"\n            aria-label=\"Customer Search\"\n            onChange={handleSearchChange}\n          ></input>\n        </MDBFormInline>\n\n        <div>\n            <div style={resultsStyles}>\n              {renderSwitch()}\n            </div>\n        </div>\n\n      </MDBCol>\n    </div>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}