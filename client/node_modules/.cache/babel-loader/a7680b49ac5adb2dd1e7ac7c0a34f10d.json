{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/customer/CustomerSearch.tsx\";\nimport { MDBBtn, MDBIcon, MDBInputGroup } from \"mdbreact\";\nimport React, { useState } from \"react\";\nimport { getCustomerByEmail } from \"../../kustomer.api\";\nexport const CustomerSearch = () => {\n  const [email, setEmail] = useState();\n  const [disabled, setDisabled] = useState();\n\n  const isValidEmail = value => {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value)) return true;\n    return false;\n  };\n\n  const handleChange = e => {\n    const el = e.target;\n    const value = el.value;\n\n    if (isValidEmail(value)) {\n      setEmail(value);\n      setDisabled(false);\n      return;\n    }\n\n    setDisabled(true);\n  };\n\n  const handleSubmit = async (e) => {\n    if (email) {\n      try {\n        const res = await getCustomerByEmail(email);\n        console.log(res);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MDBInputGroup, {\n    style: {\n      display: \"flex\",\n      alignContent: \"center\"\n    },\n    onChange: handleChange,\n    type: \"email\",\n    hint: \"Search Customer Email\",\n    append: /*#__PURE__*/React.createElement(MDBBtn, {\n      type: \"submit\",\n      style: {\n        padding: 0,\n        margin: 0,\n        width: 50\n      },\n      color: \"blue\",\n      onClick: handleSubmit,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"fas fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/customer/CustomerSearch.tsx"],"names":["MDBBtn","MDBIcon","MDBInputGroup","React","useState","getCustomerByEmail","CustomerSearch","email","setEmail","disabled","setDisabled","isValidEmail","value","test","handleChange","e","el","target","handleSubmit","res","console","log","error","display","alignContent","padding","margin","width"],"mappings":";AAAA,SAASA,MAAT,EAA+BC,OAA/B,EAAwCC,aAAxC,QAA6D,UAA7D;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AAIA,OAAO,MAAMC,cAAwB,GAAG,MAAM;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,EAAxC;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAmB;AACtC,QACE,uEAAuEC,IAAvE,CACED,KADF,CADF,EAKE,OAAO,IAAP;AACF,WAAO,KAAP;AACD,GARD;;AAUA,QAAME,YAAY,GAAIC,CAAD,IAA4C;AAC/D,UAAMC,EAAE,GAAGD,CAAC,CAACE,MAAb;AACA,UAAML,KAAK,GAAGI,EAAE,CAACJ,KAAjB;;AACA,QAAID,YAAY,CAACC,KAAD,CAAhB,EAAyB;AACvBJ,MAAAA,QAAQ,CAACI,KAAD,CAAR;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACA;AACD;;AACDA,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GATD;;AAWA,QAAMQ,YAAY,GAAG,OACnBH,CADmB,KAEhB;AACH,QAAIR,KAAJ,EAAW;AACT,UAAI;AACF,cAAMY,GAAG,GAAG,MAAMd,kBAAkB,CAACE,KAAD,CAApC;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAHD,CAGE,OAAOG,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF;AACF,GAXD;;AAYA,sBACE,uDACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,YAAY,EAAE;AAFT,KADT;AAKE,IAAA,QAAQ,EAAEV,YALZ;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,IAAI,EAAC,uBAPP;AAQE,IAAA,MAAM,eACJ,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAE;AAAEW,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,MAAM,EAAE,CAAtB;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAFT;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,OAAO,EAAET,YAJX;AAKE,MAAA,QAAQ,EAAET,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAwBD,CA7DM","sourcesContent":["import { MDBBtn, MDBContainer, MDBIcon, MDBInputGroup } from \"mdbreact\";\nimport React, { useState } from \"react\";\nimport { getCustomerByEmail } from \"../../kustomer.api\";\n\ninterface ICustomerSearchProps {}\n\nexport const CustomerSearch: React.FC = () => {\n  const [email, setEmail] = useState<string | undefined>();\n  const [disabled, setDisabled] = useState<boolean>();\n\n  const isValidEmail = (value: string) => {\n    if (\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        value\n      )\n    )\n      return true;\n    return false;\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const el = e.target;\n    const value = el.value;\n    if (isValidEmail(value)) {\n      setEmail(value);\n      setDisabled(false);\n      return;\n    }\n    setDisabled(true);\n  };\n\n  const handleSubmit = async (\n    e: React.SyntheticEvent<HTMLButtonElement, Event>\n  ) => {\n    if (email) {\n      try {\n        const res = await getCustomerByEmail(email);\n        console.log(res);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  return (\n    <>\n      <MDBInputGroup\n        style={{\n          display: \"flex\",\n          alignContent: \"center\",\n        }}\n        onChange={handleChange}\n        type=\"email\"\n        hint=\"Search Customer Email\"\n        append={\n          <MDBBtn\n            type=\"submit\"\n            style={{ padding: 0, margin: 0, width: 50 }}\n            color=\"blue\"\n            onClick={handleSubmit}\n            disabled={disabled}\n          >\n            <MDBIcon icon=\"fas fa-search\" />\n          </MDBBtn>\n        }\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}