{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/auth/AuthContext.tsx\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport firebase from \"firebase/app\";\nexport const DEFAULT_AUTH_CONTEXT_VALUE = {\n  checkedAuth: false,\n  currentUser: null,\n  signedIn: false,\n  signInWithGoogle: async () => {\n    return;\n  },\n  signOut: async () => {\n    return;\n  }\n};\nconst AuthContext = createContext(DEFAULT_AUTH_CONTEXT_VALUE);\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport const AuthProvider = props => {\n  const [currentUser, setCurrentUser] = useState();\n  const [signedIn, setSignedIn] = useState(false);\n  const [checkedAuth, setCheckedAuth] = useState(false);\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return auth.signInWithRedirect(provider);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signInWithGoogle\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/auth/AuthContext.tsx"],"names":["React","createContext","useContext","useEffect","useState","auth","firebase","DEFAULT_AUTH_CONTEXT_VALUE","checkedAuth","currentUser","signedIn","signInWithGoogle","signOut","AuthContext","useAuth","AuthProvider","props","setCurrentUser","setSignedIn","setCheckedAuth","provider","GoogleAuthProvider","signInWithRedirect","unsubscribe","onAuthStateChanged","user","value","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,OAAO,MAAMC,0BAA6C,GAAG;AAC3DC,EAAAA,WAAW,EAAE,KAD8C;AAE3DC,EAAAA,WAAW,EAAE,IAF8C;AAG3DC,EAAAA,QAAQ,EAAE,KAHiD;AAI3DC,EAAAA,gBAAgB,EAAE,YAAY;AAC5B;AACD,GAN0D;AAO3DC,EAAAA,OAAO,EAAE,YAAY;AACnB;AACD;AAT0D,CAAtD;AAYP,MAAMC,WAAW,GAAGZ,aAAa,CAC/BM,0BAD+B,CAAjC;AAIA,OAAO,SAASO,OAAT,GAAmB;AACxB,SAAOZ,UAAU,CAACW,WAAD,CAAjB;AACD;AAED,OAAO,MAAME,YAAiD,GAAIC,KAAD,IAAW;AAC1E,QAAM,CAACP,WAAD,EAAcQ,cAAd,IAAgCb,QAAQ,EAA9C;AACA,QAAM,CAACM,QAAD,EAAWQ,WAAX,IAA0Bd,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM,CAACI,WAAD,EAAcW,cAAd,IAAgCf,QAAQ,CAAU,KAAV,CAA9C;;AAEA,QAAMO,gBAAgB,GAAG,MAAM;AAC7B,UAAMS,QAAQ,GAAG,IAAId,QAAQ,CAACD,IAAT,CAAcgB,kBAAlB,EAAjB;AACA,WAAOhB,IAAI,CAACiB,kBAAL,CAAwBF,QAAxB,CAAP;AACD,GAHD;;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,WAAW,GAAGlB,IAAI,CAACmB,kBAAL,CAAyBC,IAAD,IAAU;AACpDR,MAAAA,cAAc,CAACQ,IAAD,CAAd;AACD,KAFmB,CAApB;AAIA,WAAOF,WAAP;AACD,GANQ,EAMN,EANM,CAAT;AAQA,QAAMG,KAAK,GAAG;AACZjB,IAAAA,WADY;AAEZE,IAAAA;AAFY,GAAd;AAKA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEe,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCV,KAAK,CAACW,QAA3C,CADF;AAGD,CA1BM","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport firebase from \"firebase/app\";\n\nexport const DEFAULT_AUTH_CONTEXT_VALUE: IAuthContextValue = {\n  checkedAuth: false,\n  currentUser: null,\n  signedIn: false,\n  signInWithGoogle: async () => {\n    return;\n  },\n  signOut: async () => {\n    return;\n  },\n};\n\nconst AuthContext = createContext<IAuthContextValue>(\n  DEFAULT_AUTH_CONTEXT_VALUE\n);\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport const AuthProvider: React.FC<IAuthContextProviderProps> = (props) => {\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>();\n  const [signedIn, setSignedIn] = useState<boolean>(false);\n  const [checkedAuth, setCheckedAuth] = useState<boolean>(false);\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return auth.signInWithRedirect(provider);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signInWithGoogle,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>{props.children}</AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}