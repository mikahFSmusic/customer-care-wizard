{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/FormComponents/ImageUpload.tsx\";\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\"; // allows passing of url from parent element\n// (could implement a fetch to database for updating for contents)\n// TODO: implement reference/registering of field with react-hook-form\n\nexport const ImageUpload = props => {\n  const [imageData, setImageData] = useState([]);\n  const [url, setURL] = useState(\"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\");\n  const placeholder = \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\";\n\n  if (props.imageURL && url !== placeholder) {\n    setURL(props.imageURL);\n  }\n\n  const handleFileChange = event => {\n    const el = event.target;\n    console.log(el);\n    const newURL = el.files ? el.files : url;\n    handleFileUpload(newURL);\n  };\n\n  const handleFileUpload = async files => {\n    const imageData = new FormData();\n    console.log(files);\n\n    for (let i = 0; i < files.length; i++) {\n      imageData.append(\"images\", files[i]);\n    } // imageData.append(\"images\", files);\n\n\n    console.log(imageData);\n    const url = `http://localhost:4000/upload-damage-image`;\n    const config = {\n      method: \"POST\",\n      body: imageData\n    };\n\n    try {\n      const req = await fetch(url, config);\n      console.log(req);\n\n      if (req.ok) {\n        const res = await req.json();\n        console.log(res);\n\n        if (res.success) {\n          setImageData(res.images);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.File, {\n    name: \"images\",\n    type: \"file\",\n    accept: \"image/png image/jpeg\",\n    onChange: handleFileChange,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), imageData === null || imageData === void 0 ? void 0 : imageData.map(image => console.log(image[\"location\"])));\n};","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/FormComponents/ImageUpload.tsx"],"names":["React","useState","Form","ImageUpload","props","imageData","setImageData","url","setURL","placeholder","imageURL","handleFileChange","event","el","target","console","log","newURL","files","handleFileUpload","FormData","i","length","append","config","method","body","req","fetch","ok","res","json","success","images","error","map","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CAEA;AACA;AACA;;AAKA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AACtD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAC5B,yHAD4B,CAA9B;AAIA,QAAMQ,WAAW,GACf,yHADF;;AAGA,MAAIL,KAAK,CAACM,QAAN,IAAkBH,GAAG,KAAKE,WAA9B,EAA2C;AACzCD,IAAAA,MAAM,CAACJ,KAAK,CAACM,QAAP,CAAN;AACD;;AAED,QAAMC,gBAAgB,GAAIC,KAAD,IAAgD;AACvE,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACA,UAAMI,MAAM,GAAGJ,EAAE,CAACK,KAAH,GAAWL,EAAE,CAACK,KAAd,GAAsBX,GAArC;AACAY,IAAAA,gBAAgB,CAACF,MAAD,CAAhB;AACD,GALD;;AAOA,QAAME,gBAAgB,GAAG,MAAOD,KAAP,IAAsB;AAC7C,UAAMb,SAAS,GAAG,IAAIe,QAAJ,EAAlB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrChB,MAAAA,SAAS,CAACkB,MAAV,CAAiB,QAAjB,EAA2BL,KAAK,CAACG,CAAD,CAAhC;AACD,KAL4C,CAM7C;;;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AAEA,UAAME,GAAG,GAAI,2CAAb;AAEA,UAAMiB,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAErB;AAFO,KAAf;;AAIA,QAAI;AACF,YAAMsB,GAAG,GAAG,MAAMC,KAAK,CAACrB,GAAD,EAAMiB,MAAN,CAAvB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;;AACA,UAAIA,GAAG,CAACE,EAAR,EAAY;AACV,cAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAlB;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;;AACA,YAAIA,GAAG,CAACE,OAAR,EAAiB;AACf1B,UAAAA,YAAY,CAACwB,GAAG,CAACG,MAAL,CAAZ;AACD;AACF;AACF,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACD;AACF,GA5BD;;AA6BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAC,sBAHT;AAIE,IAAA,QAAQ,EAAEvB,gBAJZ;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWGN,SAXH,aAWGA,SAXH,uBAWGA,SAAS,CAAE8B,GAAX,CAAgBC,KAAD,IACdrB,OAAO,CAACC,GAAR,CAAYoB,KAAK,CAAC,UAAD,CAAjB,CADD,CAXH,CADF;AAkBD,CAnEM","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\n// allows passing of url from parent element\n// (could implement a fetch to database for updating for contents)\n// TODO: implement reference/registering of field with react-hook-form\ninterface ImageUploadProps {\n  imageURL?: string;\n}\n\nexport const ImageUpload = (props: ImageUploadProps) => {\n  const [imageData, setImageData] = useState([]);\n  const [url, setURL] = useState<string>(\n    \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\"\n  );\n\n  const placeholder =\n    \"https://images.ctfassets.net/0jkr5d02o14t/4Tsq7upvRUHBdW4HwzeNEy/7f140b351543035dae54015d634c0df4/placeholder.png?h=250\";\n\n  if (props.imageURL && url !== placeholder) {\n    setURL(props.imageURL);\n  }\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const el = event.target as HTMLInputElement;\n    console.log(el);\n    const newURL = el.files ? el.files : url;\n    handleFileUpload(newURL);\n  };\n\n  const handleFileUpload = async (files: any) => {\n    const imageData = new FormData();\n    console.log(files);\n    for (let i = 0; i < files.length; i++) {\n      imageData.append(\"images\", files[i])\n    }\n    // imageData.append(\"images\", files);\n    console.log(imageData);\n\n    const url = `http://localhost:4000/upload-damage-image`;\n\n    const config = {\n      method: \"POST\",\n      body: imageData,\n    };\n    try {\n      const req = await fetch(url, config);\n      console.log(req);\n      if (req.ok) {\n        const res = await req.json();\n        console.log(res);\n        if (res.success) {\n          setImageData(res.images);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div>\n      <Form.File\n        name=\"images\"\n        type=\"file\"\n        accept=\"image/png image/jpeg\"\n        onChange={handleFileChange}\n        multiple\n      >\n      </Form.File>\n      <br />\n      <br />\n      {imageData?.map((image)=> (\n        console.log(image[\"location\"])\n      ))}\n\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}