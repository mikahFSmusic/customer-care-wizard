{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/auth/Auth.tsx\";\nimport React, { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { auth } from \"../../firebase\";\n// export interface IAuthContextValue {\n//   checkedAuth: boolean;\n//   user: IUser | null;\n//   signedIn: boolean;\n//   openAuthModal: () => void;\n//   closeAuthModal: () => void;\n//   resetPassword: (email: string) => Promise<void>;\n//   signOut: () => Promise<void>;\n//   authModalIsOpen: boolean;\n//   signIn: (provider: firebase.auth.GoogleAuthProvider) => Promise<void>;\n//   signUp: (email: string, password: string) => Promise<void>;\n// }\nexport const DEFAULT_AUTH_CONTEXT_VALUE = {\n  checkedAuth: false,\n  user: null,\n  signedIn: false,\n  authModalIsOpen: false,\n  openAuthModal: () => {\n    return;\n  },\n  closeAuthModal: () => {\n    return;\n  },\n  resetPassword: async () => {\n    return;\n  },\n  signOut: async () => {\n    return;\n  },\n  signUp: async () => {\n    return;\n  },\n  signIn: async () => {\n    return;\n  }\n};\nexport const AuthContext = createContext(DEFAULT_AUTH_CONTEXT_VALUE);\nexport const AuthContextProvider = props => {\n  const [checkedAuth, setCheckedAuth] = useState(false);\n  const [signedIn, setSignedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [authModalIsOpen, setAuthModalIsOpen] = useState(false);\n  const provider = new firebase.auth.GoogleAuthProvider();\n  const openAuthModal = useCallback(() => {\n    setAuthModalIsOpen(true);\n  }, []);\n  const closeAuthModal = useCallback(() => {\n    setAuthModalIsOpen(false);\n  }, []);\n  const signOut = useCallback(() => {\n    return auth.signOut();\n  }, []);\n  const signIn = useCallback(async provider => {\n    await auth.signInWithRedirect(provider);\n  }, []);\n  const signUp = useCallback(async (email, password) => {\n    await auth.createUserWithEmailAndPassword(email, password);\n  }, []);\n  const resetPassword = useCallback(email => {\n    return firebase.auth().sendPasswordResetEmail(email).catch(() => {});\n  }, []);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(currentUser => {\n      setCheckedAuth(true);\n\n      if (!currentUser) {\n        setSignedIn(false);\n        setUser(null);\n      } else {\n        setUser({\n          email: typeof currentUser.email === \"string\" ? currentUser.email : \"\",\n          uid: currentUser.uid\n        });\n        setSignedIn(true);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      checkedAuth,\n      user,\n      signedIn,\n      authModalIsOpen,\n      openAuthModal,\n      closeAuthModal,\n      resetPassword,\n      signOut,\n      signIn,\n      signUp\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport function useAuth() {\n  return useContext(AuthContext);\n}","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/auth/Auth.tsx"],"names":["React","createContext","useCallback","useContext","useEffect","useState","firebase","auth","DEFAULT_AUTH_CONTEXT_VALUE","checkedAuth","user","signedIn","authModalIsOpen","openAuthModal","closeAuthModal","resetPassword","signOut","signUp","signIn","AuthContext","AuthContextProvider","props","setCheckedAuth","setSignedIn","setUser","setAuthModalIsOpen","provider","GoogleAuthProvider","signInWithRedirect","email","password","createUserWithEmailAndPassword","sendPasswordResetEmail","catch","unsubscribe","onAuthStateChanged","currentUser","uid","children","useAuth"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nexport interface IUser {\n  email: string;\n  uid: string;\n}\n\n// export interface IAuthContextValue {\n//   checkedAuth: boolean;\n//   user: IUser | null;\n//   signedIn: boolean;\n//   openAuthModal: () => void;\n//   closeAuthModal: () => void;\n//   resetPassword: (email: string) => Promise<void>;\n//   signOut: () => Promise<void>;\n//   authModalIsOpen: boolean;\n//   signIn: (provider: firebase.auth.GoogleAuthProvider) => Promise<void>;\n//   signUp: (email: string, password: string) => Promise<void>;\n// }\n\nexport const DEFAULT_AUTH_CONTEXT_VALUE: IAuthContextValue = {\n  checkedAuth: false,\n  user: null,\n  signedIn: false,\n  authModalIsOpen: false,\n  openAuthModal: () => {\n    return;\n  },\n  closeAuthModal: () => {\n    return;\n  },\n  resetPassword: async () => {\n    return;\n  },\n  signOut: async () => {\n    return;\n  },\n  signUp: async () => {\n    return;\n  },\n  signIn: async () => {\n    return;\n  },\n};\n\nexport const AuthContext = createContext<IAuthContextValue>(\n  DEFAULT_AUTH_CONTEXT_VALUE\n);\n\nexport const AuthContextProvider: React.FC<IAuthContextProviderProps> = (\n  props\n) => {\n  const [checkedAuth, setCheckedAuth] = useState(false);\n  const [signedIn, setSignedIn] = useState(false);\n  const [user, setUser] = useState<IUser | null>(null);\n  const [authModalIsOpen, setAuthModalIsOpen] = useState(false);\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  const openAuthModal = useCallback(() => {\n    setAuthModalIsOpen(true);\n  }, []);\n\n  const closeAuthModal = useCallback(() => {\n    setAuthModalIsOpen(false);\n  }, []);\n\n  const signOut = useCallback(() => {\n    return auth.signOut();\n  }, []);\n\n  const signIn = useCallback(\n    async (provider: firebase.auth.GoogleAuthProvider) => {\n      await auth.signInWithRedirect(provider);\n    },\n    []\n  );\n\n  const signUp = useCallback(async (email: string, password: string) => {\n    await auth.createUserWithEmailAndPassword(email, password);\n  }, []);\n\n  const resetPassword = useCallback((email: string) => {\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .catch(() => {});\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((currentUser) => {\n      setCheckedAuth(true);\n      if (!currentUser) {\n        setSignedIn(false);\n        setUser(null);\n      } else {\n        setUser({\n          email: typeof currentUser.email === \"string\" ? currentUser.email : \"\",\n          uid: currentUser.uid,\n        });\n        setSignedIn(true);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        checkedAuth,\n        user,\n        signedIn,\n        authModalIsOpen,\n        openAuthModal,\n        closeAuthModal,\n        resetPassword,\n        signOut,\n        signIn,\n        signUp,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\nexport function useAuth(): IAuthContextValue {\n  return useContext(AuthContext);\n}\n"]},"metadata":{},"sourceType":"module"}