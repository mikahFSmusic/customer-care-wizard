{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx\";\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport LevelOneHead from \"./LevelOne\";\nimport LevelTwoHead from \"./LevelTwo\";\nimport LevelThreeHead from \"./LevelThree\";\nimport OfferDiscount from \"./FormComponents/OfferDiscount\";\nimport RefundAmount from \"./FormComponents/RefundAmount\";\nimport ItemAmount from \"./FormComponents/ItemAmount\";\n\nconst DDForm = props => {\n  let level = '';\n  const [levelHeadElement, setLevelHeadElement] = useState();\n  const [imageUploadElements, setImageUploadElements] = useState([]);\n  const [offerDiscountElement, setOfferDiscountElement] = useState();\n  const [refundAmountElement, setRefundAmountElement] = useState();\n  const [itemAmountElement, setItemAmountElement] = useState();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const setLevel = newLevel => {\n    level = newLevel;\n  };\n\n  const handleLevelChange = event => {\n    const el = event.target;\n    const value = el.value;\n    setLevel(value);\n\n    if (value === \"Level 1\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(LevelOneHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 27\n        }\n      }));\n      setImageUploadElements([/*#__PURE__*/React.createElement(Form.File, {\n        key: \"image1\",\n        name: \"image1\",\n        ref: register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      })]);\n      setOfferDiscountElement( /*#__PURE__*/React.createElement(OfferDiscount, {\n        ref: register,\n        onChange: handleOfferDiscount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }));\n    } else if (value === \"Level 2\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(LevelTwoHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 27\n        }\n      }));\n      setImageUploadElements([/*#__PURE__*/React.createElement(Form.File, {\n        key: \"image1\",\n        name: \"image1\",\n        ref: register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Form.File, {\n        key: \"image2\",\n        name: \"image2\",\n        ref: register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Form.File, {\n        key: \"image3\",\n        name: \"image3\",\n        ref: register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      })]);\n      setOfferDiscountElement( /*#__PURE__*/React.createElement(OfferDiscount, {\n        ref: register,\n        onChange: handleOfferDiscount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }));\n    } else if (value === \"Level 3\") {\n      setLevelHeadElement( /*#__PURE__*/React.createElement(LevelThreeHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 27\n        }\n      }));\n      setImageUploadElements([/*#__PURE__*/React.createElement(Form.File, {\n        key: \"image1\",\n        name: \"image1\",\n        ref: register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Form.File, {\n        key: \"image2\",\n        name: \"image2\",\n        ref: register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Form.File, {\n        key: \"image3\",\n        name: \"image3\",\n        ref: register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      })]);\n    }\n  };\n\n  const handleOfferDiscount = event => {\n    const el = event.target;\n    const value = el.value;\n    console.log(value);\n    console.log(level); // TODO: need a step to check if the item is out of stock\n\n    if (level === \"Level 1\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n        console.log(\"Level 1 Discount\");\n      } else if (value === \"Refund\") {\n        setRefundAmountElement( /*#__PURE__*/React.createElement(RefundAmount, {\n          ref: register,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 32\n          }\n        })); //Submit\n      } else if (value === \"Replacement\") {//Narvar Return\n      }\n    } else if (level === \"level 2\") {\n      if (value === \"Discount\") {// Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement( /*#__PURE__*/React.createElement(RefundAmount, {\n          ref: register,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 32\n          }\n        }));\n      } else if (value === \"Replacement\") {\n        setItemAmountElement( /*#__PURE__*/React.createElement(ItemAmount, {\n          onChange: handleItemAmount,\n          ref: register,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 30\n          }\n        }));\n      }\n    }\n  };\n\n  const handleItemAmount = event => {\n    const el = event.target;\n    const value = el.value;\n\n    if (value === \"Over $50\") {} else if (value === \"Under $50\") {}\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Damaged/Defective Form\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Purchase Received\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"purchaseReceived\",\n    as: \"select\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"No\")), errors.purchaseReceived && \"receipt status is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Order #\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"orderNumber\",\n    placeholder: \"Order #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), errors.orderNumber && \"Order # is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Vendor\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"vendor\",\n    as: \"select\",\n    defaultValue: \"Choose Vendor...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), vendorList.map(vendor => /*#__PURE__*/React.createElement(\"option\", {\n    key: vendor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, vendor))), errors.vendor && \"Vendor required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"SKU #\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"skuNumber\",\n    placeholder: \"SKU #\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), errors.skuNumber && \"SKU # is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Damge Level\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"damageLevel\",\n    as: \"select\",\n    defaultValue: \"Damage Level...\",\n    ref: register({\n      required: true\n    }),\n    onChange: handleLevelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }), damageLevels.map(level => /*#__PURE__*/React.createElement(\"option\", {\n    key: level,\n    value: level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, level))), errors.damageLevel && \"Please select damage level\"), levelHeadElement, imageUploadElements, offerDiscountElement, refundAmountElement, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default DDForm;\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/src/components/DamageDefectForm/DamageDefectFormV2.tsx"],"names":["React","Form","Button","useState","useForm","LevelOneHead","LevelTwoHead","LevelThreeHead","OfferDiscount","RefundAmount","ItemAmount","DDForm","props","level","levelHeadElement","setLevelHeadElement","imageUploadElements","setImageUploadElements","offerDiscountElement","setOfferDiscountElement","refundAmountElement","setRefundAmountElement","itemAmountElement","setItemAmountElement","register","handleSubmit","errors","setLevel","newLevel","handleLevelChange","event","el","target","value","handleOfferDiscount","console","log","handleItemAmount","onSubmit","data","required","purchaseReceived","orderNumber","vendorList","map","vendor","skuNumber","damageLevels","damageLevel"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport LevelOneHead from \"./LevelOne\";\nimport LevelTwoHead from \"./LevelTwo\";\nimport LevelThreeHead from \"./LevelThree\";\nimport OfferDiscount from \"./FormComponents/OfferDiscount\";\nimport RefundAmount from \"./FormComponents/RefundAmount\";\nimport ItemAmount from \"./FormComponents/ItemAmount\";\n\ninterface FormInputs {\n  purchaseReceived: string;\n  orderNumber: string;\n  vendor: string;\n  skuNumber: string;\n  damageLevel: string;\n}\n\nconst DDForm = (props: any) => {\n  let level:string = ''\n  const [levelHeadElement, setLevelHeadElement] = useState<JSX.Element>();\n  const [imageUploadElements, setImageUploadElements] = useState<\n    Array<JSX.Element>\n  >([]);\n  const [offerDiscountElement, setOfferDiscountElement] = useState<\n    JSX.Element\n  >();\n  const [refundAmountElement, setRefundAmountElement] = useState<JSX.Element>();\n  const [itemAmountElement, setItemAmountElement] = useState<JSX.Element>();\n  const { register, handleSubmit, errors } = useForm<FormInputs>();\n\n  const setLevel = (newLevel:string) => {\n    level = newLevel\n  }\n\n  const handleLevelChange = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n    setLevel(value);\n\n    if (value === \"Level 1\") {\n      setLevelHeadElement(<LevelOneHead></LevelOneHead>);\n      setImageUploadElements([\n        <Form.File key=\"image1\" name=\"image1\" ref={register} />,\n      ]);\n      setOfferDiscountElement(\n        <OfferDiscount ref={register} onChange={handleOfferDiscount} />\n      );\n    } else if (value === \"Level 2\") {\n      setLevelHeadElement(<LevelTwoHead></LevelTwoHead>);\n      setImageUploadElements([\n        <Form.File key=\"image1\" name=\"image1\" ref={register} />,\n        <Form.File key=\"image2\" name=\"image2\" ref={register} />,\n        <Form.File key=\"image3\" name=\"image3\" ref={register} />,\n      ]);\n      setOfferDiscountElement(\n        <OfferDiscount ref={register} onChange={handleOfferDiscount} />\n      );\n    } else if (value === \"Level 3\") {\n      setLevelHeadElement(<LevelThreeHead></LevelThreeHead>);\n      setImageUploadElements([\n        <Form.File key=\"image1\" name=\"image1\" ref={register} />,\n        <Form.File key=\"image2\" name=\"image2\" ref={register} />,\n        <Form.File key=\"image3\" name=\"image3\" ref={register} />,\n      ]);\n    }\n  };\n\n  const handleOfferDiscount = (event: ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n    console.log(value);\n    console.log(level);\n    // TODO: need a step to check if the item is out of stock\n    if (level === \"Level 1\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n        console.log(\"Level 1 Discount\")\n      } else if (value === \"Refund\") {\n        setRefundAmountElement(<RefundAmount ref={register} />);\n        //Submit\n      } else if (value === \"Replacement\") {\n        //Narvar Return\n      }\n    } else if (level === \"level 2\") {\n      if (value === \"Discount\") {\n        // Issue discount, submit form?\n      } else if (value === \"Refund\") {\n        setRefundAmountElement(<RefundAmount ref={register}/>);\n      } else if (value === \"Replacement\") {\n        setItemAmountElement(<ItemAmount onChange={handleItemAmount} ref={register}/>)\n      }\n    }\n  };\n\n  const handleItemAmount = (event:ChangeEvent<any>) => {\n    const el = event.target as HTMLFormElement;\n    const value = el.value;\n\n    if (value === \"Over $50\") {\n\n    } else if (value === \"Under $50\") {\n\n    }\n  }\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <h2>Damaged/Defective Form</h2>\n      {/* Purchase Received */}\n      <Form.Group>\n        <Form.Label>Purchase Received</Form.Label>\n        <Form.Control\n          name=\"purchaseReceived\"\n          as=\"select\"\n          ref={register({ required: true })}\n        >\n          <option></option>\n          <option>Yes</option>\n          <option>No</option>\n        </Form.Control>\n        {errors.purchaseReceived && \"receipt status is required\"}\n      </Form.Group>\n\n      {/* Order # */}\n      <Form.Group>\n        <Form.Label>Order #</Form.Label>\n        <Form.Control\n          name=\"orderNumber\"\n          placeholder=\"Order #\"\n          ref={register({ required: true })}\n        ></Form.Control>\n        {errors.orderNumber && \"Order # is required\"}\n      </Form.Group>\n\n      {/* Vendor */}\n      <Form.Group>\n        <Form.Label>Vendor</Form.Label>\n        <Form.Control\n          name=\"vendor\"\n          as=\"select\"\n          defaultValue=\"Choose Vendor...\"\n          ref={register({ required: true })}\n        >\n          <option></option>\n          {vendorList.map((vendor) => (\n            <option key={vendor}>{vendor}</option>\n          ))}\n        </Form.Control>\n        {errors.vendor && \"Vendor required\"}\n      </Form.Group>\n\n      {/* SKU Number */}\n      <Form.Group>\n        <Form.Label>SKU #</Form.Label>\n        <Form.Control\n          name=\"skuNumber\"\n          placeholder=\"SKU #\"\n          ref={register({ required: true })}\n        ></Form.Control>\n        {errors.skuNumber && \"SKU # is required\"}\n      </Form.Group>\n\n      {/* Damage Level */}\n      <Form.Group>\n        <Form.Label>Damge Level</Form.Label>\n        <Form.Control\n          name=\"damageLevel\"\n          as=\"select\"\n          defaultValue=\"Damage Level...\"\n          ref={register({ required: true })}\n          onChange={handleLevelChange}\n        >\n          <option></option>\n          {damageLevels.map((level) => (\n            <option key={level} value={level}>\n              {level}\n            </option>\n          ))}\n        </Form.Control>\n        {errors.damageLevel && \"Please select damage level\"}\n      </Form.Group>\n\n      {/* Level Paths */}\n      {levelHeadElement}\n      {imageUploadElements}\n      {offerDiscountElement}\n      {refundAmountElement}\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n};\n\nexport default DDForm;\n\nconst vendorList = [\"vendor1\", \"vendor2\", \"vendor3\", \"vendor4\", \"vendor 5\"];\nconst damageLevels = [\"Level 1\", \"Level 2\", \"Level 3\"];\n"]},"metadata":{},"sourceType":"module"}