{"ast":null,"code":"var _jsxFileName = \"/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/reportForm/FormContext.tsx\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { useCustomer } from \"../customer/CustomerContext\";\nexport const DEFAULT_FORM_CONTEXT_VALUE = {\n  orders: null,\n  addOrder: () => {\n    return;\n  },\n  removeOrder: () => {\n    return;\n  }\n};\nexport const FormContext = createContext(DEFAULT_FORM_CONTEXT_VALUE);\nexport const FormProvider = props => {\n  const {\n    customer\n  } = useCustomer();\n  const [selectedOrders, setSelectedOrders] = useState();\n\n  const addOrder = async order => {\n    if (order) {\n      setSelectedOrders(selectedOrders => selectedOrders === null || selectedOrders === void 0 ? void 0 : selectedOrders.concat({\n        orderNumber: order.attributes.data.orderNumber,\n        order\n      }));\n    }\n  };\n\n  const removeOrder = async order => {\n    if (order && selectedOrders) {\n      selectedOrders.forEach((selectedOrder, index) => {\n        if (selectedOrder.orderNumber === order.attributes.data.orderNumber) {\n          selectedOrders.splice(index);\n          setSelectedOrders(selectedOrders);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: {\n      orders: selectedOrders,\n      addOrder,\n      removeOrder\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport function useForm() {\n  return useContext(FormContext);\n}","map":{"version":3,"sources":["/Users/mfs/Desktop/e m p l o y m e n t/Maisonette/Projects/damage-defect-wizard/client/src/modules/reportForm/FormContext.tsx"],"names":["React","createContext","useContext","useState","useCustomer","DEFAULT_FORM_CONTEXT_VALUE","orders","addOrder","removeOrder","FormContext","FormProvider","props","customer","selectedOrders","setSelectedOrders","order","concat","orderNumber","attributes","data","forEach","selectedOrder","index","splice","children","useForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAYA,OAAO,MAAMC,0BAA6C,GAAG;AAC3DC,EAAAA,MAAM,EAAE,IADmD;AAE3DC,EAAAA,QAAQ,EAAE,MAAM;AACd;AACD,GAJ0D;AAK3DC,EAAAA,WAAW,EAAE,MAAM;AACjB;AACD;AAP0D,CAAtD;AAUP,OAAO,MAAMC,WAAW,GAAGR,aAAa,CACtCI,0BADsC,CAAjC;AAIP,OAAO,MAAMK,YAAiD,GAAIC,KAAD,IAAW;AAC1E,QAAM;AAAEC,IAAAA;AAAF,MAAeR,WAAW,EAAhC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,EAApD;;AAEA,QAAMI,QAAQ,GAAG,MAAOQ,KAAP,IAAyB;AACxC,QAAIA,KAAJ,EAAW;AACTD,MAAAA,iBAAiB,CAAED,cAAD,IAChBA,cADgB,aAChBA,cADgB,uBAChBA,cAAc,CAAEG,MAAhB,CAAuB;AACrBC,QAAAA,WAAW,EAAEF,KAAK,CAACG,UAAN,CAAiBC,IAAjB,CAAsBF,WADd;AAErBF,QAAAA;AAFqB,OAAvB,CADe,CAAjB;AAMD;AACF,GATD;;AAWA,QAAMP,WAAW,GAAG,MAAOO,KAAP,IAAyB;AAC3C,QAAIA,KAAK,IAAIF,cAAb,EAA6B;AAC3BA,MAAAA,cAAc,CAACO,OAAf,CAAuB,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;AAC/C,YAAID,aAAa,CAACJ,WAAd,KAA8BF,KAAK,CAACG,UAAN,CAAiBC,IAAjB,CAAsBF,WAAxD,EAAqE;AACnEJ,UAAAA,cAAc,CAACU,MAAf,CAAsBD,KAAtB;AACAR,UAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD;AACF,OALD;AAMD;AACF,GATD;;AAWA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEP,MAAAA,MAAM,EAAEO,cAAV;AAA0BN,MAAAA,QAA1B;AAAoCC,MAAAA;AAApC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGG,KAAK,CAACa,QAHT,CADF;AAOD,CAjCM;AAmCP,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOvB,UAAU,CAACO,WAAD,CAAjB;AACD","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\nimport { useCustomer } from \"../customer/CustomerContext\";\n\ninterface IFormContextValue {\n  orders: ISelectedOrder[] | null | undefined;\n  addOrder: (order: IOrder) => void;\n  removeOrder: (order: IOrder) => void;\n}\n\ninterface IFormContextProviderProps {\n  children: React.ReactNode;\n}\n\nexport const DEFAULT_FORM_CONTEXT_VALUE: IFormContextValue = {\n  orders: null,\n  addOrder: () => {\n    return;\n  },\n  removeOrder: () => {\n    return;\n  },\n};\n\nexport const FormContext = createContext<IFormContextValue>(\n  DEFAULT_FORM_CONTEXT_VALUE\n);\n\nexport const FormProvider: React.FC<IFormContextProviderProps> = (props) => {\n  const { customer } = useCustomer();\n  const [selectedOrders, setSelectedOrders] = useState<ISelectedOrder[]>();\n\n  const addOrder = async (order: IOrder) => {\n    if (order) {\n      setSelectedOrders((selectedOrders) =>\n        selectedOrders?.concat({\n          orderNumber: order.attributes.data.orderNumber,\n          order,\n        })\n      );\n    }\n  };\n\n  const removeOrder = async (order: IOrder) => {\n    if (order && selectedOrders) {\n      selectedOrders.forEach((selectedOrder, index) => {\n        if (selectedOrder.orderNumber === order.attributes.data.orderNumber) {\n          selectedOrders.splice(index);\n          setSelectedOrders(selectedOrders);\n        }\n      });\n    }\n  };\n\n  return (\n    <FormContext.Provider\n      value={{ orders: selectedOrders, addOrder, removeOrder }}\n    >\n      {props.children}\n    </FormContext.Provider>\n  );\n};\n\nexport function useForm() {\n  return useContext(FormContext);\n}\n"]},"metadata":{},"sourceType":"module"}